diff --git a/assets/locales/en_US.json b/assets/locales/en_US.json
index 2b95957..18b20bc 100644
--- a/assets/locales/en_US.json
+++ b/assets/locales/en_US.json
@@ -1,5 +1,12 @@
 {
+  "manually": "Choose manually",
   "bot_qian_fan":"Qianfan robot",
+  "dark_model": "Dark Mode",
+  "normal_model": "Normal Mode",
+  "follow_system": "Follow System",
+  "follow_system_tips": "When enabled, it will follow the system to turn on or off Dark Mode",
+  "on":"Enabled",
+  "off":"Disabled",
   "you": "You",
   "button_cancel": "Cancel",
   "button_accomplish": "Accomplish",
@@ -9,7 +16,7 @@
   "button_login": "Log in",
   "button_signup": "Sign up",
   "button_logout": "Log out",
-  "button_setempty": "Set Empty",
+  "button_set_empty": "Set Empty",
   "button_confirm": "Confirm",
   "button_add": "Add",
   "button_delete": "Delete",
@@ -26,6 +33,7 @@
   "button_sign_in_google": "Sign in with Google",
   "button_sign_in_apple": "Sign in with Apple",
   "title_termofservices": "Terms of Service",
+  "selected_items": "%s selected items",
   "title_mine": "Mine",
   "title_contact": "Contacts",
   "title_message": "Messages",
@@ -244,9 +252,9 @@
   "not_turned_location_service": "Location services are not turned on",
   "or": "Or",
   "not_authorized_lat_long": "You have not authorized access to latitude and longitude",
-  "display_profle": "Display your profile",
+  "display_profile": "Display your profile",
   "make_yourself_visible": "Make yourself visible",
-  "make_yourself_ivisible": "Make yourself invisible",
+  "make_yourself_invisible": "Make yourself invisible",
   "no_more_data": "No more data",
   "initiate_chat": "New Chat",
   "my_qrcode": "My QR Code",
@@ -350,6 +358,7 @@
   "set_gender": "Set Gender",
   "signature": "Signature",
   "set_signature": "Set Signature",
+  "not_filled": "Not filled",
   "scan_result": "Scan Result",
   "user_not_exist": "User does not exist",
   "user_disabled_or_deleted": "User is disabled or deleted",
diff --git a/assets/locales/ru_RU.json b/assets/locales/ru_RU.json
index c1b10fa..de08dbc 100644
--- a/assets/locales/ru_RU.json
+++ b/assets/locales/ru_RU.json
@@ -1,5 +1,12 @@
 {
+  "manually": "Выбор вручную",
   "bot_qian_fan":"Qianfan робот",
+  "dark_model": "Темный режим",
+  "normal_model": "Обычный режим",
+  "follow_system": "Следовать за системой",
+  "follow_system_tips": "При включении будет следовать за системой для включения или отключения темного режима",
+  "on":"Включено",
+  "off": "Выключено",
   "you": "ты",
   "button_cancel": "Отмена",
   "button_accomplish": "Завершить",
@@ -9,7 +16,7 @@
   "button_login": "Войти",
   "button_signup": "Зарегистрироваться",
   "button_logout": "Выйти",
-  "button_setempty": "Очистить",
+  "button_set_empty": "Очистить",
   "button_confirm": "Подтвердить",
   "button_add": "Добавить",
   "button_delete": "Удалить",
@@ -26,6 +33,7 @@
   "button_sign_in_google": "Войти через Google",
   "button_sign_in_apple": "Войти через Apple",
   "title_termofservices": "Условия обслуживания",
+  "selected_items": "%s выбранных элементов",
   "title_mine": "Мой",
   "title_contact": "Контакты",
   "title_message": "Сообщения",
@@ -244,9 +252,9 @@
   "not_turned_location_service": "Вы еще не включили службу геолокации",
   "or": "или",
   "not_authorized_lat_long": "Вы еще не авторизовали доступ к широте и долготе",
-  "display_profle": "Показать ваш профиль",
+  "display_profile": "Показать ваш профиль",
   "make_yourself_visible": "Сделать себя видимым",
-  "make_yourself_ivisible": "Сделать себя невидимым",
+  "make_yourself_invisible": "Сделать себя невидимым",
   "no_more_data": "Нет больше данных",
   "initiate_chat": "Начать разговор",
   "my_qrcode": "Мой QR-код",
@@ -350,6 +358,7 @@
   "set_gender": "Установить пол",
   "signature": "Персональная подпись",
   "set_signature": "Установить персональную подпись",
+  "not_filled": "Не заполнено",
   "scan_result": "Результат сканирования",
   "user_not_exist": "Пользователь не существует",
   "user_disabled_or_deleted": "Пользователь заблокирован или удален",
diff --git a/assets/locales/zh_CN.json b/assets/locales/zh_CN.json
index cab5ac7..17f5e39 100644
--- a/assets/locales/zh_CN.json
+++ b/assets/locales/zh_CN.json
@@ -1,5 +1,12 @@
 {
+  "manually": "手动选择",
   "bot_qian_fan":"千帆机器人",
+  "dark_model": "深色模式",
+  "normal_model": "普通模式",
+  "follow_system": "跟随系统",
+  "follow_system_tips": "开启后,将跟随系统打开或关闭深色模式",
+  "on":"已开启",
+  "off":"已关闭",
   "you": "你",
   "button_cancel": "取消",
   "button_accomplish": "完成",
@@ -9,7 +16,7 @@
   "button_login": "登录",
   "button_signup": "注册",
   "button_logout": "注销",
-  "button_setempty": "置空",
+  "button_set_empty": "置空",
   "button_confirm": "确认",
   "button_add": "添加",
   "button_delete": "删除",
@@ -26,6 +33,7 @@
   "button_sign_in_google": "用 Google 登录",
   "button_sign_in_apple": "用 Apple 登录",
   "title_termofservices":"服务条款",
+  "selected_items": "%s 个选定项目",
   "title_mine": "我的",
   "title_contact": "联系人",
   "title_message": "消息",
@@ -244,9 +252,9 @@
   "not_turned_location_service": "您还没有打开位置信息服务",
   "or": "或者",
   "not_authorized_lat_long": "您还没有授权获取经纬度",
-  "display_profle": "显示你的资料",
+  "display_profile": "显示你的资料",
   "make_yourself_visible": "让自己可见",
-  "make_yourself_ivisible": "让自己不可见",
+  "make_yourself_invisible": "让自己不可见",
   "no_more_data": "没有更多数据了",
   "initiate_chat": "发起聊天",
   "my_qrcode": "我的二维码",
@@ -351,6 +359,7 @@
   "set_gender": "设置性别",
   "signature": "个性签名",
   "set_signature": "设置个性签名",
+  "not_filled": "未填写",
   "scan_result": "扫描结果",
   "user_not_exist": "用户不存在",
   "user_disabled_or_deleted": "用户被禁用或已删除",
diff --git a/assets/locales/zh_Hant.json b/assets/locales/zh_Hant.json
index 55cff75..61df4fc 100644
--- a/assets/locales/zh_Hant.json
+++ b/assets/locales/zh_Hant.json
@@ -1,5 +1,12 @@
 {
+  "manually": "手動選擇",
   "bot_qian_fan":"千帆機器人",
+  "dark_model": "深色模式",
+  "normal_model": "普通模式",
+  "follow_system": "跟隨系統",
+  "follow_system_tips": "啟用後，將跟隨系統打開或關閉深色模式",
+  "on":"已開啟",
+  "off": "已關閉",
   "you": "你",
   "button_cancel": "取消",
   "button_accomplish": "完成",
@@ -9,7 +16,7 @@
   "button_login": "登錄",
   "button_signup": "註帳",
   "button_logout": "登出",
-  "button_setempty": "置空",
+  "button_set_empty": "置空",
   "button_confirm": "確認",
   "button_add": "新增",
   "button_delete": "刪除",
@@ -26,6 +33,7 @@
   "button_sign_in_google": "用 Google 登錄",
   "button_sign_in_apple": "用 Apple 登錄",
   "title_termofservices": "服務條款",
+  "selected_items": "%s 個選定項目",
   "title_mine": "我的",
   "title_contact": "聯繫人",
   "title_message": "訊息",
@@ -244,9 +252,9 @@
   "not_turned_location_service": "您還沒有打開位置信息服務",
   "or": "或者",
   "not_authorized_lat_long": "您還沒有授權獲取經緯度",
-  "display_profle": "顯示你的資料",
+  "display_profile": "顯示你的資料",
   "make_yourself_visible": "讓自己可見",
-  "make_yourself_ivisible": "讓自己不可見",
+  "make_yourself_invisible": "讓自己不可見",
   "no_more_data": "沒有更多數據了",
   "initiate_chat": "發起群聊",
   "my_qrcode": "我的二維碼",
@@ -350,6 +358,7 @@
   "set_gender": "設置性別",
   "signature": "個性簽名",
   "set_signature": "設置個性簽名",
+  "not_filled": "未填寫",
   "scan_result": "掃描結果",
   "user_not_exist": "用戶不存在",
   "user_disabled_or_deleted": "用戶被禁用或已刪除",
diff --git a/doc/changelog.md b/doc/changelog.md
index 01e733d..5664ad6 100644
--- a/doc/changelog.md
+++ b/doc/changelog.md
@@ -1,3 +1,7 @@
+# 0.3.7
+* 新增 “深色模式”设置功能，配置“深色模式”相关样式；
+* 一些依赖升级，做相关代码调整；
+
 # 0.3.6
 * 修复默认情况读取多语言配置有误的问题
 * 修复聊天对话框里面的图片消息的相册效果iOS右滑退出聊天界面问题（IMBoyImageGallery 里面的 PopScope 还原为 WillPopScope）
diff --git a/lib/component/controller.dart b/lib/component/controller.dart
deleted file mode 100644
index 285dafe..0000000
--- a/lib/component/controller.dart
+++ /dev/null
@@ -1,25 +0,0 @@
-import 'package:flutter/material.dart';
-import 'package:get/get.dart';
-
-enum ThemeMode {
-  system, // 表示是系统默认的模式
-  light, // 是明亮模式
-  dark, // 是暗黑模式
-}
-
-class ThemeController extends GetxController {
-  //0:正常模式 1：黑夜模式
-  // ThemeMode _darkMode = ThemeMode.system;
-  // Get.find<ThemeController>().darkMode == 0
-  // ? Brightness.light
-  //     : Brightness.dark
-  var _darkMode = 0;
-
-  get darkMode => _darkMode;
-
-  void changeMode(value) {
-    _darkMode = value;
-    Get.changeTheme(Get.isDarkMode ? ThemeData.light() : ThemeData.dark());
-    update();
-  }
-}
diff --git a/lib/component/helper/func.dart b/lib/component/helper/func.dart
index 4070a12..6b4bbf1 100644
--- a/lib/component/helper/func.dart
+++ b/lib/component/helper/func.dart
@@ -4,10 +4,13 @@ import 'package:cached_network_image/cached_network_image.dart';
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/icon_image_provider.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/chat/chat/chat_view.dart';
 import 'package:imboy/service/assets.dart';
 import 'package:imboy/service/encrypter.dart';
+import 'package:imboy/service/storage.dart';
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:imboy/store/repository/contact_repo_sqlite.dart';
 
@@ -280,3 +283,23 @@ String formatBytes(int size, {int fractionDigits = 2, int num = 1024}) {
     'YB',
   ][multiple]}';
 }
+
+/// 获取本地 主题配置
+/// 0 白色
+/// 1 黑色
+/// 2 跟随系统
+getLocalProfileAboutThemeModel({
+  bool isUserCache = true,
+  int themeType = 0,
+}) {
+  int type =
+      isUserCache ? StorageService.to.getInt(Keys.themeType) ?? 0 : themeType;
+  iPrint("getLocalProfileAboutThemeModel $type");
+  if (type == 0) {
+    return ThemeMode.light;
+  } else if (type == 1) {
+    return ThemeMode.dark;
+  } else if (type == 2) {
+    return ThemeMode.system;
+  }
+}
diff --git a/lib/component/http/http_client.dart b/lib/component/http/http_client.dart
index 0eb49d6..11ba8cf 100644
--- a/lib/component/http/http_client.dart
+++ b/lib/component/http/http_client.dart
@@ -8,11 +8,13 @@ import 'package:dio_http2_adapter/dio_http2_adapter.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart' as getx;
+
+import 'package:imboy/config/const.dart';
+import 'package:imboy/config/init.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/helper/jwt.dart';
 import 'package:imboy/component/http/http_exceptions.dart';
-import 'package:imboy/config/const.dart';
-import 'package:imboy/config/init.dart';
+
 import 'package:imboy/service/encrypter.dart';
 import 'package:imboy/store/provider/user_provider.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
diff --git a/lib/component/http/http_interceptor.dart b/lib/component/http/http_interceptor.dart
index f602da2..925f105 100644
--- a/lib/component/http/http_interceptor.dart
+++ b/lib/component/http/http_interceptor.dart
@@ -1,8 +1,10 @@
 import 'dart:io';
 
 import 'package:dio/dio.dart';
-import 'package:imboy/component/helper/func.dart';
+
 import 'package:imboy/config/const.dart';
+import 'package:imboy/component/helper/func.dart';
+
 import 'package:imboy/store/repository/user_repo_local.dart';
 
 class IMBoyInterceptor extends Interceptor {
diff --git a/lib/component/launch_group.dart b/lib/component/launch_group.dart
index 09667f7..269d9d0 100644
--- a/lib/component/launch_group.dart
+++ b/lib/component/launch_group.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/group/group_select/group_select_view.dart';
 
 class LaunchGroupItem extends StatelessWidget {
@@ -17,7 +17,10 @@ class LaunchGroupItem extends StatelessWidget {
     return Container(
       decoration: const BoxDecoration(
         border: Border(
-          bottom: BorderSide(color: AppColors.LineColor, width: 0.3),
+          bottom: BorderSide(
+            // color: AppColors.LineColor,
+            width: 0.3,
+          ),
         ),
       ),
       alignment: Alignment.centerLeft,
@@ -77,7 +80,7 @@ class LaunchSearch extends StatelessWidget {
             style: const TextStyle(textBaseline: TextBaseline.alphabetic),
             decoration: InputDecoration(
               hintText: 'search'.tr,
-              hintStyle: TextStyle(color: AppColors.LineColor.withOpacity(0.7)),
+              // hintStyle: TextStyle(color: AppColors.LineColor.withOpacity(0.7)),
               border: InputBorder.none,
             ),
             onChanged: onChanged,
diff --git a/lib/component/locales/locales.dart b/lib/component/locales/locales.dart
index 4381b1b..4ddff86 100644
--- a/lib/component/locales/locales.dart
+++ b/lib/component/locales/locales.dart
@@ -2,8 +2,10 @@ import 'dart:io' show Platform;
 
 import 'package:flutter/widgets.dart';
 import 'package:get/get.dart';
-import 'package:imboy/component/locales/locales.g.dart';
+
 import 'package:imboy/config/const.dart';
+
+import 'package:imboy/component/locales/locales.g.dart';
 import 'package:imboy/service/storage.dart';
 
 class IMBoyTranslations extends Translations {
@@ -46,9 +48,7 @@ String jiffyLocal(String local) {
   // 'zh_tw': ZhTwLocale(),
   if (local == 'zh_Hans_CN' || local == 'zh-Hans-SG' || local == 'zh-Hans-CN') {
     local = 'zh_CN';
-  } else if (local == 'zh-Hant-HK') {
-    local = 'zh_Hant';
-  } else if (local == 'zh-Hant-TW') {
+  } else if (local == 'zh-Hant-HK' || local == 'zh-Hant-TW') {
     local = 'zh_Hant';
   } else if (local.startsWith('ru_')) {
     local = 'ru';
diff --git a/lib/component/locales/locales.g.dart b/lib/component/locales/locales.g.dart
index bd477f7..a82da2b 100644
--- a/lib/component/locales/locales.g.dart
+++ b/lib/component/locales/locales.g.dart
@@ -13,7 +13,15 @@ class AppTranslation {
 
 class LocaleKeys {
   LocaleKeys._();
+
+  static const manually = 'manually';
   static const bot_qian_fan = 'bot_qian_fan';
+  static const dark_model = 'dark_model';
+  static const normal_model = 'normal_model';
+  static const follow_system = 'follow_system';
+  static const follow_system_tips = 'follow_system_tips';
+  static const on = 'on';
+  static const off = 'off';
   static const you = 'you';
   static const button_cancel = 'button_cancel';
   static const button_accomplish = 'button_accomplish';
@@ -23,7 +31,7 @@ class LocaleKeys {
   static const button_login = 'button_login';
   static const button_signup = 'button_signup';
   static const button_logout = 'button_logout';
-  static const button_setempty = 'button_setempty';
+  static const button_set_empty = 'button_set_empty';
   static const button_confirm = 'button_confirm';
   static const button_add = 'button_add';
   static const button_delete = 'button_delete';
@@ -40,6 +48,7 @@ class LocaleKeys {
   static const button_sign_in_google = 'button_sign_in_google';
   static const button_sign_in_apple = 'button_sign_in_apple';
   static const title_termofservices = 'title_termofservices';
+  static const selected_items = 'selected_items';
   static const title_mine = 'title_mine';
   static const title_contact = 'title_contact';
   static const title_message = 'title_message';
@@ -264,9 +273,9 @@ class LocaleKeys {
   static const not_turned_location_service = 'not_turned_location_service';
   static const or = 'or';
   static const not_authorized_lat_long = 'not_authorized_lat_long';
-  static const display_profle = 'display_profle';
+  static const display_profile = 'display_profile';
   static const make_yourself_visible = 'make_yourself_visible';
-  static const make_yourself_ivisible = 'make_yourself_ivisible';
+  static const make_yourself_invisible = 'make_yourself_invisible';
   static const no_more_data = 'no_more_data';
   static const initiate_chat = 'initiate_chat';
   static const my_qrcode = 'my_qrcode';
@@ -372,6 +381,7 @@ class LocaleKeys {
   static const set_gender = 'set_gender';
   static const signature = 'signature';
   static const set_signature = 'set_signature';
+  static const not_filled = 'not_filled';
   static const scan_result = 'scan_result';
   static const user_not_exist = 'user_not_exist';
   static const user_disabled_or_deleted = 'user_disabled_or_deleted';
@@ -428,7 +438,14 @@ class LocaleKeys {
 
 class Locales {
   static const zh_CN = {
+    'manually': '手动选择',
     'bot_qian_fan': '千帆机器人',
+    'dark_model': '深色模式',
+    'normal_model': '普通模式',
+    'follow_system': '跟随系统',
+    'follow_system_tips': '开启后,将跟随系统打开或关闭深色模式',
+    'on': '已开启',
+    'off': '已关闭',
     'you': '你',
     'button_cancel': '取消',
     'button_accomplish': '完成',
@@ -438,7 +455,7 @@ class Locales {
     'button_login': '登录',
     'button_signup': '注册',
     'button_logout': '注销',
-    'button_setempty': '置空',
+    'button_set_empty': '置空',
     'button_confirm': '确认',
     'button_add': '添加',
     'button_delete': '删除',
@@ -455,6 +472,7 @@ class Locales {
     'button_sign_in_google': '用 Google 登录',
     'button_sign_in_apple': '用 Apple 登录',
     'title_termofservices': '服务条款',
+    'selected_items': '%s 个选定项目',
     'title_mine': '我的',
     'title_contact': '联系人',
     'title_message': '消息',
@@ -675,9 +693,9 @@ class Locales {
     'not_turned_location_service': '您还没有打开位置信息服务',
     'or': '或者',
     'not_authorized_lat_long': '您还没有授权获取经纬度',
-    'display_profle': '显示你的资料',
+    'display_profile': '显示你的资料',
     'make_yourself_visible': '让自己可见',
-    'make_yourself_ivisible': '让自己不可见',
+    'make_yourself_invisible': '让自己不可见',
     'no_more_data': '没有更多数据了',
     'initiate_chat': '发起聊天',
     'my_qrcode': '我的二维码',
@@ -782,6 +800,7 @@ class Locales {
     'set_gender': '设置性别',
     'signature': '个性签名',
     'set_signature': '设置个性签名',
+    'not_filled': '未填写',
     'scan_result': '扫描结果',
     'user_not_exist': '用户不存在',
     'user_disabled_or_deleted': '用户被禁用或已删除',
@@ -835,7 +854,15 @@ class Locales {
     'about_app': '关于应用',
   };
   static const en_US = {
+    'manually': 'Choose manually',
     'bot_qian_fan': 'Qianfan robot',
+    'dark_model': 'Dark Mode',
+    'normal_model': 'Normal Mode',
+    'follow_system': 'Follow System',
+    'follow_system_tips':
+        'When enabled, it will follow the system to turn on or off Dark Mode',
+    'on': 'Enabled',
+    'off': 'Disabled',
     'you': 'You',
     'button_cancel': 'Cancel',
     'button_accomplish': 'Accomplish',
@@ -845,7 +872,7 @@ class Locales {
     'button_login': 'Log in',
     'button_signup': 'Sign up',
     'button_logout': 'Log out',
-    'button_setempty': 'Set Empty',
+    'button_set_empty': 'Set Empty',
     'button_confirm': 'Confirm',
     'button_add': 'Add',
     'button_delete': 'Delete',
@@ -862,6 +889,7 @@ class Locales {
     'button_sign_in_google': 'Sign in with Google',
     'button_sign_in_apple': 'Sign in with Apple',
     'title_termofservices': 'Terms of Service',
+    'selected_items': '%s selected items',
     'title_mine': 'Mine',
     'title_contact': 'Contacts',
     'title_message': 'Messages',
@@ -1096,9 +1124,9 @@ class Locales {
     'or': 'Or',
     'not_authorized_lat_long':
         'You have not authorized access to latitude and longitude',
-    'display_profle': 'Display your profile',
+    'display_profile': 'Display your profile',
     'make_yourself_visible': 'Make yourself visible',
-    'make_yourself_ivisible': 'Make yourself invisible',
+    'make_yourself_invisible': 'Make yourself invisible',
     'no_more_data': 'No more data',
     'initiate_chat': 'New Chat',
     'my_qrcode': 'My QR Code',
@@ -1212,6 +1240,7 @@ class Locales {
     'set_gender': 'Set Gender',
     'signature': 'Signature',
     'set_signature': 'Set Signature',
+    'not_filled': 'Not filled',
     'scan_result': 'Scan Result',
     'user_not_exist': 'User does not exist',
     'user_disabled_or_deleted': 'User is disabled or deleted',
@@ -1269,7 +1298,15 @@ class Locales {
     'about_app': 'About app',
   };
   static const ru_RU = {
+    'manually': 'Выбор вручную',
     'bot_qian_fan': 'Qianfan робот',
+    'dark_model': 'Темный режим',
+    'normal_model': 'Обычный режим',
+    'follow_system': 'Следовать за системой',
+    'follow_system_tips':
+        'При включении будет следовать за системой для включения или отключения темного режима',
+    'on': 'Включено',
+    'off': 'Выключено',
     'you': 'ты',
     'button_cancel': 'Отмена',
     'button_accomplish': 'Завершить',
@@ -1279,7 +1316,7 @@ class Locales {
     'button_login': 'Войти',
     'button_signup': 'Зарегистрироваться',
     'button_logout': 'Выйти',
-    'button_setempty': 'Очистить',
+    'button_set_empty': 'Очистить',
     'button_confirm': 'Подтвердить',
     'button_add': 'Добавить',
     'button_delete': 'Удалить',
@@ -1296,6 +1333,7 @@ class Locales {
     'button_sign_in_google': 'Войти через Google',
     'button_sign_in_apple': 'Войти через Apple',
     'title_termofservices': 'Условия обслуживания',
+    'selected_items': '%s выбранных элементов',
     'title_mine': 'Мой',
     'title_contact': 'Контакты',
     'title_message': 'Сообщения',
@@ -1537,9 +1575,9 @@ class Locales {
     'or': 'или',
     'not_authorized_lat_long':
         'Вы еще не авторизовали доступ к широте и долготе',
-    'display_profle': 'Показать ваш профиль',
+    'display_profile': 'Показать ваш профиль',
     'make_yourself_visible': 'Сделать себя видимым',
-    'make_yourself_ivisible': 'Сделать себя невидимым',
+    'make_yourself_invisible': 'Сделать себя невидимым',
     'no_more_data': 'Нет больше данных',
     'initiate_chat': 'Начать разговор',
     'my_qrcode': 'Мой QR-код',
@@ -1652,6 +1690,7 @@ class Locales {
     'set_gender': 'Установить пол',
     'signature': 'Персональная подпись',
     'set_signature': 'Установить персональную подпись',
+    'not_filled': 'Не заполнено',
     'scan_result': 'Результат сканирования',
     'user_not_exist': 'Пользователь не существует',
     'user_disabled_or_deleted': 'Пользователь заблокирован или удален',
@@ -1709,7 +1748,14 @@ class Locales {
     'about_app': 'О приложении',
   };
   static const zh_Hant = {
+    'manually': '手動選擇',
     'bot_qian_fan': '千帆機器人',
+    'dark_model': '深色模式',
+    'normal_model': '普通模式',
+    'follow_system': '跟隨系統',
+    'follow_system_tips': '啟用後，將跟隨系統打開或關閉深色模式',
+    'on': '已開啟',
+    'off': '已關閉',
     'you': '你',
     'button_cancel': '取消',
     'button_accomplish': '完成',
@@ -1719,7 +1765,7 @@ class Locales {
     'button_login': '登錄',
     'button_signup': '註帳',
     'button_logout': '登出',
-    'button_setempty': '置空',
+    'button_set_empty': '置空',
     'button_confirm': '確認',
     'button_add': '新增',
     'button_delete': '刪除',
@@ -1736,6 +1782,7 @@ class Locales {
     'button_sign_in_google': '用 Google 登錄',
     'button_sign_in_apple': '用 Apple 登錄',
     'title_termofservices': '服務條款',
+    'selected_items': '%s 個選定項目',
     'title_mine': '我的',
     'title_contact': '聯繫人',
     'title_message': '訊息',
@@ -1956,9 +2003,9 @@ class Locales {
     'not_turned_location_service': '您還沒有打開位置信息服務',
     'or': '或者',
     'not_authorized_lat_long': '您還沒有授權獲取經緯度',
-    'display_profle': '顯示你的資料',
+    'display_profile': '顯示你的資料',
     'make_yourself_visible': '讓自己可見',
-    'make_yourself_ivisible': '讓自己不可見',
+    'make_yourself_invisible': '讓自己不可見',
     'no_more_data': '沒有更多數據了',
     'initiate_chat': '發起群聊',
     'my_qrcode': '我的二維碼',
@@ -2062,6 +2109,7 @@ class Locales {
     'set_gender': '設置性別',
     'signature': '個性簽名',
     'set_signature': '設置個性簽名',
+    'not_filled': '未填寫',
     'scan_result': '掃描結果',
     'user_not_exist': '用戶不存在',
     'user_disabled_or_deleted': '用戶被禁用或已刪除',
diff --git a/lib/component/location/amap_helper.dart b/lib/component/location/amap_helper.dart
index c0d5582..b6d54b6 100644
--- a/lib/component/location/amap_helper.dart
+++ b/lib/component/location/amap_helper.dart
@@ -6,8 +6,9 @@ import 'package:amap_flutter_location/amap_flutter_location.dart';
 import 'package:amap_flutter_location/amap_location_option.dart';
 import 'package:dio/dio.dart';
 import 'package:flutter/foundation.dart';
-import 'package:imboy/component/helper/permission.dart';
+
 import 'package:imboy/config/const.dart';
+import 'package:imboy/component/helper/permission.dart';
 
 /// https://lbs.amap.com/api/flutter/guide/positioning-flutter-plug-in/interface-info
 
diff --git a/lib/component/location/widget.dart b/lib/component/location/widget.dart
index cc81480..879ad8f 100644
--- a/lib/component/location/widget.dart
+++ b/lib/component/location/widget.dart
@@ -6,9 +6,9 @@ import 'package:amap_flutter_map/amap_flutter_map.dart';
 import 'package:easy_refresh/easy_refresh.dart';
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
-import 'package:imboy/config/const.dart';
 import 'package:sliding_up_panel/sliding_up_panel.dart';
 
+import 'package:imboy/config/const.dart';
 import 'amap_helper.dart';
 
 class SearchBarStyle {
@@ -219,13 +219,13 @@ class _MapLocationPickerState extends State<MapLocationPicker>
                         child: TextButton(
                           style: ButtonStyle(
                             backgroundColor: MaterialStateProperty.all<Color>(
-                              AppColors.primaryElement,
+                              Theme.of(context).colorScheme.primary,
                             ),
                           ),
                           child: Text(
                             'button_send'.tr,
-                            style: const TextStyle(
-                              color: AppColors.primaryElementText,
+                            style: TextStyle(
+                              color: Theme.of(context).colorScheme.onPrimary,
                               fontWeight: FontWeight.bold,
                             ),
                           ),
@@ -392,9 +392,11 @@ class _MapLocationPickerState extends State<MapLocationPicker>
                                   subtitle:
                                       Text("$distance${data[index].address}"),
                                   trailing: _selindex == index
-                                      ? const Icon(
+                                      ? Icon(
                                           Icons.check,
-                                          color: AppColors.ButtonTextColor,
+                                          color: Theme.of(context)
+                                              .colorScheme
+                                              .onPrimary,
                                         )
                                       : const SizedBox.shrink(),
                                 ),
@@ -406,10 +408,10 @@ class _MapLocationPickerState extends State<MapLocationPicker>
                     ),
                   );
                 } else {
-                  return const Center(
+                  return Center(
                     child: CircularProgressIndicator(
                       valueColor: AlwaysStoppedAnimation(
-                        AppColors.ButtonTextColor,
+                        Theme.of(context).colorScheme.onPrimary,
                       ),
                     ),
                   );
diff --git a/lib/component/message/message.dart b/lib/component/message/message.dart
index 903391d..8b69c6a 100644
--- a/lib/component/message/message.dart
+++ b/lib/component/message/message.dart
@@ -14,7 +14,7 @@ import 'package:open_file/open_file.dart';
 
 import 'package:imboy/component/extension/imboy_cache_manager.dart';
 import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/service/encrypter.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
 
@@ -105,7 +105,7 @@ class CustomMessageBuilder extends StatelessWidget {
       debugPrint("> on CustomMessageBuilder e ${e.toString()}");
     }
     return Container(
-      color: AppColors.ChatBg,
+      color: Theme.of(context).colorScheme.background,
       width: Get.width * 0.85,
       child: w,
     );
@@ -127,7 +127,6 @@ Widget messageMsgWidget(types.Message msg) {
     msgWidget = Text(
       msg.text,
       style: const TextStyle(
-        color: AppColors.MainTextColor,
         fontSize: 13.0,
       ),
       maxLines: 4,
@@ -138,13 +137,13 @@ Widget messageMsgWidget(types.Message msg) {
       n.Row([
         Text(
           "[${'file'.tr}] (${formatBytes(msg.size.truncate())})",
-          style: const TextStyle(color: AppColors.thirdElementText),
+          style: TextStyle(color: Theme.of(Get.context!).colorScheme.tertiary),
         )
       ]),
       n.Row([
         Text(
           msg.name,
-          style: const TextStyle(color: AppColors.thirdElementText),
+          style: TextStyle(color: Theme.of(Get.context!).colorScheme.tertiary),
         )
       ]),
     ])
@@ -182,8 +181,8 @@ Widget messageMsgWidget(types.Message msg) {
     String txt = msg.metadata?['quote_text'] ?? '';
     msgWidget = Text(
       "[${'quote'.tr}] $txt",
-      style: const TextStyle(
-        color: AppColors.MainTextColor,
+      style: TextStyle(
+        color: Theme.of(Get.context!).colorScheme.onPrimary,
         fontSize: 13.0,
       ),
       maxLines: 4,
@@ -241,12 +240,14 @@ void confirmOpenFile(String uri) {
       )
       ..actions = [
         n.Button('button_cancel'.tr.n)
-          ..style = n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+          ..style = n.NikuButtonStyle(
+              foregroundColor: Theme.of(Get.context!).colorScheme.onPrimary)
           ..onPressed = () {
             Navigator.of(context).pop();
           },
         n.Button('button_confirm'.tr.n)
-          ..style = n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+          ..style = n.NikuButtonStyle(
+              foregroundColor: Theme.of(Get.context!).colorScheme.onPrimary)
           ..onPressed = () async {
             Navigator.of(context).pop();
             File? tmpF = await IMBoyCacheManager().getSingleFile(
diff --git a/lib/component/message/message_audio_builder.dart b/lib/component/message/message_audio_builder.dart
index ee3ed1e..9b2f89e 100644
--- a/lib/component/message/message_audio_builder.dart
+++ b/lib/component/message/message_audio_builder.dart
@@ -10,7 +10,7 @@ import 'package:get/get.dart';
 
 import 'package:imboy/component/extension/imboy_cache_manager.dart';
 import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/service/encrypter.dart';
 import 'package:imboy/store/repository/message_repo_sqlite.dart';
 import 'package:voice_message_package/voice_message_package.dart';
@@ -27,6 +27,7 @@ class AudioMessageBuilder extends StatefulWidget {
     required this.message,
     this.onPlay,
   });
+
   final String type;
   final types.User user;
 
@@ -106,8 +107,8 @@ class _AudioMessageBuilderState extends State<AudioMessageBuilder> {
             size: 28,
             circlesColor: Colors.black38,
             activeSliderColor: userIsAuthor
-                ? AppColors.ChatSendMessageBgColor
-                : AppColors.ChatSentMessageBodyTextColor),
+                ? Theme.of(Get.context!).colorScheme.onPrimary
+                : Theme.of(Get.context!).colorScheme.onSecondary),
       ]),
     );
   }
diff --git a/lib/component/message/message_location_builder.dart b/lib/component/message/message_location_builder.dart
index 81fde8f..1ecbd59 100644
--- a/lib/component/message/message_location_builder.dart
+++ b/lib/component/message/message_location_builder.dart
@@ -9,7 +9,7 @@ import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/image_gallery/image_gallery.dart';
 
 // import 'package:imboy/component/helper/datetime.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:map_launcher/map_launcher.dart';
 import 'package:niku/namespace.dart' as n;
@@ -38,7 +38,7 @@ class LocationMessageBuilder extends StatelessWidget {
       // color: userIsAuthor
       //     ? AppColors.ChatSendMessageBgColor
       //     : AppColors.ChatReceivedMessageBodyBgColor,
-      color: AppColors.ChatReceivedMessageBodyBgColor,
+      color: Theme.of(Get.context!).colorScheme.background,
       nip: userIsAuthor ? BubbleNip.rightBottom : BubbleNip.leftBottom,
       // style: const BubbleStyle(nipWidth: 16),
       nipRadius: 4,
@@ -51,8 +51,11 @@ class LocationMessageBuilder extends StatelessWidget {
             InkWell(
               onTap: () {
                 Get.bottomSheet(
+                  backgroundColor: Get.isDarkMode
+                      ? const Color.fromRGBO(80, 80, 80, 1)
+                      : const Color.fromRGBO(240, 240, 240, 1),
                   Container(
-                    color: AppColors.primaryBackground,
+                    color: Theme.of(Get.context!).colorScheme.background,
                     child: availableMaps.isEmpty
                         ? Center(
                             child: Text('not_install_any_map_app'.tr),
@@ -96,7 +99,7 @@ class LocationMessageBuilder extends StatelessWidget {
                       message.metadata?['title'],
                       textAlign: TextAlign.left,
                       style: const TextStyle(
-                        color: AppColors.primaryText,
+                        // color: AppColors.primaryText,
                         fontSize: 15.0,
                       ),
                       maxLines: 4,
@@ -109,9 +112,10 @@ class LocationMessageBuilder extends StatelessWidget {
                       message.metadata?['address'],
                       // '大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发',
                       textAlign: TextAlign.left,
-                      style: const TextStyle(
-                        color: AppColors.thirdElementText,
-                        // backgroundColor: AppColors.ChatBg,
+                      style: TextStyle(
+                        // color: AppColors.thirdElementText,
+                        color: Theme.of(context).colorScheme.tertiary,
+                        // backgroundColor: Theme.of(context).colorScheme.background,
                         fontSize: 13.0,
                       ),
                       maxLines: 8,
diff --git a/lib/component/message/message_quote_builder.dart b/lib/component/message/message_quote_builder.dart
index 1496866..e624ac5 100644
--- a/lib/component/message/message_quote_builder.dart
+++ b/lib/component/message/message_quote_builder.dart
@@ -7,7 +7,7 @@ import 'package:flutter_chat_ui/flutter_chat_ui.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/image_gallery/image_gallery.dart';
 import 'package:imboy/component/message/message.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/chat/chat/chat_logic.dart';
 import 'package:imboy/service/assets.dart';
 import 'package:jiffy/jiffy.dart';
@@ -22,6 +22,7 @@ class QuoteMessageBuilder extends StatelessWidget {
     required this.user,
     required this.message,
   });
+
   final String type; // C2C C2G
   final types.User user;
   final types.CustomMessage message;
@@ -39,7 +40,7 @@ class QuoteMessageBuilder extends StatelessWidget {
     return n.Column([
       n.Row([
         Bubble(
-          color: AppColors.ChatSendMessageBgColor,
+          // color: AppColors.ChatSendMessageBgColor,
           nip: userIsAuthor ? BubbleNip.rightBottom : BubbleNip.leftBottom,
           nipRadius: 4,
           style: const BubbleStyle(nipWidth: 16),
@@ -48,7 +49,7 @@ class QuoteMessageBuilder extends StatelessWidget {
           child: Text(
             text,
             style: const TextStyle(
-              color: AppColors.MainTextColor,
+              // color: AppColors.MainTextColor,
               fontSize: 15,
               fontWeight: FontWeight.w400,
             ),
@@ -62,7 +63,7 @@ class QuoteMessageBuilder extends StatelessWidget {
 
       // 被引用消息
       Bubble(
-        color: AppColors.AppBarColor,
+        // color: AppColors.AppBarColor,
         margin: const BubbleEdges.only(top: 4),
         padding: const BubbleEdges.only(bottom: 10),
         child: n.Column([
@@ -102,7 +103,7 @@ class QuoteMessageBuilder extends StatelessWidget {
                           DateTime.now().timeZoneOffset.inMilliseconds,
                     ).format(pattern: 'y-MM-dd\nHH:mm:ss'),
                     style: const TextStyle(
-                      color: AppColors.LabelTextColor,
+                      // color: AppColors.LabelTextColor,
                       fontSize: 11.0,
                     ),
                   ),
diff --git a/lib/component/message/message_revoked_builder.dart b/lib/component/message/message_revoked_builder.dart
index 38f1a63..46c53d5 100644
--- a/lib/component/message/message_revoked_builder.dart
+++ b/lib/component/message/message_revoked_builder.dart
@@ -4,7 +4,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/datetime.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/store/model/message_model.dart';
 import 'package:niku/namespace.dart' as n;
@@ -57,7 +57,7 @@ class RevokedMessageBuilder extends StatelessWidget {
         // Creates insets from offsets from the left, top, right, and bottom.
         padding: const EdgeInsets.all(12),
         alignment: Alignment.center,
-        color: AppColors.ChatBg,
+        // color: AppColors.ChatBg,
         child: n.Row(
           [
             Expanded(
@@ -72,8 +72,8 @@ class RevokedMessageBuilder extends StatelessWidget {
               child: Text(
                 "$nickname ${'message_was_withdrawn'.tr}",
                 style: const TextStyle(
-                  color: AppColors.MainTextColor,
-                  backgroundColor: AppColors.ChatBg,
+                  // color: AppColors.MainTextColor,
+                  // backgroundColor: Theme.of(context).colorScheme.background,
                   fontSize: 14.0,
                 ),
                 maxLines: 2,
diff --git a/lib/component/message/message_video_builder.dart b/lib/component/message/message_video_builder.dart
index ad00f5c..7304c20 100644
--- a/lib/component/message/message_video_builder.dart
+++ b/lib/component/message/message_video_builder.dart
@@ -5,7 +5,7 @@ import 'package:flutter/material.dart';
 // ignore: depend_on_referenced_packages
 import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:get/get.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/single/video_viewer.dart';
 
@@ -27,9 +27,9 @@ class VideoMessageBuilder extends StatelessWidget {
     bool userIsAuthor = user.id == message.author.id;
 
     return Bubble(
-      color: userIsAuthor
-          ? AppColors.ChatSendMessageBgColor
-          : AppColors.ChatReceivedMessageBodyBgColor,
+      // color: userIsAuthor
+      //     ? AppColors.ChatSendMessageBgColor
+      //     : AppColors.ChatReceivedMessageBodyBgColor,
       nip: userIsAuthor ? BubbleNip.rightBottom : BubbleNip.leftBottom,
       // style: const BubbleStyle(nipWidth: 16),
       child: InkWell(
diff --git a/lib/component/message/message_visit_card_builder.dart b/lib/component/message/message_visit_card_builder.dart
index ff11bff..b754190 100644
--- a/lib/component/message/message_visit_card_builder.dart
+++ b/lib/component/message/message_visit_card_builder.dart
@@ -5,7 +5,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/avatar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/single/people_info.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -27,7 +27,7 @@ class VisitCardMessageBuilder extends StatelessWidget {
       // color: userIsAuthor
       //     ? AppColors.ChatSendMessageBgColor
       //     : AppColors.ChatReceivedMessageBodyBgColor,
-      color: AppColors.ChatReceivedMessageBodyBgColor,
+      // color: AppColors.ChatReceivedMessageBodyBgColor,
       nip: userIsAuthor ? BubbleNip.rightBottom : BubbleNip.leftBottom,
       // style: const BubbleStyle(nipWidth: 16),
       nipRadius: 4,
@@ -63,7 +63,7 @@ class VisitCardMessageBuilder extends StatelessWidget {
                             // '大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发大声道发生的发生的发生大发是打发',
                             textAlign: TextAlign.left,
                             style: const TextStyle(
-                              color: AppColors.MainTextColor,
+                              // color: AppColors.MainTextColor,
                               fontWeight: FontWeight.w500,
                               fontSize: 14.0,
                             ),
@@ -82,7 +82,10 @@ class VisitCardMessageBuilder extends StatelessWidget {
               flex: 1,
               child: Text(
                 'personal_card'.tr,
-                style: const TextStyle(color: AppColors.TipColor, fontSize: 12),
+                style: const TextStyle(
+                  // color: AppColors.TipColor,
+                  fontSize: 12,
+                ),
               ),
             ),
           ],
diff --git a/lib/component/message/message_webrtc_builder.dart b/lib/component/message/message_webrtc_builder.dart
index b5a0342..3ad9c2f 100644
--- a/lib/component/message/message_webrtc_builder.dart
+++ b/lib/component/message/message_webrtc_builder.dart
@@ -5,7 +5,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:get/get.dart';
 import 'package:imboy/component/webrtc/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:imboy/store/repository/contact_repo_sqlite.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
@@ -36,7 +36,7 @@ class WebRTCMessageBuilder extends StatelessWidget {
             title,
             textAlign: TextAlign.left,
             style: const TextStyle(
-              color: AppColors.primaryText,
+              // color: AppColors.primaryText,
               fontSize: 15.0,
             ),
             maxLines: 4,
@@ -64,7 +64,7 @@ class WebRTCMessageBuilder extends StatelessWidget {
             title,
             textAlign: TextAlign.left,
             style: const TextStyle(
-              color: AppColors.primaryText,
+              // color: AppColors.primaryText,
               fontSize: 15.0,
             ),
             maxLines: 4,
@@ -120,9 +120,9 @@ class WebRTCMessageBuilder extends StatelessWidget {
       return const SizedBox.shrink();
     }
     return Bubble(
-      color: userIsAuthor
-          ? AppColors.ChatSendMessageBgColor
-          : AppColors.ChatReceivedMessageBodyBgColor,
+      // color: userIsAuthor
+      //     ? AppColors.ChatSendMessageBgColor
+      //     : AppColors.ChatReceivedMessageBodyBgColor,
       // color: AppColors.ChatReceivedMessageBodyBgColor,
       nip: userIsAuthor ? BubbleNip.rightBottom : BubbleNip.leftBottom,
       // style: const BubbleStyle(nipWidth: 16),
diff --git a/lib/component/more_item_card.dart b/lib/component/more_item_card.dart
index 81b6488..de1343d 100644
--- a/lib/component/more_item_card.dart
+++ b/lib/component/more_item_card.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
-import 'package:imboy/component/ui/common.dart';
+
 import 'package:imboy/config/const.dart';
+import 'package:imboy/component/ui/common.dart';
 
 class MoreItemCard extends StatelessWidget {
   final String? name, icon;
@@ -58,8 +59,10 @@ class MoreItemCard extends StatelessWidget {
           const Space(width: mainSpace / 2),
           Text(
             name ?? '',
-            style:
-                const TextStyle(color: AppColors.MainTextColor, fontSize: 11),
+            style: const TextStyle(
+              // color: AppColors.MainTextColor,
+              fontSize: 11,
+            ),
           ),
         ],
       ),
diff --git a/lib/component/search.dart b/lib/component/search.dart
index 8f6fc25..8ba81d3 100644
--- a/lib/component/search.dart
+++ b/lib/component/search.dart
@@ -3,7 +3,8 @@ import 'package:get/get.dart';
 
 // ignore: depend_on_referenced_packages
 import 'package:imboy/component/ui/avatar.dart';
-import 'package:imboy/config/const.dart';
+import 'package:imboy/component/ui/line.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 Widget searchBar(
@@ -44,9 +45,9 @@ Widget searchBar(
     shape: MaterialStateProperty.all(const RoundedRectangleBorder(
       borderRadius: BorderRadius.all(Radius.circular(10.0)),
     )),
-    hintStyle: MaterialStateProperty.all(TextStyle(
+    hintStyle: MaterialStateProperty.all(const TextStyle(
       fontSize: 14,
-      color: AppColors.LineColor.withOpacity(0.7),
+      // color: AppColors.LineColor.withOpacity(0.7),
     )),
 
     controller: controller,
@@ -111,7 +112,7 @@ class SearchBarDelegate extends SearchDelegate {
   @override
   Widget buildLeading(BuildContext context) {
     return IconButton(
-      tooltip: 'Back',
+      tooltip: 'button_back'.tr,
       icon: AnimatedIcon(
         icon: AnimatedIcons.menu_arrow,
         progress: transitionAnimation,
@@ -163,30 +164,38 @@ class SearchBarDelegate extends SearchDelegate {
             child: ListView(
               children: <Widget>[
                 for (int i = 0; i < items.length; i++)
-                  n.ListTile(
-                    // selected: true,
-                    onTap: () {
-                      onTapForItem(items[i]);
-                    },
-                    leading: Avatar(
-                      imgUri: items[i].avatar,
-                      onTap: () {},
-                    ),
-                    title: n.Row([
-                      Expanded(
-                        child: Text(
-                          // 会话对象标题
-                          items[i].title,
-                          style: const TextStyle(
-                            fontSize: 16.0,
-                            fontWeight: FontWeight.normal,
+                  n.Column([
+                    n.ListTile(
+                      // selected: true,
+                      onTap: () {
+                        onTapForItem(items[i]);
+                      },
+                      leading: Avatar(
+                        imgUri: items[i].avatar,
+                        onTap: () {},
+                      ),
+                      title: n.Row([
+                        Expanded(
+                          child: Text(
+                            // 会话对象标题
+                            items[i].title,
+                            style: const TextStyle(
+                              fontSize: 16.0,
+                              fontWeight: FontWeight.normal,
+                            ),
+                            maxLines: 6,
+                            overflow: TextOverflow.ellipsis,
                           ),
-                          maxLines: 6,
-                          overflow: TextOverflow.ellipsis,
                         ),
-                      )
-                    ]),
-                  ),
+                      ]),
+                    ),
+                    n.Padding(
+                      left: 16,
+                      right: 16,
+                      bottom: 10,
+                      child: const HorizontalLine(height: 1.0),
+                    ),
+                  ]),
               ],
             ),
           );
diff --git a/lib/component/ui/button.dart b/lib/component/ui/button.dart
index 8036d2e..cc638d1 100644
--- a/lib/component/ui/button.dart
+++ b/lib/component/ui/button.dart
@@ -1,4 +1,5 @@
 import 'package:flutter/material.dart';
+
 import 'package:imboy/config/const.dart';
 
 class ButtonRow extends StatelessWidget {
@@ -7,19 +8,20 @@ class ButtonRow extends StatelessWidget {
   final TextStyle? style;
   final VoidCallback? onPressed;
   final bool isBorder;
-  final double lineWidth;
+  final double? lineWidth;
 
   const ButtonRow({
     super.key,
     this.margin,
     this.text,
     this.style = const TextStyle(
-        color: AppColors.ButtonTextColor,
-        fontWeight: FontWeight.w600,
-        fontSize: 16),
+      // color: AppColors.ButtonTextColor,
+      fontWeight: FontWeight.w600,
+      fontSize: 16,
+    ),
     this.onPressed,
     this.isBorder = false,
-    this.lineWidth = mainLineWidth,
+    this.lineWidth,
   });
 
   @override
@@ -30,17 +32,18 @@ class ButtonRow extends StatelessWidget {
         border: isBorder
             ? Border(
                 bottom: BorderSide(
-                color: AppColors.LineColor,
-                width: lineWidth,
-              ))
+                  color: Theme.of(context).colorScheme.primary,
+                  width: lineWidth ?? mainLineWidth,
+                ),
+              )
             : null,
       ),
       child: TextButton(
         style: TextButton.styleFrom(
-          foregroundColor: AppColors.primaryElement,
+          foregroundColor: Theme.of(context).colorScheme.onBackground,
           minimumSize: Size.zero,
           padding: EdgeInsets.zero,
-          backgroundColor: Colors.white,
+          // backgroundColor: Theme.of(context).colorScheme.background,
           //取消圆角边框
           shape: const RoundedRectangleBorder(borderRadius: BorderRadius.zero),
         ),
diff --git a/lib/component/ui/common_bar.dart b/lib/component/ui/common_bar.dart
index a1c16ba..5f0f2c7 100644
--- a/lib/component/ui/common_bar.dart
+++ b/lib/component/ui/common_bar.dart
@@ -1,5 +1,4 @@
 import 'package:flutter/material.dart';
-import 'package:imboy/config/const.dart';
 
 class NavAppBar extends StatelessWidget implements PreferredSizeWidget {
   const NavAppBar({
@@ -9,8 +8,8 @@ class NavAppBar extends StatelessWidget implements PreferredSizeWidget {
     this.title = '',
     this.titleWidget,
     this.rightDMActions,
-    this.backgroundColor = AppColors.AppBarColor,
-    this.mainColor = Colors.black,
+    // this.backgroundColor = AppColors.AppBarColor,
+    // this.mainColor = Colors.black,
     this.automaticallyImplyLeading = false,
   });
 
@@ -19,8 +18,11 @@ class NavAppBar extends StatelessWidget implements PreferredSizeWidget {
   final String? title;
   final Widget? titleWidget;
   final List<Widget>? rightDMActions;
-  final Color? backgroundColor;
-  final Color? mainColor;
+
+  // final Color? backgroundColor;
+  // final Color? mainColor;
+  // 如果有 leading 这个不会管用 ；
+  // 如果没有leading ，当有侧边栏的时候， false：不会显示默认的图片，true 会显示 默认图片，并响应打开侧边栏的事件
   final bool automaticallyImplyLeading;
 
   @override
@@ -35,60 +37,16 @@ class NavAppBar extends StatelessWidget implements PreferredSizeWidget {
           Text(
             title!,
             style: TextStyle(
-              color: mainColor,
+              color: Theme.of(context).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.w600,
             ),
           ),
       automaticallyImplyLeading: automaticallyImplyLeading,
-      backgroundColor: backgroundColor,
-      foregroundColor: mainColor,
-      elevation: 0.0,
-      centerTitle: true,
-      actions: rightDMActions ?? [const Center()],
-    );
-  }
-}
-
-class PageAppBar extends StatelessWidget implements PreferredSizeWidget {
-  const PageAppBar({
-    super.key,
-    this.leading,
-    this.title = '',
-    this.titleWidget,
-    this.rightDMActions,
-    this.backgroundColor = AppColors.AppBarColor,
-    this.mainColor = Colors.black,
-  });
-
-  final Widget? leading;
-  final String? title;
-  final Widget? titleWidget;
-  final List<Widget>? rightDMActions;
-  final Color? backgroundColor;
-  final Color? mainColor;
-
-  @override
-  Size get preferredSize => const Size(100, 50);
-
-  @override
-  Widget build(BuildContext context) {
-    return AppBar(
-      leading: leading,
-      title: titleWidget ??
-          Text(
-            title!,
-            style: TextStyle(
-              color: mainColor,
-              fontSize: 16.0,
-              fontWeight: FontWeight.w600,
-            ),
-          ),
-      // 如果有 leading 这个不会管用 ；
-      // 如果没有leading ，当有侧边栏的时候， false：不会显示默认的图片，true 会显示 默认图片，并响应打开侧边栏的事件
-      automaticallyImplyLeading: true,
-      backgroundColor: backgroundColor,
-      foregroundColor: mainColor,
+      backgroundColor: Theme.of(context).colorScheme.primary,
+      // foregroundColor: mainColor,
+      // backgroundColor: Theme.of(context).colorScheme.background,
+      // foregroundColor: Theme.of(context).colorScheme.primary,
       elevation: 0.0,
       centerTitle: true,
       actions: rightDMActions ?? [const Center()],
diff --git a/lib/component/ui/contact_card.dart b/lib/component/ui/contact_card.dart
index ccc1276..74dc111 100644
--- a/lib/component/ui/contact_card.dart
+++ b/lib/component/ui/contact_card.dart
@@ -1,11 +1,12 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/image_gallery/image_gallery.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
-import 'package:imboy/config/const.dart';
-import 'package:niku/namespace.dart' as n;
 
 // ignore: must_be_immutable
 class ContactCard extends StatelessWidget {
@@ -31,7 +32,7 @@ class ContactCard extends StatelessWidget {
     this.region = '', //
     this.remark = '',
     this.isBorder = false,
-    this.lineWidth = mainLineWidth,
+    this.lineWidth,
     this.padding,
   }) : assert(id != null);
 
@@ -39,7 +40,7 @@ class ContactCard extends StatelessWidget {
   Widget build(BuildContext context) {
     TextStyle labelStyle = const TextStyle(
       fontSize: 14,
-      color: AppColors.MainTextColor,
+      // color: AppColors.MainTextColor,
     );
 
     String? title = (remark == null || remark == 'null') ? '' : remark;
@@ -53,7 +54,6 @@ class ContactCard extends StatelessWidget {
             child: Text(
           title ?? '',
           style: const TextStyle(
-            color: Colors.black,
             fontSize: 18.0,
             fontWeight: FontWeight.w600,
           ),
@@ -83,12 +83,12 @@ class ContactCard extends StatelessWidget {
     }
     return Container(
       decoration: BoxDecoration(
-        color: Colors.white,
+        // color: Colors.white,
         border: isBorder!
             ? Border(
                 bottom: BorderSide(
-                  color: AppColors.LineColor,
-                  width: lineWidth!,
+                  color: Theme.of(context).colorScheme.primary,
+                  width: lineWidth ?? mainLineWidth,
                 ),
               )
             : null,
@@ -124,8 +124,9 @@ class ContactCard extends StatelessWidget {
           ),
           const Space(width: mainSpace * 2),
           Expanded(
-              child: n.Column(items)
-                ..crossAxisAlignment = CrossAxisAlignment.start),
+            child: n.Column(items)
+              ..crossAxisAlignment = CrossAxisAlignment.start,
+          ),
         ],
       ),
     );
diff --git a/lib/component/ui/emoji_picker_view.dart b/lib/component/ui/emoji_picker_view.dart
index dae0515..30be74a 100644
--- a/lib/component/ui/emoji_picker_view.dart
+++ b/lib/component/ui/emoji_picker_view.dart
@@ -7,7 +7,6 @@ import 'package:emoji_picker_flutter/emoji_picker_flutter.dart';
 // ignore: implementation_imports, unnecessary_import
 import 'package:emoji_picker_flutter/src/category_view/category_emoji.dart'
     show CategoryEmoji;
-import 'package:imboy/config/const.dart';
 
 /// Customized IMBoy category view
 class EmojiCategoryView extends CategoryView {
@@ -82,16 +81,16 @@ class EmojiTabBar extends StatelessWidget {
     return SizedBox(
       height: config.categoryViewConfig.tabBarHeight,
       child: TabBar(
-        labelColor: config.categoryViewConfig.iconColorSelected,
-        indicatorColor: config.categoryViewConfig.indicatorColor,
-        unselectedLabelColor: config.categoryViewConfig.iconColor,
-        dividerColor: config.categoryViewConfig.dividerColor,
+        // labelColor: config.categoryViewConfig.iconColorSelected,
+        // indicatorColor: config.categoryViewConfig.indicatorColor,
+        // unselectedLabelColor: config.categoryViewConfig.iconColor,
+        // dividerColor: config.categoryViewConfig.dividerColor,
         controller: tabController,
         labelPadding: const EdgeInsets.only(top: 1.0),
         indicatorSize: TabBarIndicatorSize.label,
-        indicator: const BoxDecoration(
+        indicator: BoxDecoration(
           shape: BoxShape.circle,
-          color: Colors.black12,
+          color: Theme.of(context).colorScheme.onBackground,
         ),
         onTap: (index) {
           closeSkinToneOverlay();
@@ -175,11 +174,11 @@ class EmojiSearchViewState extends SearchViewState {
                   child: TextField(
                     onChanged: onTextInputChanged,
                     focusNode: focusNode,
-                    decoration: const InputDecoration(
+                    decoration: InputDecoration(
                       border: InputBorder.none,
-                      hintText: 'Search',
-                      hintStyle: TextStyle(
-                        color: AppColors.ItemOnColor,
+                      hintText: 'search'.tr,
+                      hintStyle: const TextStyle(
+                        // color: AppColors.ItemOnColor,
                         fontWeight: FontWeight.normal,
                       ),
                       contentPadding: EdgeInsets.zero,
@@ -194,3 +193,59 @@ class EmojiSearchViewState extends SearchViewState {
     });
   }
 }
+
+/// Default Bottom Action Bar implementation
+class AppBottomActionBar extends BottomActionBar {
+  /// Constructor
+  const AppBottomActionBar(
+      Config config, EmojiViewState state, VoidCallback showSearchView,
+      {super.key})
+      : super(config, state, showSearchView);
+
+  @override
+  State<StatefulWidget> createState() => _AppBottomActionBarState();
+}
+
+class _AppBottomActionBarState extends State<AppBottomActionBar> {
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      color: widget.config.bottomActionBarConfig.backgroundColor,
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.spaceBetween,
+        children: [
+          _buildSearchViewButton(),
+          _buildBackspaceButton(),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildSearchViewButton() {
+    if (widget.config.bottomActionBarConfig.showSearchViewButton) {
+      return CircleAvatar(
+        backgroundColor: widget.config.bottomActionBarConfig.buttonColor,
+        child: IconButton(
+          onPressed: widget.showSearchView,
+          icon: Icon(
+            Icons.search,
+            color: widget.config.bottomActionBarConfig.buttonIconColor,
+          ),
+        ),
+      );
+    }
+    return const SizedBox.shrink();
+  }
+
+  Widget _buildBackspaceButton() {
+    if (widget.config.bottomActionBarConfig.showBackspaceButton) {
+      return BackspaceButton(
+        widget.config,
+        widget.state.onBackspacePressed,
+        widget.state.onBackspaceLongPressed,
+        widget.config.bottomActionBarConfig.buttonIconColor,
+      );
+    }
+    return const SizedBox.shrink();
+  }
+}
diff --git a/lib/component/ui/feedback_builder.dart b/lib/component/ui/feedback_builder.dart
index 0ed53e0..4889f4a 100644
--- a/lib/component/ui/feedback_builder.dart
+++ b/lib/component/ui/feedback_builder.dart
@@ -5,8 +5,6 @@ import 'package:get/get.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:niku/namespace.dart' as n;
 
-import 'package:imboy/config/const.dart';
-
 /// A data type holding user feedback consisting of a feedback type, free from
 /// feedback text, and a sentiment rating.
 class IMBoyFeedback {
@@ -154,7 +152,7 @@ class _IMBoyFeedbackFormState extends State<IMBoyFeedbackForm> {
                       labelText: "",
                       labelStyle: TextStyle(
                         fontSize: 14,
-                        color: AppColors.MainTextColor,
+                        // color: AppColors.MainTextColor,
                       ),
                       contentPadding: EdgeInsets.fromLTRB(10, 10, 10, 10),
                       fillColor: Color.fromARGB(255, 247, 247, 247),
@@ -200,7 +198,7 @@ class _IMBoyFeedbackFormState extends State<IMBoyFeedbackForm> {
                       labelText: "",
                       labelStyle: TextStyle(
                         fontSize: 14,
-                        color: AppColors.MainTextColor,
+                        // color: AppColors.MainTextColor,
                       ),
                       contentPadding: EdgeInsets.fromLTRB(10, 10, 10, 10),
                       fillColor: Color.fromARGB(255, 247, 247, 247),
@@ -285,7 +283,7 @@ class _IMBoyFeedbackFormState extends State<IMBoyFeedbackForm> {
                 }
               : null,
           style: TextButton.styleFrom(
-            foregroundColor: AppColors.primaryElement,
+            // foregroundColor: AppColors.primaryElement,
             minimumSize: Size.zero,
             padding: EdgeInsets.zero,
             backgroundColor: Colors.white,
diff --git a/lib/component/ui/label_row.dart b/lib/component/ui/label_row.dart
index e8f2e52..882313e 100644
--- a/lib/component/ui/label_row.dart
+++ b/lib/component/ui/label_row.dart
@@ -1,8 +1,9 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
-import 'package:imboy/config/const.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
+
 class LabelRow extends StatelessWidget {
   final String? label;
   final VoidCallback? onPressed;
@@ -32,7 +33,7 @@ class LabelRow extends StatelessWidget {
     this.margin,
     this.padding = const EdgeInsets.only(top: 15.0, bottom: 15.0, right: 5.0),
     this.headW,
-    this.lineWidth = mainLineWidth,
+    this.lineWidth,
   });
 
   @override
@@ -43,8 +44,8 @@ class LabelRow extends StatelessWidget {
         style: TextButton.styleFrom(
           minimumSize: Size.zero,
           padding: EdgeInsets.zero,
-          foregroundColor: AppColors.ItemOnColor,
-          backgroundColor: Colors.white,
+          // foregroundColor: AppColors.ItemOnColor,
+          // backgroundColor: Theme.of(context).colorScheme.background,
           //取消圆角边框
           shape: const RoundedRectangleBorder(borderRadius: BorderRadius.zero),
         ),
@@ -56,7 +57,10 @@ class LabelRow extends StatelessWidget {
             border: isLine!
                 ? Border(
                     bottom: BorderSide(
-                        color: AppColors.LineColor, width: lineWidth!))
+                      width: lineWidth ?? mainLineWidth,
+                      color: Theme.of(context).colorScheme.primary,
+                    ),
+                  )
                 : null,
           ),
           child: n.Row([
@@ -65,14 +69,19 @@ class LabelRow extends StatelessWidget {
               width: labelWidth,
               child: Text(
                 label ?? '',
-                style: const TextStyle(fontSize: 17.0),
+                style: TextStyle(
+                    fontSize: 17.0,
+                    color: Theme.of(context).colorScheme.onPrimary),
               ),
             ),
             value != null
                 ? Text(
                     value!,
                     style: TextStyle(
-                      color: AppColors.MainTextColor.withOpacity(0.7),
+                      color: Theme.of(context)
+                          .colorScheme
+                          .onPrimary
+                          .withOpacity(0.7),
                     ),
                     maxLines: 3,
                     overflow: TextOverflow.ellipsis,
@@ -83,13 +92,19 @@ class LabelRow extends StatelessWidget {
             rValue != null
                 ? Text(rValue!,
                     style: TextStyle(
-                        color: AppColors.MainTextColor.withOpacity(0.7),
-                        fontWeight: FontWeight.w400))
+                      color: Theme.of(context)
+                          .colorScheme
+                          .onPrimary
+                          .withOpacity(0.7),
+                      fontWeight: FontWeight.w400,
+                    ))
                 : const SizedBox.shrink(),
             rightW != null ? Center(child: rightW!) : Container(),
             isRight!
-                ? Icon(CupertinoIcons.right_chevron,
-                    color: AppColors.MainTextColor.withOpacity(0.5))
+                ? Icon(
+                    Icons.navigate_next,
+                    color: Theme.of(context).colorScheme.onBackground,
+                  )
                 : Container(width: 10.0)
           ]),
         ),
diff --git a/lib/component/ui/line.dart b/lib/component/ui/line.dart
index 522f681..da8ec7c 100644
--- a/lib/component/ui/line.dart
+++ b/lib/component/ui/line.dart
@@ -1,15 +1,17 @@
 import 'package:flutter/widgets.dart';
+import 'package:get/get.dart';
 
 /// 水平线
 class HorizontalLine extends StatelessWidget {
   final double height;
-  final Color color;
+  final Color? color;
   final double horizontal;
 
   const HorizontalLine({
     super.key,
     this.height = 0.5,
-    this.color = const Color(0xFFEEEEEE),
+    // this.color = const Color(0xFFEEEEEE),
+    this.color,
     this.horizontal = 0.0,
   });
 
@@ -17,7 +19,10 @@ class HorizontalLine extends StatelessWidget {
   Widget build(BuildContext context) {
     return Container(
       height: height,
-      color: color,
+      color: color ??
+          (Get.isDarkMode
+              ? const Color.fromRGBO(100, 100, 100, 1)
+              : const Color.fromRGBO(210, 210, 210, 1)),
       margin: EdgeInsets.symmetric(horizontal: horizontal),
     );
   }
diff --git a/lib/component/ui/network_failure_tips.dart b/lib/component/ui/network_failure_tips.dart
index 3aa9668..1b32374 100644
--- a/lib/component/ui/network_failure_tips.dart
+++ b/lib/component/ui/network_failure_tips.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart' as getx;
 import 'package:get/get.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/single/network_failure_guidance.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -43,7 +43,7 @@ class NetworkFailureTips extends StatelessWidget {
           )),
           const Icon(
             Icons.chevron_right_rounded,
-            color: AppColors.LabelTextColor,
+            // color: AppColors.LabelTextColor,
           )
         ]),
       ),
diff --git a/lib/component/ui/nodata_view.dart b/lib/component/ui/nodata_view.dart
index 49e2f7c..f17c1da 100644
--- a/lib/component/ui/nodata_view.dart
+++ b/lib/component/ui/nodata_view.dart
@@ -1,5 +1,4 @@
 import 'package:flutter/material.dart';
-import 'package:imboy/config/const.dart';
 
 class NoDataView extends StatelessWidget {
   final String text;
@@ -18,7 +17,7 @@ class NoDataView extends StatelessWidget {
         onTap: onTop,
         child: Text(
           text,
-          style: const TextStyle(color: AppColors.MainTextColor),
+          // style: const TextStyle(color: AppColors.MainTextColor),
         ),
       ),
     );
diff --git a/lib/component/ui/search_main_view.dart b/lib/component/ui/search_main_view.dart
index a00fd27..8894db0 100644
--- a/lib/component/ui/search_main_view.dart
+++ b/lib/component/ui/search_main_view.dart
@@ -1,5 +1,4 @@
 import 'package:flutter/material.dart';
-import 'package:imboy/config/const.dart';
 
 class SearchMainView extends StatelessWidget {
   final GestureTapCallback? onTap;
@@ -19,11 +18,14 @@ class SearchMainView extends StatelessWidget {
       children: <Widget>[
         const Padding(
           padding: EdgeInsets.symmetric(horizontal: 20.0),
-          child: Icon(Icons.search, color: AppColors.MainTextColor),
+          child: Icon(
+            Icons.search,
+            // color: AppColors.MainTextColor,
+          ),
         ),
         Text(
           text!,
-          style: const TextStyle(color: AppColors.MainTextColor),
+          // style: const TextStyle(color: AppColors.MainTextColor),
         )
       ],
     );
@@ -35,7 +37,10 @@ class SearchMainView extends StatelessWidget {
           color: Colors.white,
           border: isBorder!
               ? const Border(
-                  bottom: BorderSide(color: AppColors.LineColor, width: 0.2),
+                  bottom: BorderSide(
+                    // color: AppColors.LineColor,
+                    width: 0.2,
+                  ),
                 )
               : null,
         ),
diff --git a/lib/component/ui/search_tile_view.dart b/lib/component/ui/search_tile_view.dart
index 8cbfc4e..8bcb332 100644
--- a/lib/component/ui/search_tile_view.dart
+++ b/lib/component/ui/search_tile_view.dart
@@ -1,7 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/config/const.dart';
 
 class SearchTileView extends StatelessWidget {
   final String? text;
@@ -60,7 +59,7 @@ class SearchTileView extends StatelessWidget {
             ),
             const Text(
               '小程序、公众号、文章、朋友圈、和表情等',
-              style: TextStyle(color: AppColors.MainTextColor),
+              // style: TextStyle(color: AppColors.MainTextColor),
             )
           ],
         )
@@ -70,7 +69,7 @@ class SearchTileView extends StatelessWidget {
     if (type == 0) {
       return Container(
         decoration: BoxDecoration(
-            color: strNoEmpty(text) ? Colors.white : AppColors.AppBarColor,
+            // color: strNoEmpty(text) ? Colors.white : AppColors.AppBarColor,
             border: Border(
                 top: BorderSide(
                     color: Colors.grey.withOpacity(0.2), width: 0.5))),
diff --git a/lib/component/ui/select_region_view.dart b/lib/component/ui/select_region_view.dart
deleted file mode 100644
index 8728d61..0000000
--- a/lib/component/ui/select_region_view.dart
+++ /dev/null
@@ -1,252 +0,0 @@
-import 'package:flutter/cupertino.dart';
-import 'package:flutter/material.dart';
-import 'package:get/get.dart';
-import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
-import 'package:niku/namespace.dart' as n;
-
-class SelectRegionLogic extends GetxController {
-  // 用户名控制器
-
-  RxBool valueChanged = false.obs;
-
-  List regionList = [];
-
-  RxString selectedVal = "".obs;
-
-  RxMap regionSelected = {}.obs;
-
-  void valueOnChange(bool isChange) {
-    // 必须使用 .value 修饰具体的值
-    valueChanged.value = isChange;
-    update([valueChanged]);
-  }
-
-  /// 选中title
-  void regionSelectedTitle(String title) {
-    regionSelected.clear();
-    // this.regionSelected.forEach((key, value) {
-    //   this.regionSelected.value[key] = {
-    //     "selected": false,
-    //     "trailing": SizedBox.shrink(),
-    //   };
-    // });
-
-    regionSelected[title.trim()] = {
-      "selected": true,
-      "trailing": const Text(
-        "√",
-        style: TextStyle(fontSize: 20),
-      ),
-    };
-    regionSelected.refresh();
-  }
-
-  /// context 上下文
-  /// parent 地区父节点数据
-  /// model 当前地区节点数据，如果是叶子节点，类型为String；如果非叶子节点类型为Map
-  /// callback 有里面有业务逻辑处理
-  /// outCallback 递归调用的时候传递最外层的callback
-  Widget getListItem(
-    BuildContext context,
-    String parent,
-    dynamic model,
-    Future<bool> Function(String, String) callback,
-    Future<bool> Function(String) outCallback,
-  ) {
-    String title = "";
-    List children = [];
-    iPrint(
-        "region_item getListItem ${model.runtimeType}, $parent : ${model.toString()}");
-    if (model is String) {
-      title = model;
-    } else if (model is Map) {
-      title = model["title"] ?? "";
-      children = model["children"] ?? [];
-    }
-    bool haveChildren = children.isNotEmpty;
-    title = title.trim();
-    return Obx(
-      () => Container(
-        height: 52,
-        // ignore: sort_child_properties_last
-        child: ListTile(
-          title: Text(
-            title,
-          ),
-          selected: regionSelected[title] != null &&
-              regionSelected[title]["selected"] == true,
-          selectedColor: AppColors.primaryElement,
-          trailing: haveChildren
-              ? Icon(
-                  CupertinoIcons.right_chevron,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                )
-              : (regionSelected[title] != null &&
-                      regionSelected[title]["selected"] == true
-                  ? regionSelected[title]["trailing"]
-                  : null),
-          onTap: () {
-            selectedVal.value = strEmpty(parent) ? title : "$parent $title";
-            // iPrint("region_item $selectedVal, $haveChildren: ${children.toString()}");
-            if (haveChildren) {
-              parent = selectedVal.value;
-              Navigator.push(
-                context,
-                CupertinoPageRoute(
-                  // “右滑返回上一页”功能
-                  builder: (_) => SelectRegionPage(
-                    parent: selectedVal.value,
-                    children: children,
-                    callback: callback,
-                    outCallback: outCallback,
-                  ),
-                ),
-              );
-            } else {
-              // getListItem/4 第4个参数，有里面有业务逻辑处理
-              callback(parent, title);
-              regionSelectedTitle(title);
-              valueOnChange(true);
-            }
-          },
-        ),
-        // 下边框
-        decoration: const BoxDecoration(
-          border: Border(
-            bottom: BorderSide(
-              width: 1,
-              color: Color(0xffe5e5e5),
-            ),
-          ),
-        ),
-      ),
-    );
-  }
-}
-
-// ignore: must_be_immutable
-class SelectRegionPage extends StatelessWidget {
-  String parent;
-  List children;
-
-  final Future<bool> Function(String, String) callback;
-  final Future<bool> Function(String) outCallback;
-
-  SelectRegionPage({
-    super.key,
-    required this.parent,
-    required this.children,
-    required this.callback,
-    required this.outCallback,
-  });
-
-  final logic = Get.put(SelectRegionLogic(), tag: "SelectRegionPage");
-
-  // SelectRegionLogic logic = Get.find();
-
-  @override
-  Widget build(BuildContext context) {
-    Future.delayed(const Duration(milliseconds: 100)).then((e) {
-      logic.valueOnChange(false);
-    });
-    return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
-        titleWidget: n.Row([
-          Expanded(
-            child: Text(
-              'set_region'.tr,
-              textAlign: TextAlign.center,
-              style: const TextStyle(
-                // color: Colors.white,
-                fontSize: 16.0,
-                fontWeight: FontWeight.bold,
-              ),
-            ),
-            // 中间用Expanded控件
-          ),
-          Obx(
-            () => ElevatedButton(
-              onPressed: () async {
-                var nav = Navigator.of(context);
-                bool res = await outCallback(logic.selectedVal.value);
-                // iPrint("logic.selectedVal.value ${logic.selectedVal.value}");
-                if (res) {
-                  int t = logic.selectedVal.value.split(" ").length;
-                  // iPrint("logic.selectedVal.value $t");
-                  for (var i = 0; i < t; i++) {
-                    nav.pop();
-                  }
-                }
-              },
-              // ignore: sort_child_properties_last
-              child: n.Padding(
-                  left: 10,
-                  right: 10,
-                  child: Text(
-                    'button_accomplish'.tr,
-                    textAlign: TextAlign.center,
-                  )),
-              style: logic.valueChanged.isTrue
-                  ? ButtonStyle(
-                      backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.primaryElement,
-                      ),
-                      foregroundColor: MaterialStateProperty.all<Color>(
-                        Colors.white,
-                      ),
-                      minimumSize:
-                          MaterialStateProperty.all(const Size(60, 40)),
-                      visualDensity: VisualDensity.compact,
-                      padding: MaterialStateProperty.all(EdgeInsets.zero),
-                    )
-                  : ButtonStyle(
-                      backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.AppBarColor,
-                      ),
-                      foregroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.LineColor,
-                      ),
-                      minimumSize:
-                          MaterialStateProperty.all(const Size(60, 40)),
-                      visualDensity: VisualDensity.compact,
-                      padding: MaterialStateProperty.all(EdgeInsets.zero),
-                    ),
-            ),
-          ),
-        ]),
-      ),
-      body: n.Column([
-        Container(
-          alignment: Alignment.centerLeft,
-          padding: const EdgeInsets.only(left: 16.0),
-          width: Get.width,
-          height: 40.0,
-          child: Text(
-            'all'.tr,
-            style: const TextStyle(fontSize: 12),
-          ),
-        ),
-        Expanded(
-          child: ListView.builder(
-            itemBuilder: (BuildContext context, int index) {
-              return logic.getListItem(
-                context,
-                parent,
-                children[index],
-                (a, b) async {
-                  return true;
-                },
-                outCallback,
-              );
-            },
-            itemCount: children.length,
-          ),
-        ),
-      ], mainAxisSize: MainAxisSize.min)
-        ..useParent((v) => v..bg = Colors.white),
-    );
-  }
-}
diff --git a/lib/component/ui/title_text_field.dart b/lib/component/ui/title_text_field.dart
index f95f033..167c83e 100644
--- a/lib/component/ui/title_text_field.dart
+++ b/lib/component/ui/title_text_field.dart
@@ -1,5 +1,5 @@
 import 'package:flutter/material.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 // ignore: must_be_immutable
@@ -33,9 +33,9 @@ class TitleTextField extends StatelessWidget {
           cursorColor: Colors.black54,
           decoration: InputDecoration(
             labelText: "",
-            labelStyle: const TextStyle(
+            labelStyle: TextStyle(
               fontSize: 14,
-              color: AppColors.MainTextColor,
+              color: Theme.of(context).colorScheme.onPrimary,
             ),
             contentPadding:
                 contentPadding ?? const EdgeInsets.fromLTRB(10, 10, 10, 10),
diff --git a/lib/component/web_view.dart b/lib/component/web_view.dart
index f698368..22b6fe5 100644
--- a/lib/component/web_view.dart
+++ b/lib/component/web_view.dart
@@ -93,8 +93,9 @@ class WebViewPageState extends State<WebViewPage> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
         titleWidget: Text(widget.title),
+        automaticallyImplyLeading: true,
       ),
       body: WebViewWidget(controller: widget._controller!),
     );
diff --git a/lib/component/webrtc/func.dart b/lib/component/webrtc/func.dart
index e661f72..c7cb6db 100644
--- a/lib/component/webrtc/func.dart
+++ b/lib/component/webrtc/func.dart
@@ -11,6 +11,7 @@ import 'package:xid/xid.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/webrtc/session.dart';
+
 import 'package:imboy/config/const.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/chat/chat/chat_logic.dart';
@@ -152,7 +153,9 @@ Future<void> incomingCallScreen(
   sendWebRTCMsg('ringing', {}, to: peer.peerId);
   Get.defaultDialog(
     title: '',
-    backgroundColor: Colors.black54,
+    backgroundColor: Get.isDarkMode
+        ? const Color.fromRGBO(80, 80, 80, 1)
+        : const Color.fromRGBO(240, 240, 240, 1),
     titlePadding: const EdgeInsets.all(0),
     barrierDismissible: false,
     radius: 10,
@@ -170,8 +173,8 @@ Future<void> incomingCallScreen(
               Expanded(
                 child: Text(
                   peer.nickname,
-                  style: const TextStyle(
-                    color: Colors.white,
+                  style: TextStyle(
+                    color: Theme.of(Get.context!).colorScheme.onPrimary,
                     fontSize: 12.0,
                     fontWeight: FontWeight.w500,
                   ),
@@ -187,8 +190,8 @@ Future<void> incomingCallScreen(
                 child: Text(
                   // "Incoming ${option['media']} call".tr,
                   'incoming_call'.trArgs([option['media'].tr]),
-                  style: const TextStyle(
-                    color: Colors.white60,
+                  style: TextStyle(
+                    color: Theme.of(Get.context!).colorScheme.onPrimary,
                     fontSize: 12,
                   ),
                   textAlign: TextAlign.left,
@@ -253,8 +256,10 @@ Future<void> incomingCallScreen(
                   openCallScreen(peer, session: s, option, caller: false);
                 },
                 child: option['media'] == 'video'
-                    ? const Icon(Icons.videocam, color: Colors.white)
-                    : const Icon(Icons.phone, color: Colors.white),
+                    ? Icon(Icons.videocam,
+                        color: Theme.of(Get.context!).colorScheme.onPrimary)
+                    : Icon(Icons.phone,
+                        color: Theme.of(Get.context!).colorScheme.onPrimary),
               ),
             ),
           ]),
diff --git a/lib/config/const.dart b/lib/config/const.dart
index e7de96b..9b9eac5 100644
--- a/lib/config/const.dart
+++ b/lib/config/const.dart
@@ -2,6 +2,7 @@
 
 import 'package:flutter/material.dart';
 import 'package:flutter_dotenv/flutter_dotenv.dart';
+import 'package:get/get.dart';
 
 const contactAssets = 'assets/images/contact/';
 
@@ -37,6 +38,10 @@ String UPLOAD_SENCE = dotenv.get('UPLOAD_SENCE');
 
 String IOS_APP_ID = dotenv.get('IOS_APP_ID');
 
+Icon navigateNextIcon = const Icon(
+  Icons.navigate_next,
+);
+
 class Keys {
   // 客服端Key
   static const String currentLanguageCode = "current_language_code";
@@ -57,9 +62,10 @@ class Keys {
   static const refreshTokenKey = 'imboy-refreshtoken';
 
   static String lastLoginAccount = 'lastLoginAccount';
+  static String themeType = 'theme_type';
 }
 
-class AppColors {
+class AppColorsBak {
   static const AppBarColor = Color.fromRGBO(237, 237, 237, 1);
 
   static const BgColor = Color.fromRGBO(255, 255, 255, 1);
@@ -133,7 +139,7 @@ class AppColors {
 }
 
 const mainSpace = 10.0;
-const mainLineWidth = 0.3;
+double mainLineWidth = Get.isDarkMode ? 0.5 : 1.0;
 
 class Constants {
   static const IconFontFamily = "appIconFont";
diff --git a/lib/config/init.dart b/lib/config/init.dart
index 23fe1bc..526a248 100644
--- a/lib/config/init.dart
+++ b/lib/config/init.dart
@@ -11,7 +11,7 @@ import 'package:map_launcher/map_launcher.dart';
 import 'package:package_info_plus/package_info_plus.dart';
 import 'package:wakelock_plus/wakelock_plus.dart';
 
-import 'package:imboy/component/controller.dart';
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/extension/device_ext.dart';
 import 'package:imboy/component/extension/imboy_cache_manager.dart';
 import 'package:imboy/component/helper/datetime.dart';
@@ -23,7 +23,7 @@ import 'package:imboy/component/http/http_interceptor.dart';
 import 'package:imboy/component/location/amap_helper.dart';
 import 'package:imboy/component/observer/lifecycle.dart';
 import 'package:imboy/component/webrtc/session.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/bottom_navigation/bottom_navigation_logic.dart';
 import 'package:imboy/page/chat/chat/chat_logic.dart';
 import 'package:imboy/page/contact/contact/contact_logic.dart';
@@ -95,7 +95,6 @@ Future<void> init() async {
   // iPrint("> on UP_AUTH_KEY: ${dotenv.get('UP_AUTH_KEY')}");
 
   getx.Get.put(UserRepoLocal(), permanent: true);
-  getx.Get.lazyPut(() => ThemeController());
 
   // Get.put<AuthController>(AuthController());
   HttpConfig dioConfig = HttpConfig(
diff --git a/lib/config/theme.dart b/lib/config/theme.dart
index fd5da54..9939d3b 100644
--- a/lib/config/theme.dart
+++ b/lib/config/theme.dart
@@ -1,16 +1,167 @@
 import 'package:flutter/material.dart';
 import 'package:flutter_chat_ui/flutter_chat_ui.dart';
 import 'package:flutter_login/flutter_login.dart';
-import 'package:imboy/config/const.dart';
+import 'package:get/get.dart';
+
+//调用的时候需要把hex改一下，比如#223344 needs change to 0xFF223344
+//即把#换成0xFF即可
+
+MaterialColor createMaterialColor(Color color) {
+  List strengths = <double>[.05];
+  Map<int, Color> swatch = <int, Color>{};
+  final int r = color.red, g = color.green, b = color.blue;
+
+  for (int i = 1; i < 10; i++) {
+    strengths.add(0.1 * i);
+  }
+  for (var strength in strengths) {
+    final double ds = 0.5 - strength;
+    swatch[(strength * 1000).round()] = Color.fromRGBO(
+      r + ((ds < 0 ? r : (255 - r)) * ds).round(),
+      g + ((ds < 0 ? g : (255 - g)) * ds).round(),
+      b + ((ds < 0 ? b : (255 - b)) * ds).round(),
+      1,
+    );
+  }
+  return MaterialColor(color.value, swatch);
+}
+
+const Color lightBgColor = Colors.white70;
+// const Color lightInputBgColor = Colors.white70;
+const Color lightPrimaryColor = Color.fromRGBO(236, 236, 236, 1);
+const Color lightOnPrimaryColor = Color.fromRGBO(68, 68, 68, 1.0);
+
+const Color darkBgColor = Colors.black45;
+// const Color darkInputBgColor = Colors.black87;
+const Color darkPrimaryColor = Colors.black;
+const Color darkOnPrimaryColor = Color.fromRGBO(237, 237, 237, 1);
+
+class ChatColor {
+  // for chat
+  // static const ChatBg = Color.fromRGBO(243, 243, 243, 1.0);
+  static const ChatSendMessageBgColor = Color.fromRGBO(169, 234, 122, 1.0);
+  static const ChatSentMessageBodyTextColor = Color.fromRGBO(19, 29, 13, 1.0);
+
+  static const ChatReceivedMessageBodyTextColor =
+      Color.fromRGBO(25, 25, 25, 1.0);
+
+  static const ChatReceivedMessageBodyBgColor =
+      Color.fromRGBO(255, 255, 255, 1.0);
+
+  static const ChatInputBackgroundColor = Color.fromRGBO(240, 240, 240, 1.0);
+  static const ChatInputFillGgColor = Color.fromRGBO(220, 220, 220, 1.0);
+
+// static const MainTextColor = Color.fromRGBO(115, 115, 115, 1.0);
+// end for chat
+}
+
+final ColorScheme lightColorScheme = ColorScheme.fromSeed(
+  brightness: Brightness.light,
+  seedColor: Colors.black,
+  primary: lightPrimaryColor,
+  // 主色调，用于突出显示和主要操作
+  onPrimary: lightOnPrimaryColor,
+  // 主色调上的文字或图标颜色
+  primaryContainer: lightPrimaryColor.withOpacity(0.8),
+  // 主色调的容器背景色，更淡一些以提供对比
+  onPrimaryContainer: Colors.black54,
+  // 主色调容器上的文字或图标颜色
+  background: lightBgColor,
+  // 背景颜色，比表面颜色稍深一些以提供对比
+  onBackground: Colors.black54,
+  // 背景颜色上的文字或图标颜色
+  error: Colors.red,
+  // 错误状态的颜色
+  onError: Colors.white, // 错误状态上的文字或图标颜色
+);
+final ColorScheme darkColorScheme = ColorScheme.fromSeed(
+  brightness: Brightness.dark,
+  seedColor: Colors.black,
+  primary: darkPrimaryColor,
+  // 主色调保持不变，以确保品牌一致性
+  onPrimary: darkOnPrimaryColor,
+  // 主色调上的文字颜色改为黑色或深色
+  primaryContainer: darkPrimaryColor.withOpacity(0.8),
+  // 主色调的容器背景色，更淡一些以提供对比
+  onPrimaryContainer: Colors.black54,
+  // 主色调容器上的文字或图标颜色
+  background: darkBgColor,
+  // 背景颜色改为更深的黑色调
+  onBackground: Colors.white70,
+  // 背景颜色上的文字颜色保持一定的透明度
+  error: Colors.red,
+  // 错误颜色
+  onError: Colors.white, // 错误颜色上的文字颜色改为黑色
+);
+
+final ThemeData lightTheme = ThemeData(
+  brightness: Brightness.light,
+  platform: TargetPlatform.iOS,
+  useMaterial3: true,
+  primarySwatch: createMaterialColor(const Color(0xFF223344)),
+  colorScheme: lightColorScheme,
+  /*
+  appBarTheme: AppBarTheme(
+    backgroundColor: lightColorScheme.primary, // AppBar的背景色
+    foregroundColor: lightColorScheme.onPrimary, // AppBar的前景色（标题、图标等）
+    elevation: 0.0, // AppBar的材质阴影大小（这里设置为0以实现扁平化设计）
+    iconTheme: IconThemeData(
+      color: lightColorScheme.onPrimary,
+    ), // AppBar中图标的颜色主题
+    actionsIconTheme: IconThemeData(
+      color: lightColorScheme.onPrimary,
+    ), // AppBar中操作图标的颜色主题
+    titleTextStyle: const TextStyle(
+      fontWeight: FontWeight.bold,
+    ), // AppBar标题的文字样式
+  ),
+  */
+);
+
+final ThemeData darkTheme = ThemeData(
+  brightness: Brightness.dark,
+  platform: TargetPlatform.iOS,
+  primarySwatch: createMaterialColor(const Color(0x00ffffff)),
+  useMaterial3: true,
+  colorScheme: darkColorScheme,
+);
+
+final LoginTheme loginTheme = LoginTheme(
+  // background
+  primaryColor: Get.isDarkMode ? darkPrimaryColor : lightPrimaryColor,
+  accentColor: Theme.of(Get.context!).colorScheme.onPrimary,
+  footerBackgroundColor: Colors.green,
+  logoWidth: 1,
+  headerMargin: 10,
+  titleStyle: TextStyle(
+    color: Theme.of(Get.context!).colorScheme.onPrimary,
+  ),
+  buttonTheme: LoginButtonTheme(
+    splashColor: Theme.of(Get.context!).colorScheme.onPrimary,
+    backgroundColor: Colors.green,
+    highlightColor: Colors.white,
+    elevation: 9.0,
+    shape: BeveledRectangleBorder(
+      borderRadius: BorderRadius.circular(2),
+    ),
+  ),
+  inputTheme: const InputDecorationTheme(
+    filled: true,
+    // iconColor: AppColors.primaryElement,
+    // suffixIconColor: AppColors.primaryElement,
+  ),
+);
 
 @immutable
-class IMBoyChatTheme extends ChatTheme {
+class DartChatTheme extends ChatTheme {
   /// Creates a default chat theme. Use this constructor if you want to
   /// override only a couple of properties, otherwise create a new class
   /// which extends [ChatTheme]
-  const IMBoyChatTheme({
+  const DartChatTheme({
+    super.backgroundColor = darkBgColor,
+    super.inputBackgroundColor = darkPrimaryColor,
+    super.inputSurfaceTintColor = darkPrimaryColor,
     super.attachmentButtonIcon,
-    super.backgroundColor = AppColors.ChatBg,
     super.dateDividerTextStyle = const TextStyle(
       color: neutral2,
       fontFamily: 'Avenir',
@@ -21,7 +172,7 @@ class IMBoyChatTheme extends ChatTheme {
     super.deliveredIcon,
     super.documentIcon,
     super.emptyChatPlaceholderTextStyle = const TextStyle(
-      color: AppColors.MainTextColor,
+      // color: Theme.of(Get.context!).colorScheme.onPrimary,
       fontFamily: 'Avenir',
       fontSize: 18,
       fontWeight: FontWeight.w500,
@@ -29,10 +180,8 @@ class IMBoyChatTheme extends ChatTheme {
     ),
     super.errorColor = error,
     super.errorIcon,
-    super.inputBackgroundColor = AppColors.ChatInputBackgroundColor,
-    super.inputSurfaceTintColor = AppColors.ChatInputBackgroundColor,
     super.inputPadding = EdgeInsets.zero,
-    super.inputTextColor = AppColors.MainTextColor,
+    super.inputTextColor = darkPrimaryColor,
     super.inputTextCursorColor,
     super.inputTextDecoration = const InputDecoration(
       border: OutlineInputBorder(
@@ -42,7 +191,7 @@ class IMBoyChatTheme extends ChatTheme {
       contentPadding: EdgeInsets.fromLTRB(8, 7, 8, 8),
       isCollapsed: false,
       filled: true,
-      fillColor: AppColors.ChatInputFillGgColor,
+      fillColor: ChatColor.ChatInputFillGgColor,
     ),
     super.messageBorderRadius = 20,
     super.messageInsetsHorizontal = 16,
@@ -79,16 +228,16 @@ class IMBoyChatTheme extends ChatTheme {
     super.seenIcon,
     super.sendButtonIcon,
     super.sendingIcon,
-    super.secondaryColor = AppColors.ChatReceivedMessageBodyBgColor,
+    super.secondaryColor = ChatColor.ChatReceivedMessageBodyBgColor,
     super.inputTextStyle = const TextStyle(
       fontFamily: 'Avenir',
       fontSize: 16,
       height: 1.375,
-      color: AppColors.ChatInputFillGgColor,
+      color: ChatColor.ChatInputFillGgColor,
     ),
-    super.primaryColor = AppColors.ChatSendMessageBgColor,
+    super.primaryColor = ChatColor.ChatSendMessageBgColor,
     super.sentMessageBodyTextStyle = const TextStyle(
-      color: AppColors.ChatSentMessageBodyTextColor,
+      color: ChatColor.ChatSentMessageBodyTextColor,
       fontFamily: 'Avenir',
       fontSize: 16,
       fontWeight: FontWeight.w500,
@@ -187,51 +336,186 @@ class IMBoyChatTheme extends ChatTheme {
         );
 }
 
-LoginTheme loginTheme = LoginTheme(
-  // backgroound
-  primaryColor: AppColors.primaryBackground,
-  accentColor: AppColors.primaryBackground,
-  footerBackgroundColor: AppColors.primaryBackground,
-  logoWidth: 1,
-  headerMargin: 10,
-  titleStyle: const TextStyle(
-    color: AppColors.primaryElement,
-  ),
-  buttonTheme: LoginButtonTheme(
-    splashColor: AppColors.TipColor,
-    backgroundColor: AppColors.primaryElement,
-    highlightColor: AppColors.secondaryElementText,
-    elevation: 9.0,
-    shape: BeveledRectangleBorder(
-      borderRadius: BorderRadius.circular(2),
+@immutable
+class LightChatTheme extends ChatTheme {
+  /// Creates a default chat theme. Use this constructor if you want to
+  /// override only a couple of properties, otherwise create a new class
+  /// which extends [ChatTheme]
+  const LightChatTheme({
+    super.backgroundColor = lightBgColor,
+    super.attachmentButtonIcon,
+    super.dateDividerTextStyle = const TextStyle(
+      color: neutral2,
+      fontFamily: 'Avenir',
+      fontSize: 12,
+      fontWeight: FontWeight.w800,
+      height: 1.333,
     ),
-  ),
-  inputTheme: const InputDecorationTheme(
-    filled: true,
-    iconColor: AppColors.primaryElement,
-    suffixIconColor: AppColors.primaryElement,
-  ),
-);
-
-//调用的时候需要把hex改一下，比如#223344 needs change to 0xFF223344
-//即把#换成0xFF即可
-
-MaterialColor createMaterialColor(Color color) {
-  List strengths = <double>[.05];
-  Map<int, Color> swatch = <int, Color>{};
-  final int r = color.red, g = color.green, b = color.blue;
-
-  for (int i = 1; i < 10; i++) {
-    strengths.add(0.1 * i);
-  }
-  for (var strength in strengths) {
-    final double ds = 0.5 - strength;
-    swatch[(strength * 1000).round()] = Color.fromRGBO(
-      r + ((ds < 0 ? r : (255 - r)) * ds).round(),
-      g + ((ds < 0 ? g : (255 - g)) * ds).round(),
-      b + ((ds < 0 ? b : (255 - b)) * ds).round(),
-      1,
-    );
-  }
-  return MaterialColor(color.value, swatch);
+    super.deliveredIcon,
+    super.documentIcon,
+    super.emptyChatPlaceholderTextStyle = const TextStyle(
+      // color: Theme.of(Get.context!).colorScheme.onPrimary,
+      fontFamily: 'Avenir',
+      fontSize: 18,
+      fontWeight: FontWeight.w500,
+      height: 2.0,
+    ),
+    super.errorColor = error,
+    super.errorIcon,
+    super.inputBackgroundColor = ChatColor.ChatInputBackgroundColor,
+    super.inputSurfaceTintColor = ChatColor.ChatInputBackgroundColor,
+    super.inputPadding = EdgeInsets.zero,
+    super.inputTextColor = lightOnPrimaryColor,
+    super.inputTextCursorColor,
+    super.inputTextDecoration = const InputDecoration(
+      border: OutlineInputBorder(
+        borderSide: BorderSide.none,
+        borderRadius: BorderRadius.all(Radius.circular(2.0)),
+      ),
+      contentPadding: EdgeInsets.fromLTRB(8, 7, 8, 8),
+      isCollapsed: false,
+      filled: true,
+      fillColor: ChatColor.ChatInputFillGgColor,
+    ),
+    super.messageBorderRadius = 20,
+    super.messageInsetsHorizontal = 16,
+    super.messageInsetsVertical = 8,
+    super.receivedMessageBodyTextStyle = const TextStyle(
+      color: neutral0,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w500,
+      height: 1.375,
+    ),
+    super.receivedMessageCaptionTextStyle = const TextStyle(
+      color: neutral2,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w500,
+      height: 1.333,
+    ),
+    super.receivedMessageDocumentIconColor = primary,
+    super.receivedMessageLinkDescriptionTextStyle = const TextStyle(
+      color: neutral0,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w400,
+      height: 1.428,
+    ),
+    super.receivedMessageLinkTitleTextStyle = const TextStyle(
+      color: neutral0,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w800,
+      height: 1.375,
+    ),
+    super.seenIcon,
+    super.sendButtonIcon,
+    super.sendingIcon,
+    super.secondaryColor = ChatColor.ChatReceivedMessageBodyBgColor,
+    super.inputTextStyle = const TextStyle(
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      height: 1.375,
+      color: ChatColor.ChatInputFillGgColor,
+    ),
+    super.primaryColor = ChatColor.ChatSendMessageBgColor,
+    super.sentMessageBodyTextStyle = const TextStyle(
+      color: ChatColor.ChatSentMessageBodyTextColor,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w500,
+      height: 1.375,
+    ),
+    super.sentMessageCaptionTextStyle = const TextStyle(
+      color: neutral7WithOpacity,
+      fontFamily: 'Avenir',
+      fontSize: 12,
+      fontWeight: FontWeight.w500,
+      height: 1.375,
+    ),
+    super.sentMessageDocumentIconColor = neutral7,
+    super.sentMessageLinkDescriptionTextStyle = const TextStyle(
+      color: neutral7,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w400,
+      height: 1.428,
+    ),
+    super.sentMessageLinkTitleTextStyle = const TextStyle(
+      color: neutral7,
+      fontFamily: 'Avenir',
+      fontSize: 16,
+      fontWeight: FontWeight.w800,
+      height: 1.375,
+    ),
+    super.userAvatarImageBackgroundColor = Colors.transparent,
+    super.userAvatarNameColors = colors,
+    super.userAvatarTextStyle = const TextStyle(
+      color: neutral7,
+      fontFamily: 'Avenir',
+      fontSize: 12,
+      fontWeight: FontWeight.w800,
+      height: 1.333,
+    ),
+    super.userNameTextStyle = const TextStyle(
+      fontFamily: 'Avenir',
+      fontSize: 12,
+      fontWeight: FontWeight.w800,
+      height: 1.333,
+    ),
+    //
+    super.dateDividerMargin = const EdgeInsets.only(
+      bottom: 8,
+      top: 12,
+    ),
+    super.receivedEmojiMessageTextStyle = const TextStyle(fontSize: 20),
+    super.sentEmojiMessageTextStyle = const TextStyle(fontSize: 20),
+    super.statusIconPadding = const EdgeInsets.symmetric(horizontal: 4),
+    super.typingIndicatorTheme = const TypingIndicatorTheme(
+      animatedCirclesColor: neutral1,
+      animatedCircleSize: 5.0,
+      bubbleBorder: BorderRadius.all(Radius.circular(27.0)),
+      bubbleColor: neutral7,
+      countAvatarColor: primary,
+      countTextColor: secondary,
+      multipleUserTextStyle: TextStyle(
+        fontSize: 12,
+        fontWeight: FontWeight.w500,
+        color: neutral2,
+      ),
+    ),
+    super.messageMaxWidth = double.infinity,
+  }) : super(
+          sendButtonMargin: null,
+          attachmentButtonMargin: null,
+          inputElevation: 0,
+          systemMessageTheme: const SystemMessageTheme(
+            margin: EdgeInsets.only(
+              bottom: 24,
+              top: 8,
+              left: 8,
+              right: 8,
+            ),
+            textStyle: TextStyle(
+              color: neutral2,
+              fontSize: 12,
+              fontWeight: FontWeight.w800,
+              height: 1.333,
+            ),
+          ),
+          inputBorderRadius: const BorderRadius.vertical(
+            top: Radius.circular(8),
+          ),
+          inputMargin: const EdgeInsets.fromLTRB(16, 8, 18, 8),
+          unreadHeaderTheme: const UnreadHeaderTheme(
+            color: secondary,
+            textStyle: TextStyle(
+              color: neutral2,
+              fontSize: 12,
+              fontWeight: FontWeight.w500,
+              height: 1.333,
+            ),
+          ),
+        );
 }
diff --git a/lib/main.dart b/lib/main.dart
index a1626bb..8eaafa5 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,68 +1,12 @@
-import 'package:drag_ball/drag_ball.dart';
 import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
 import 'package:flutter_dotenv/flutter_dotenv.dart';
-import 'package:flutter_easyloading/flutter_easyloading.dart';
-import 'package:flutter_screenutil/flutter_screenutil.dart';
-import 'package:get/get.dart';
-import 'package:image/image.dart' as img;
-
-import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/component/ui/feedback_builder.dart';
-
-// ignore: depend_on_referenced_packages
-import 'package:jiffy/jiffy.dart';
 import 'package:sentry_flutter/sentry_flutter.dart';
-import 'package:feedback/feedback.dart';
-import 'package:niku/namespace.dart' as n;
 
-import 'package:imboy/component/controller.dart';
-import 'package:imboy/component/helper/log.dart';
-import 'package:imboy/component/locales/locales.g.dart';
-import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/config/const.dart';
-import 'package:imboy/page/bottom_navigation/bottom_navigation_view.dart';
-import 'package:imboy/page/pages.dart';
-import 'package:imboy/store/provider/attachment_provider.dart';
-import 'package:imboy/store/provider/feedback_provider.dart';
-import 'package:imboy/store/repository/user_repo_local.dart';
 
-import 'component/locales/locales.dart';
 import 'config/init.dart';
-import 'config/theme.dart';
-import 'page/passport/passport_view.dart';
-
-void run() async {
-  await Jiffy.setLocale(jiffyLocal(sysLang('jiffy')));
-  // 强制竖屏 DeviceOrientation.portraitUp
-  SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp])
-      .then((_) {
-    runApp(
-      BetterFeedback(
-        theme: FeedbackThemeData(
-          background: Colors.grey,
-          feedbackSheetColor: Colors.grey[50]!,
-          drawColors: [
-            Colors.red,
-            Colors.orange,
-            Colors.yellow,
-            Colors.green,
-            Colors.cyan,
-            Colors.blue,
-            Colors.purple,
-          ],
-        ),
-        feedbackBuilder: (context, onSubmit, scrollController) =>
-            IMBoyFeedbackForm(
-          onSubmit: onSubmit,
-          scrollController: scrollController,
-        ),
-        child: const IMBoyApp(),
-      ),
-    );
-  });
-}
+import 'run.dart';
 
 void main() async {
   WidgetsFlutterBinding.ensureInitialized();
@@ -82,145 +26,3 @@ void main() async {
     );
   }
 }
-
-class IMBoyApp extends StatelessWidget {
-  const IMBoyApp({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    String lang = jiffyLocal(sysLang(''));
-    List<String> code = lang.split('_');
-    return Dragball(
-      icon: const DecoratedBox(
-        decoration: BoxDecoration(
-          shape: BoxShape.circle,
-          color: AppColors.primaryElement,
-        ),
-        child: Padding(
-          padding: EdgeInsets.all(3),
-          child: Icon(
-            Icons.navigate_before_rounded,
-            size: 24,
-            color: Colors.white,
-          ),
-        ),
-      ),
-      ball: SizedBox(
-        width: 110,
-        height: 30,
-        child: n.Row([
-          const Space(width: 20),
-          Expanded(child: Text('feedback'.tr)),
-          const Space(width: 20)
-        ])
-          ..backgroundColor = AppColors.ChatInputBackgroundColor
-          // 垂直居中
-          ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
-      ),
-      initialPosition: const DragballPosition.defaultPosition(),
-      onTap: () {
-        BetterFeedback.of(context).show((UserFeedback feedback) async {
-          iPrint(
-              "BetterFeedback show extra ${feedback.extra.toString()} isLogin ${UserRepoLocal.to.isLogin}");
-          // Uint8List feedbackScreenshot = feedback.screenshot
-          if (feedback.text.isEmpty) {
-            EasyLoading.showError('feedback_content_required'.tr);
-            return;
-          }
-
-          img.Image image = img.decodeImage(feedback.screenshot)!;
-          final result = img.encodeJpg(image, quality: 70);
-
-          await AttachmentProvider.uploadBytes("feedback", result, (
-            Map<String, dynamic> resp,
-            String uri,
-          ) async {
-            FeedbackProvider p = FeedbackProvider();
-            var type = feedback.extra?['feedback_type'] ?? '';
-            var rating = feedback.extra?['rating'] ?? '';
-
-            Map<String, dynamic> data = {
-              'rating': rating,
-              'type': type.toString().split('.').last.replaceAll('_', ' '),
-              'contact_detail': feedback.extra?['contact_detail'] ?? '',
-              'description': feedback.text,
-              'screenshot': [uri],
-            };
-            bool res = await p.add(data);
-            if (res) {
-              EasyLoading.showSuccess('feedback_success_msg'.tr);
-            } else {
-              EasyLoading.showError('tip_failed'.tr);
-            }
-          }, (Error error) {
-            debugPrint("> on upload ${error.toString()}");
-          }, process: false);
-        });
-      },
-      onPositionChanged: (DragballPosition position) {
-        // debugPrint(position.toString());
-      },
-      child: ScreenUtilInit(
-        designSize: const Size(375, 812),
-        minTextAdapt: true,
-        splitScreenMode: true,
-        // fix https://github.com/flutter/flutter/issues/126585
-        useInheritedMediaQuery: true,
-        builder: (_, child) => GetMaterialApp(
-          navigatorKey: navigatorKey,
-          title: 'IMBoy',
-          // 底部导航组件
-          home: UserRepoLocal.to.isLogin
-              ? BottomNavigationPage()
-              : PassportPage(),
-          debugShowCheckedModeBanner: false,
-          // getPages: AppPages.routes,
-          // initialRoute: AppPages.INITIAL,
-          // translations: TranslationService(),
-          navigatorObservers: [AppPages.observer],
-          // localizationsDelegates: [
-          //   GlobalMaterialLocalizations.delegate,
-          //   GlobalWidgetsLocalizations.delegate,
-          //   GlobalCupertinoLocalizations.delegate,
-          // ],
-          translationsKeys: AppTranslation.translations,
-
-          translations: IMBoyTranslations(),
-          // 翻译将在该语言环境中显示
-          // locale: const Locale('zh', 'CN'),
-          locale: Locale(code[0], code[1]),
-          // 如果选择了无效的语言环境，则指定备用语言环境。
-          fallbackLocale: const Locale('en', 'US'),
-          // 添加一个回调语言选项，以备上面指定的语言翻译不存在
-          defaultTransition: Transition.fade,
-          // opaqueRoute: Get.isOpaqueRouteDefault,
-          // popGesture: Get.isPopGestureEnable,
-          // theme: Get.find<ThemeController>().darkMode == 0
-          //     ? ThemeData.light()
-          //     : ThemeData.dark(),
-          builder: EasyLoading.init(),
-          theme: ThemeData(
-            platform: TargetPlatform.iOS,
-            brightness: Get.find<ThemeController>().darkMode == 0
-                ? Brightness.light
-                : Brightness.dark,
-            primarySwatch: createMaterialColor(const Color(0xFF223344)),
-            useMaterial3: true,
-            // 设置为 true 影响到 其他样式，例如我的页面的样式
-            colorScheme: ColorScheme.fromSeed(
-              seedColor: AppColors.primaryElement,
-              primary: AppColors.primaryElement,
-              primaryContainer: AppColors.primaryElement,
-              // ···
-              brightness: Get.find<ThemeController>().darkMode == 0
-                  ? Brightness.light
-                  : Brightness.dark,
-            ),
-          ),
-          enableLog: true,
-          logWriterCallback: Logger.write,
-        ),
-      ),
-    );
-  }
-}
diff --git a/lib/main_dev.dart b/lib/main_dev.dart
index c049d3c..00ee2e5 100644
--- a/lib/main_dev.dart
+++ b/lib/main_dev.dart
@@ -1,68 +1,12 @@
-import 'package:drag_ball/drag_ball.dart';
 import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
 import 'package:flutter_dotenv/flutter_dotenv.dart';
-import 'package:flutter_easyloading/flutter_easyloading.dart';
-import 'package:flutter_screenutil/flutter_screenutil.dart';
-import 'package:get/get.dart';
-import 'package:image/image.dart' as img;
-
-import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/component/ui/feedback_builder.dart';
-
-// ignore: depend_on_referenced_packages
-import 'package:jiffy/jiffy.dart';
 import 'package:sentry_flutter/sentry_flutter.dart';
-import 'package:feedback/feedback.dart';
-import 'package:niku/namespace.dart' as n;
 
-import 'package:imboy/component/controller.dart';
-import 'package:imboy/component/helper/log.dart';
-import 'package:imboy/component/locales/locales.g.dart';
-import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/config/const.dart';
-import 'package:imboy/page/bottom_navigation/bottom_navigation_view.dart';
-import 'package:imboy/page/pages.dart';
-import 'package:imboy/store/provider/attachment_provider.dart';
-import 'package:imboy/store/provider/feedback_provider.dart';
-import 'package:imboy/store/repository/user_repo_local.dart';
 
-import 'component/locales/locales.dart';
 import 'config/init.dart';
-import 'config/theme.dart';
-import 'page/passport/passport_view.dart';
-
-void run() async {
-  await Jiffy.setLocale(jiffyLocal(sysLang('jiffy')));
-  // 强制竖屏 DeviceOrientation.portraitUp
-  SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp])
-      .then((_) {
-    runApp(
-      BetterFeedback(
-        theme: FeedbackThemeData(
-          background: Colors.grey,
-          feedbackSheetColor: Colors.grey[50]!,
-          drawColors: [
-            Colors.red,
-            Colors.orange,
-            Colors.yellow,
-            Colors.green,
-            Colors.cyan,
-            Colors.blue,
-            Colors.purple,
-          ],
-        ),
-        feedbackBuilder: (context, onSubmit, scrollController) =>
-            IMBoyFeedbackForm(
-          onSubmit: onSubmit,
-          scrollController: scrollController,
-        ),
-        child: const IMBoyApp(),
-      ),
-    );
-  });
-}
+import 'run.dart';
 
 void main() async {
   WidgetsFlutterBinding.ensureInitialized();
@@ -82,146 +26,3 @@ void main() async {
     );
   }
 }
-
-class IMBoyApp extends StatelessWidget {
-  const IMBoyApp({super.key});
-
-  @override
-  Widget build(BuildContext context) {
-    String lang = jiffyLocal(sysLang(''));
-    List<String> code = lang.split('_');
-    return Dragball(
-      icon: const DecoratedBox(
-        decoration: BoxDecoration(
-          shape: BoxShape.circle,
-          color: AppColors.primaryElement,
-        ),
-        child: Padding(
-          padding: EdgeInsets.all(3),
-          child: Icon(
-            Icons.navigate_before_rounded,
-            size: 24,
-            color: Colors.white,
-          ),
-        ),
-      ),
-      ball: SizedBox(
-        width: 110,
-        height: 30,
-        child: n.Row([
-          const Space(width: 20),
-          Expanded(child: Text('feedback'.tr)),
-          const Space(width: 20)
-        ])
-          ..backgroundColor = AppColors.ChatInputBackgroundColor
-          // 垂直居中
-          ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
-      ),
-      initialPosition: const DragballPosition.defaultPosition(),
-      onTap: () {
-        BetterFeedback.of(context).show((UserFeedback feedback) async {
-          iPrint(
-              "BetterFeedback show extra ${feedback.extra.toString()} isLogin ${UserRepoLocal.to.isLogin}");
-          // Uint8List feedbackScreenshot = feedback.screenshot
-          if (feedback.text.isEmpty) {
-            EasyLoading.showError('feedback_content_required'.tr);
-            return;
-          }
-
-          img.Image image = img.decodeImage(feedback.screenshot)!;
-          final result = img.encodeJpg(image, quality: 70);
-
-          await AttachmentProvider.uploadBytes("feedback", result, (
-            Map<String, dynamic> resp,
-            String uri,
-          ) async {
-            FeedbackProvider p = FeedbackProvider();
-            var type = feedback.extra?['feedback_type'] ?? '';
-            var rating = feedback.extra?['rating'] ?? '';
-
-            Map<String, dynamic> data = {
-              'rating': rating,
-              'type': type.toString().split('.').last.replaceAll('_', ' '),
-              'contact_detail': feedback.extra?['contact_detail'] ?? '',
-              'description': feedback.text,
-              'screenshot': [uri],
-            };
-            bool res = await p.add(data);
-            if (res) {
-              EasyLoading.showSuccess('feedback_success_msg'.tr);
-            } else {
-              EasyLoading.showError('tip_failed'.tr);
-            }
-          }, (Error error) {
-            debugPrint("> on upload ${error.toString()}");
-          }, process: false);
-        });
-      },
-      onPositionChanged: (DragballPosition position) {
-        // debugPrint(position.toString());
-      },
-      child: ScreenUtilInit(
-        designSize: const Size(375, 812),
-        minTextAdapt: true,
-        splitScreenMode: true,
-        // fix https://github.com/flutter/flutter/issues/126585
-        useInheritedMediaQuery: true,
-        builder: (_, child) => GetMaterialApp(
-          navigatorKey: navigatorKey,
-          title: 'IMBoy',
-          // 底部导航组件
-          home: UserRepoLocal.to.isLogin
-              ? BottomNavigationPage()
-              : PassportPage(),
-          debugShowCheckedModeBanner: false,
-          // getPages: AppPages.routes,
-          // initialRoute: AppPages.INITIAL,
-          // translations: TranslationService(),
-          navigatorObservers: [AppPages.observer],
-          // localizationsDelegates: [
-          //   GlobalMaterialLocalizations.delegate,
-          //   GlobalWidgetsLocalizations.delegate,
-          //   GlobalCupertinoLocalizations.delegate,
-          // ],
-          translationsKeys: AppTranslation.translations,
-
-          translations: IMBoyTranslations(),
-          // 翻译将在该语言环境中显示
-          // locale: const Locale('zh', 'CN'),
-          // locale: Get.deviceLocale,
-          locale: Locale(code[0], code[1]),
-          // 如果选择了无效的语言环境，则指定备用语言环境。
-          fallbackLocale: const Locale('en', 'US'),
-          // 添加一个回调语言选项，以备上面指定的语言翻译不存在
-          defaultTransition: Transition.fade,
-          // opaqueRoute: Get.isOpaqueRouteDefault,
-          // popGesture: Get.isPopGestureEnable,
-          // theme: Get.find<ThemeController>().darkMode == 0
-          //     ? ThemeData.light()
-          //     : ThemeData.dark(),
-          builder: EasyLoading.init(),
-          theme: ThemeData(
-            platform: TargetPlatform.iOS,
-            brightness: Get.find<ThemeController>().darkMode == 0
-                ? Brightness.light
-                : Brightness.dark,
-            primarySwatch: createMaterialColor(const Color(0xFF223344)),
-            useMaterial3: true,
-            // 设置为 true 影响到 其他样式，例如我的页面的样式
-            colorScheme: ColorScheme.fromSeed(
-              seedColor: AppColors.primaryElement,
-              primary: AppColors.primaryElement,
-              primaryContainer: AppColors.primaryElement,
-              // ···
-              brightness: Get.find<ThemeController>().darkMode == 0
-                  ? Brightness.light
-                  : Brightness.dark,
-            ),
-          ),
-          enableLog: true,
-          logWriterCallback: Logger.write,
-        ),
-      ),
-    );
-  }
-}
diff --git a/lib/page/bottom_navigation/bottom_navigation_view.dart b/lib/page/bottom_navigation/bottom_navigation_view.dart
index 869169f..cd90bd6 100644
--- a/lib/page/bottom_navigation/bottom_navigation_view.dart
+++ b/lib/page/bottom_navigation/bottom_navigation_view.dart
@@ -41,7 +41,7 @@ class BottomNavigationPage extends StatelessWidget {
     if (args is Map<String, dynamic>) {
       state.bottomBarIndex.value = args['index'] ?? state.bottomBarIndex.value;
       // Flutter中滑动出现_positions.isNotEmpty异常解决办法  https://www.jianshu.com/p/d5a99c68e295
-      Future.delayed(const Duration(milliseconds: 500), () {
+      Future.delayed(const Duration(milliseconds: 350), () {
         if (pageController.hasClients) {
           pageController.jumpToPage(state.bottomBarIndex.value);
         }
@@ -60,6 +60,7 @@ class BottomNavigationPage extends StatelessWidget {
       //底部导航条
       bottomNavigationBar: Obx(
         () => BottomNavigationBar(
+          backgroundColor: Theme.of(context).colorScheme.primary,
           // 当前菜单下标
           currentIndex: state.bottomBarIndex.value,
           // 点击事件,获取当前点击的标签下标
@@ -70,6 +71,7 @@ class BottomNavigationPage extends StatelessWidget {
           },
           iconSize: 30.0,
           // 底部导航栏按钮选中时的颜色
+          // fixedColor: Theme.of(context).colorScheme.onPrimary,
           fixedColor: Colors.green,
           type: BottomNavigationBarType.fixed,
           items: [
@@ -78,7 +80,7 @@ class BottomNavigationPage extends StatelessWidget {
                 showBadge: conversationLogic.chatMsgRemindCounter > 0,
                 // shape: badges.BadgeShape.square,
                 // borderRadius: BorderRadius.circular(10),
-                position: badges.BadgePosition.topStart(top: -4, start: 20),
+                position: badges.BadgePosition.topStart(top: -8, start: 20),
                 // padding: const EdgeInsets.fromLTRB(5, 3, 5, 3),
                 badgeContent: Container(
                   color: Colors.red,
@@ -87,7 +89,7 @@ class BottomNavigationPage extends StatelessWidget {
                     conversationLogic.chatMsgRemindCounter.toString(),
                     style: const TextStyle(
                       color: Colors.white,
-                      fontSize: 8,
+                      fontSize: 10,
                     ),
                   ),
                 ),
@@ -108,7 +110,7 @@ class BottomNavigationPage extends StatelessWidget {
                 showBadge: logic.newFriendRemindCounter.isNotEmpty,
                 // shape: badges.BadgeShape.square,
                 // borderRadius: BorderRadius.circular(10),
-                position: badges.BadgePosition.topStart(top: -4, start: 20),
+                position: badges.BadgePosition.topStart(top: -8, start: 20),
                 // padding: const EdgeInsets.fromLTRB(5, 3, 5, 3),
                 badgeContent: Container(
                   color: Colors.red,
@@ -117,7 +119,7 @@ class BottomNavigationPage extends StatelessWidget {
                     logic.newFriendRemindCounter.length.toString(),
                     style: const TextStyle(
                       color: Colors.white,
-                      fontSize: 8,
+                      fontSize: 10,
                     ),
                   ),
                 ),
diff --git a/lib/page/chat/chat/chat_logic.dart b/lib/page/chat/chat/chat_logic.dart
index 26d977e..55a330f 100644
--- a/lib/page/chat/chat/chat_logic.dart
+++ b/lib/page/chat/chat/chat_logic.dart
@@ -26,7 +26,9 @@ import 'chat_state.dart';
 
 class ChatLogic extends GetxController {
   final state = ChatState();
+
   ChatLogic();
+
   void initState() {
     state.messages = [];
     state.scrollController = AutoScrollController();
diff --git a/lib/page/chat/chat/chat_state.dart b/lib/page/chat/chat/chat_state.dart
index 9da8a62..900b53f 100644
--- a/lib/page/chat/chat/chat_state.dart
+++ b/lib/page/chat/chat/chat_state.dart
@@ -11,6 +11,7 @@ class ChatState {
   List<types.Message> messages = [];
 
   int nextAutoId = 0;
+
   ChatState() {
     ///Initialize variables
   }
diff --git a/lib/page/chat/chat/chat_view.dart b/lib/page/chat/chat/chat_view.dart
index ef74931..eccf5a2 100644
--- a/lib/page/chat/chat/chat_view.dart
+++ b/lib/page/chat/chat/chat_view.dart
@@ -33,7 +33,7 @@ import 'package:imboy/component/message/message_image_builder.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/network_failure_tips.dart';
 import 'package:imboy/component/voice_record/voice_widget.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/config/theme.dart';
 import 'package:imboy/page/chat/chat_setting/chat_setting_view.dart';
@@ -103,6 +103,7 @@ class ChatPageState extends State<ChatPage> {
 
   // ignore: prefer_typing_uninitialized_variables
   late var currentUser;
+
   @override
   void initState() {
     // 初始化的时候置空数据，放在该位置（initData之前），不会出现闪屏
@@ -159,6 +160,9 @@ class ChatPageState extends State<ChatPage> {
 
     // 接收到新的消息订阅
     eventBus.on<types.Message>().listen((types.Message msg) async {
+      if (widget.type == 'C2C' && msg.author.id != widget.peerId) {
+        return;
+      }
       final i = logic.state.messages.indexWhere((e) => e.id == msg.id);
       iPrint("changeMessageState 4 ${msg.id}; i $i; mounted $mounted");
       if (i == -1) {
@@ -801,6 +805,9 @@ class ChatPageState extends State<ChatPage> {
     } else if (itemId == "transpond") {
       // 转发消息
       getx.Get.bottomSheet(
+        backgroundColor: getx.Get.isDarkMode
+            ? const Color.fromRGBO(80, 80, 80, 1)
+            : const Color.fromRGBO(240, 240, 240, 1),
         n.Padding(
           top: 24,
           child: SendToPage(msg: msg),
@@ -842,19 +849,21 @@ class ChatPageState extends State<ChatPage> {
           right: 10,
           bottom: 10,
           top: 10,
-          child: const Icon(
+          child: Icon(
             Icons.more_horiz,
+            color: Theme.of(context).colorScheme.onPrimary,
             // size: 40,
           ),
         ),
       )
     ];
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
+      backgroundColor: Theme.of(context).colorScheme.background,
       appBar: _showAppBar
-          ? PageAppBar(
+          ? NavAppBar(
               title: newGroupName == "" ? widget.peerTitle : newGroupName,
               rightDMActions: topRightWidget,
+              automaticallyImplyLeading: true,
             )
           : null,
       body: n.Column([
@@ -893,7 +902,6 @@ class ChatPageState extends State<ChatPage> {
                     // nameBuilder: nameBuilder,
                     onPreviewDataFetched: _handlePreviewDataFetched,
                     // options: textMessageOptions,
-                    // showName: showName,
                     // usePreviewData: usePreviewData,
                     // userAgent: userAgent,
                   ),
@@ -947,7 +955,9 @@ class ChatPageState extends State<ChatPage> {
               onMessageStatusTap: _onMessageStatusTap,
               onMessageStatusLongPress: _onMessageStatusTap,
               hideBackgroundOnEmojiMessages: false,
-              theme: const IMBoyChatTheme(),
+              theme: getx.Get.isDarkMode
+                  ? const DartChatTheme()
+                  : const LightChatTheme(),
               // onTextFieldTap: () {
               // debugPrint("> on chatinput onTextFieldTap");
               // },
@@ -978,7 +988,7 @@ class ChatPageState extends State<ChatPage> {
                             bottom: 16,
                             child: Text(
                               sysPrompt,
-                              style: const TextStyle(color: AppColors.TipColor),
+                              // style: const TextStyle(color: AppColors.TipColor),
                               maxLines: 4,
                               softWrap: true,
                               overflow: TextOverflow.fade,
diff --git a/lib/page/chat/chat_background/chat_background_view.dart b/lib/page/chat/chat_background/chat_background_view.dart
index 2af9016..74ce0d1 100644
--- a/lib/page/chat/chat_background/chat_background_view.dart
+++ b/lib/page/chat/chat_background/chat_background_view.dart
@@ -1,7 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
 
 import 'chat_background_logic.dart';
 import 'chat_background_state.dart';
@@ -21,10 +20,10 @@ class _ChatBackgroundPageState extends State<ChatBackgroundPage> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-        backgroundColor: AppColors.AppBarColor,
-        appBar: PageAppBar(
+        backgroundColor: Theme.of(context).colorScheme.background,
+        appBar: NavAppBar(
           title: 'set_chat_background'.tr,
-          // backgroundColor: AppColors.AppBarColor,
+          automaticallyImplyLeading: true,
         ),
         body: const SizedBox.shrink());
   }
diff --git a/lib/page/chat/chat_setting/chat_setting_view.dart b/lib/page/chat/chat_setting/chat_setting_view.dart
index 4a27397..d3b33c7 100644
--- a/lib/page/chat/chat_setting/chat_setting_view.dart
+++ b/lib/page/chat/chat_setting/chat_setting_view.dart
@@ -4,7 +4,7 @@ import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/label_row.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/conversation/conversation_logic.dart';
 import 'package:imboy/page/search/search_view.dart';
 import 'package:niku/namespace.dart' as n;
@@ -115,14 +115,14 @@ class _ChatSettingPageState extends State<ChatSettingPage> {
               )
               ..actions = [
                 n.Button('button_cancel'.tr.n)
-                  ..style =
-                      n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+                  ..style = n.NikuButtonStyle(
+                      foregroundColor: Theme.of(context).colorScheme.onPrimary)
                   ..onPressed = () {
                     Navigator.of(context).pop();
                   },
                 n.Button('button_confirm'.tr.n)
-                  ..style =
-                      n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+                  ..style = n.NikuButtonStyle(
+                      foregroundColor: Theme.of(context).colorScheme.onPrimary)
                   ..onPressed = () async {
                     Navigator.of(context).pop();
 
@@ -176,14 +176,15 @@ class _ChatSettingPageState extends State<ChatSettingPage> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
         leading: BackButton(
           onPressed: () {
             Get.back(result: backDoRefresh);
           },
         ),
         title: 'chat_settings'.tr,
+        automaticallyImplyLeading: true,
       ),
       body: SingleChildScrollView(
         child: Column(children: body()),
diff --git a/lib/page/chat/launch_chat/launch_chat_view.dart b/lib/page/chat/launch_chat/launch_chat_view.dart
index 6bbd5ba..0748431 100644
--- a/lib/page/chat/launch_chat/launch_chat_view.dart
+++ b/lib/page/chat/launch_chat/launch_chat_view.dart
@@ -6,13 +6,15 @@ import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/contact/contact/contact_logic.dart';
 import 'package:imboy/service/assets.dart';
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:imboy/store/repository/contact_repo_sqlite.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
+
 import 'launch_chat_logic.dart';
 import 'launch_chat_state.dart';
 
@@ -26,8 +28,8 @@ class LaunchChatPage extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      // appBar: PageAppBar(title: 'select_contacts'.tr),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      // appBar: NavAppBar(automaticallyImplyLeading: true,title: 'select_contacts'.tr),
       appBar: NavAppBar(
         title: 'select_contacts'.tr,
         leadingWidth: 72,
@@ -74,10 +76,10 @@ class LaunchChatPage extends StatelessWidget {
               style: logic.state.valueChanged.isTrue
                   ? ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.primaryElement,
+                        Theme.of(context).colorScheme.primary,
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
-                        Colors.white,
+                        Theme.of(context).colorScheme.onPrimary,
                       ),
                       minimumSize:
                           MaterialStateProperty.all(const Size(88, 40)),
@@ -86,13 +88,14 @@ class LaunchChatPage extends StatelessWidget {
                     )
                   : ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.AppBarColor,
+                        Theme.of(context).colorScheme.background,
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.LineColor,
+                        Theme.of(context).colorScheme.onBackground,
+                      ),
+                      minimumSize: MaterialStateProperty.all(
+                        const Size(88, 40),
                       ),
-                      minimumSize:
-                          MaterialStateProperty.all(const Size(88, 40)),
                       visualDensity: VisualDensity.compact,
                       padding: MaterialStateProperty.all(EdgeInsets.zero),
                     ),
@@ -143,14 +146,11 @@ class LaunchChatPage extends StatelessWidget {
             child: Container(
               width: Get.width,
               height: Get.height - 150,
-              color: AppColors.BgColor,
+              color: Theme.of(context).colorScheme.background,
               child: n.Column([
                 n.ListTile(
                   title: Text('select_a_group'.tr),
-                  trailing: Icon(
-                    Icons.navigate_next,
-                    color: AppColors.MainTextColor.withOpacity(0.5),
-                  ),
+                  trailing: navigateNextIcon,
                   onTap: () {
                     // Get.to(
                     //       () => MarkdownPage(
@@ -166,10 +166,7 @@ class LaunchChatPage extends StatelessWidget {
                 n.Padding(left: 18, child: const Divider()),
                 n.ListTile(
                   title: Text('create_group_f2f'.tr),
-                  trailing: Icon(
-                    Icons.navigate_next,
-                    color: AppColors.MainTextColor.withOpacity(0.5),
-                  ),
+                  trailing: navigateNextIcon,
                   onTap: () {
                     // Get.to(
                     //       () => MarkdownPage(
@@ -185,7 +182,6 @@ class LaunchChatPage extends StatelessWidget {
                 n.Padding(left: 18, child: const Divider()),
                 Expanded(
                   child: Container(
-                    color: Colors.white,
                     child: SlidableAutoCloseBehavior(child: Obx(() {
                       return logic.state.items.isEmpty
                           ? NoDataView(text: 'no_data'.tr)
diff --git a/lib/page/chat/p2p_call_screen/p2p_call_screen_view.dart b/lib/page/chat/p2p_call_screen/p2p_call_screen_view.dart
index f426b74..efa31f9 100644
--- a/lib/page/chat/p2p_call_screen/p2p_call_screen_view.dart
+++ b/lib/page/chat/p2p_call_screen/p2p_call_screen_view.dart
@@ -10,7 +10,7 @@ import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/webrtc/dragable.dart';
 import 'package:imboy/component/webrtc/enum.dart';
 import 'package:imboy/component/webrtc/session.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/service/message.dart';
 import 'package:imboy/store/model/contact_model.dart';
@@ -421,7 +421,7 @@ class _P2pCallScreenPageState extends State<P2pCallScreenPage> {
         onTap: _zoom,
         child: Container(
           decoration: BoxDecoration(
-            color: AppColors.AppBarColor,
+            color: Theme.of(context).colorScheme.onPrimaryContainer,
             borderRadius: BorderRadius.circular(12),
             border: Border.all(color: Colors.white10, width: 2),
           ),
@@ -476,7 +476,7 @@ class _P2pCallScreenPageState extends State<P2pCallScreenPage> {
         margin: const EdgeInsets.fromLTRB(0.0, 0.0, 0.0, 0.0),
         width: Get.width,
         height: Get.height,
-        decoration: const BoxDecoration(color: Colors.black54),
+        //decoration: const BoxDecoration(color: Colors.black54),
         child: InkWell(
           onTap: switchTools,
           child: RTCVideoView(
@@ -553,6 +553,7 @@ class _P2pCallScreenPageState extends State<P2pCallScreenPage> {
   Widget build(BuildContext context) {
     return IndexedStack(index: minimized ? 1 : 0, children: [
       Scaffold(
+        backgroundColor: Theme.of(context).colorScheme.background,
         floatingActionButtonLocation:
             FloatingActionButtonLocation.miniCenterFloat,
         floatingActionButton: showTool ? _buildTools() : null,
diff --git a/lib/page/chat/send_to/send_to_view.dart b/lib/page/chat/send_to/send_to_view.dart
index 37267ab..7525d33 100644
--- a/lib/page/chat/send_to/send_to_view.dart
+++ b/lib/page/chat/send_to/send_to_view.dart
@@ -11,7 +11,8 @@ import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+import 'package:imboy/component/ui/line.dart';
+
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:imboy/store/model/conversation_model.dart';
 import 'package:imboy/store/repository/contact_repo_sqlite.dart';
@@ -60,7 +61,7 @@ class SendToPage extends StatelessWidget {
       } else {
         btn = InkWell(
           onTap: () {
-            Get.close();
+            Get.back();
           },
           child: n.Padding(
             top: 14,
@@ -94,6 +95,7 @@ class SendToPage extends StatelessWidget {
               top: 14,
               left: 10,
               right: 10,
+              bottom: 14,
               child: state.multipleChoice.isTrue
                   ? Text("${'button_accomplish'.tr}$suffix")
                   : Text('multi_select'.tr),
@@ -103,7 +105,7 @@ class SendToPage extends StatelessWidget {
       )
     ];
     return Scaffold(
-      backgroundColor: Colors.white,
+      backgroundColor: Theme.of(context).colorScheme.background,
       appBar: NavAppBar(
         leading: leading,
         title: 'forward_to'.tr,
@@ -113,11 +115,10 @@ class SendToPage extends StatelessWidget {
       floatingActionButtonLocation: FloatingActionButtonLocation.miniEndTop,
       floatingActionButton: searchBoxBuild(context),
       body: n.Column([
-        // line
         Container(
           width: Get.width,
           height: 8,
-          color: AppColors.ChatBg,
+          color: Theme.of(context).colorScheme.background,
           // color: Colors.red,
           margin: const EdgeInsets.only(top: 53.0),
         ),
@@ -160,8 +161,12 @@ class SendToPage extends StatelessWidget {
                   child: Obx(
                     () => n.ListView(
                       itemCount: state.conversations.length,
-                      children:
-                          state.conversations.map(_buildListItem).toList(),
+                      children: state.conversations
+                          .map((conversation) => _buildListItem(
+                                context,
+                                conversation,
+                              ))
+                          .toList(),
                     ),
                   ),
                 ),
@@ -173,18 +178,18 @@ class SendToPage extends StatelessWidget {
     );
   }
 
-  Widget searchBoxBuild(BuildContext context) {
+  Widget searchBoxBuild(BuildContext ctx) {
     // TODO leeyi 2023-01-29 16:56:14
     return Container(
       margin: const EdgeInsets.only(top: 58.0, left: 12),
-      color: Colors.white,
+      // color: Colors.white,
       // color: Colors.red,
       width: Get.width - 20,
       height: 48.0,
       child: InkWell(
         onTap: () {
           showSearch(
-            context: context,
+            context: ctx,
             delegate: SearchBarDelegate(
               doSearch: ((query) {
                 return ContactRepo().search(kwd: query);
@@ -215,7 +220,7 @@ class SendToPage extends StatelessWidget {
                   );
                   // 保存会话
                   obj = await (ConversationRepo()).save(obj);
-                  sendToDialog(obj, 3);
+                  sendToDialog(Get.context!, obj, 3);
                 }
               },
             ),
@@ -223,15 +228,15 @@ class SendToPage extends StatelessWidget {
         },
         child: n.Row([
           FloatingActionButton(
-            // mini: true,
-            backgroundColor: Colors.white,
+            mini: true,
+            // backgroundColor: Colors.white,
             shape: const CircleBorder(),
             elevation: 0,
             tooltip: 'search'.tr,
             onPressed: () {},
-            child: const Icon(
+            child: Icon(
               Icons.search,
-              color: AppColors.thirdElementText,
+              color: Theme.of(ctx).colorScheme.onPrimary,
               size: 20,
             ),
           ),
@@ -249,6 +254,9 @@ class SendToPage extends StatelessWidget {
     List towD = listTo2D(items, 5);
     Get.defaultDialog(
       title: 'send_separately_to'.tr,
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
       radius: 6,
       cancel: TextButton(
         onPressed: () {
@@ -277,6 +285,9 @@ class SendToPage extends StatelessWidget {
         child: Text(
           'button_send'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(Get.context!).colorScheme.onPrimary,
+          ),
         ),
       ),
       content: SizedBox(
@@ -302,7 +313,7 @@ class SendToPage extends StatelessWidget {
               ),
             ),
           ),
-          const Divider(),
+          const HorizontalLine(height: 1.0),
           Expanded(
             child: messageMsgWidget(msg),
           ),
@@ -311,9 +322,12 @@ class SendToPage extends StatelessWidget {
     );
   }
 
-  void sendToDialog(ConversationModel model, int times) {
+  void sendToDialog(BuildContext ctx, ConversationModel model, int times) {
     Get.defaultDialog(
       title: 'send_to'.tr,
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
       radius: 6,
       cancel: TextButton(
         onPressed: () {
@@ -322,6 +336,9 @@ class SendToPage extends StatelessWidget {
         child: Text(
           'button_cancel'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(ctx).colorScheme.onPrimary,
+          ),
         ),
       ),
       confirm: TextButton(
@@ -345,6 +362,9 @@ class SendToPage extends StatelessWidget {
         child: Text(
           'button_send'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(ctx).colorScheme.onPrimary,
+          ),
         ),
       ),
       content: SizedBox(
@@ -380,7 +400,7 @@ class SendToPage extends StatelessWidget {
     );
   }
 
-  Widget _buildListItem(ConversationModel model) {
+  Widget _buildListItem(BuildContext context, ConversationModel model) {
     // String susTag = model.getSuspensionTag();
     return n.Column([
       // Offstage(
@@ -402,7 +422,7 @@ class SendToPage extends StatelessWidget {
               }
               // setState(() {});
             } else {
-              sendToDialog(model, 2);
+              sendToDialog(context, model, 2);
             }
           },
           child: n.Row([
@@ -427,11 +447,12 @@ class SendToPage extends StatelessWidget {
                 alignment: Alignment.centerLeft,
                 padding: const EdgeInsets.only(right: 30),
                 height: _itemHeight.toDouble(),
-                decoration: const BoxDecoration(
+                decoration: BoxDecoration(
                   border: Border(
                     top: BorderSide(
-                      color: AppColors.LineColor,
-                      width: 0.2,
+                      width: Get.isDarkMode ? 0.5 : 1.0,
+                      color:
+                          Theme.of(Get.context!).colorScheme.primaryContainer,
                     ),
                   ),
                 ),
diff --git a/lib/page/chat/widget/chat_input.dart b/lib/page/chat/widget/chat_input.dart
index b2d6dd7..e8633d4 100644
--- a/lib/page/chat/widget/chat_input.dart
+++ b/lib/page/chat/widget/chat_input.dart
@@ -15,7 +15,7 @@ import 'package:flutter_chat_ui/src/widgets/state/inherited_chat_theme.dart'
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/emoji_picker_view.dart';
 import 'package:imboy/component/ui/image_button.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/store/model/message_model.dart';
 import 'package:niku/namespace.dart' as n;
@@ -308,17 +308,19 @@ class _ChatInputState extends State<ChatInput> with TickerProviderStateMixin {
               // tabIndicatorAnimDuration: kTabScrollDuration,
               // categoryIcons: const CategoryIcons(),
               buttonMode: ButtonMode.MATERIAL,
-              backgroundColor: Colors.white,
+              backgroundColor: Theme.of(context).colorScheme.background,
             ),
             swapCategoryAndBottomBar: true,
-            skinToneConfig: const SkinToneConfig(),
+            skinToneConfig: SkinToneConfig(
+              indicatorColor: Theme.of(context).colorScheme.background,
+            ),
             categoryViewConfig: CategoryViewConfig(
               tabBarHeight: 48,
-              backgroundColor: Colors.white,
-              dividerColor: Colors.white,
-              indicatorColor: AppColors.primaryElement,
-              iconColorSelected: Colors.black,
-              iconColor: AppColors.tabBarElement,
+              backgroundColor: Theme.of(context).colorScheme.background,
+              // dividerColor: Colors.white,
+              // indicatorColor: AppColors.primaryElement,
+              iconColorSelected: Theme.of(context).colorScheme.onPrimary,
+              // iconColor: AppColors.tabBarElement,
               customCategoryView: (
                 config,
                 state,
@@ -344,13 +346,23 @@ class _ChatInputState extends State<ChatInput> with TickerProviderStateMixin {
                 flagIcon: Icons.flag_outlined,
               ),
             ),
-            bottomActionBarConfig: const BottomActionBarConfig(
-              backgroundColor: Colors.white,
-              buttonColor: Colors.white,
-              buttonIconColor: AppColors.ItemOnColor,
+            bottomActionBarConfig: BottomActionBarConfig(
+              enabled: true,
+              // showSearchViewButton: false,
+              backgroundColor: Theme.of(context).colorScheme.background,
+              buttonColor: Theme.of(context).colorScheme.background,
+              buttonIconColor: Theme.of(context).colorScheme.onPrimary,
+              customBottomActionBar: (
+                config,
+                state,
+                showEmojiView,
+              ) {
+                return AppBottomActionBar(config, state, showEmojiView);
+              },
             ),
             searchViewConfig: SearchViewConfig(
-              backgroundColor: Colors.white,
+              backgroundColor: Theme.of(context).colorScheme.background,
+              buttonIconColor: Theme.of(context).colorScheme.onPrimary,
               customSearchView: (
                 config,
                 state,
@@ -378,11 +390,11 @@ class _ChatInputState extends State<ChatInput> with TickerProviderStateMixin {
       cursorColor: InheritedChatTheme.of(ctx).theme.inputTextCursorColor,
       decoration: InheritedChatTheme.of(ctx).theme.inputTextDecoration.copyWith(
             hintStyle: InheritedChatTheme.of(ctx).theme.inputTextStyle.copyWith(
-                  color: InheritedChatTheme.of(ctx)
-                      .theme
-                      .inputTextColor
-                      .withOpacity(0.5),
+                  color: InheritedChatTheme.of(ctx).theme.inputTextColor,
+                  // color: Colors.red,
                 ),
+            // fillColor: Colors.red,
+            // fillColor: InheritedChatTheme.of(ctx).theme.fillColor,
             hintText: '',
           ),
       focusNode: _inputFocusNode,
@@ -401,6 +413,8 @@ class _ChatInputState extends State<ChatInput> with TickerProviderStateMixin {
       },
       style: InheritedChatTheme.of(ctx).theme.inputTextStyle.copyWith(
           color: InheritedChatTheme.of(ctx).theme.inputTextColor,
+          // color: Colors.red,
+          // backgroundColor: Colors.red,
           height: 1.8,
           fontSize: fontSize),
       // 点击键盘的动作按钮时的回调，参数为当前输入框中的值
diff --git a/lib/page/chat/widget/extra_item.dart b/lib/page/chat/widget/extra_item.dart
index bdd00a2..5584095 100644
--- a/lib/page/chat/widget/extra_item.dart
+++ b/lib/page/chat/widget/extra_item.dart
@@ -7,7 +7,7 @@ import 'package:get/get.dart';
 import 'package:imboy/component/location/amap_helper.dart';
 import 'package:imboy/component/location/widget.dart';
 import 'package:imboy/component/webrtc/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -42,19 +42,19 @@ class ExtraItem extends StatelessWidget {
             height: height ?? 56,
             // margin: EdgeInsets.symmetric(horizontal: 10),
             child: Material(
-              color: AppColors.ChatInputBackgroundColor,
+              // color: AppColors.ChatInputBackgroundColor,
               // INK可以实现装饰容器
               child: Ink(
                 // 用ink圆角矩形
                 decoration: BoxDecoration(
                   // 背景
-                  color: AppColors.ChatInputFillGgColor,
+                  color: Theme.of(context).colorScheme.onPrimaryContainer,
                   // 设置四周圆角 角度
                   borderRadius: const BorderRadius.all(Radius.circular(16.0)),
                   // 设置四周边框
                   border: Border.all(
                     width: 1,
-                    color: AppColors.ChatInputBackgroundColor,
+                    color: Theme.of(context).colorScheme.onPrimaryContainer,
                   ),
                 ),
                 child: image is ImageProvider
diff --git a/lib/page/chat/widget/quote_tips.dart b/lib/page/chat/widget/quote_tips.dart
index d090b02..0a8748c 100644
--- a/lib/page/chat/widget/quote_tips.dart
+++ b/lib/page/chat/widget/quote_tips.dart
@@ -5,7 +5,7 @@ import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:flutter_chat_ui/flutter_chat_ui.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/image_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 // ignore: must_be_immutable
@@ -40,7 +40,7 @@ class QuoteTipsWidget extends StatelessWidget {
     if (message is types.TextMessage) {
       body = Text(
         (message as types.TextMessage).text,
-        style: const TextStyle(color: AppColors.thirdElementText),
+        style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
         maxLines: 8,
         overflow: TextOverflow.ellipsis,
       );
@@ -55,14 +55,14 @@ class QuoteTipsWidget extends StatelessWidget {
         n.Row([
           Text(
             "[${'file'.tr}] (${formatBytes(fileMsg.size.truncate())})",
-            style: const TextStyle(color: AppColors.thirdElementText),
+            style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
           ),
         ]),
         n.Row([
           Expanded(
             child: Text(
               fileMsg.name,
-              style: const TextStyle(color: AppColors.thirdElementText),
+              style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
             ),
           ),
         ])
@@ -76,24 +76,24 @@ class QuoteTipsWidget extends StatelessWidget {
       String txt = message?.metadata?['quote_text'] ?? '';
       body = Text(
         "[${'quote'.tr}] $txt",
-        style: const TextStyle(color: AppColors.thirdElementText),
+        style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
       );
     } else if (customType == 'audio') {
       double durationMS = message?.metadata?["duration_ms"] / 1000;
       body = Text(
         "[${'voice_message'.tr}] $durationMS''",
-        style: const TextStyle(color: AppColors.thirdElementText),
+        style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
       );
     } else if (customType == 'location') {
       body = Text(
         "[${'location'.tr}] ${message?.metadata?['title'] ?? ''}",
-        style: const TextStyle(color: AppColors.thirdElementText),
+        style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
       );
     } else if (customType == 'video') {
       body = n.Row([
         Text(
           "[${'video'.tr}] ",
-          style: const TextStyle(color: AppColors.thirdElementText),
+          style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
         ),
         ImageView(
           img: message?.metadata?['thumb']['uri'],
@@ -116,7 +116,7 @@ class QuoteTipsWidget extends StatelessWidget {
                 width: 4,
                 child: VerticalDivider(
                   thickness: 2, // 分割线的厚度
-                  color: AppColors.ItemOnColor,
+                  // color: AppColors.ItemOnColor,
                 ),
               ),
             ),
@@ -127,7 +127,9 @@ class QuoteTipsWidget extends StatelessWidget {
                       child: Text(
                     title,
                     style: const TextStyle(
-                        color: AppColors.primaryText, fontSize: 16),
+                      // color: AppColors.primaryText,
+                      fontSize: 16,
+                    ),
                   ))
                 ]),
                 n.Row([
diff --git a/lib/page/chat/widget/select_friend.dart b/lib/page/chat/widget/select_friend.dart
index 36ab34c..ecbb732 100644
--- a/lib/page/chat/widget/select_friend.dart
+++ b/lib/page/chat/widget/select_friend.dart
@@ -9,7 +9,7 @@ import 'package:niku/namespace.dart' as n;
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/contact/contact/contact_logic.dart';
 import 'package:imboy/service/assets.dart';
 import 'package:imboy/store/model/contact_model.dart';
@@ -102,6 +102,9 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
   void sendToDialog(ContactModel model) {
     Get.defaultDialog(
       title: 'send_to'.tr,
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
       radius: 6,
       cancel: TextButton(
         onPressed: () {
@@ -110,6 +113,9 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
         child: Text(
           'button_cancel'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(context).colorScheme.onPrimary,
+          ),
         ),
       ),
       confirm: TextButton(
@@ -121,6 +127,7 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
         child: Text(
           'button_send'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(color: Theme.of(context).colorScheme.onPrimary),
         ),
       ),
       content: SizedBox(
@@ -174,7 +181,7 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
               widget.peerIsReceiver
                   ? "[${'personal_card'.tr}]${widget.peer['nickname']}"
                   : "[${'personal_card'.tr}]${model.nickname}",
-              style: const TextStyle(color: AppColors.TipColor),
+              style: TextStyle(color: Theme.of(context).colorScheme.tertiary),
             ),
           ),
         ])
@@ -217,8 +224,7 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
                 decoration: const BoxDecoration(
                   border: Border(
                     top: BorderSide(
-                      color: AppColors.LineColor,
-                      width: 0.2,
+                      width: 0.5,
                     ),
                   ),
                 ),
@@ -262,7 +268,6 @@ class _SelectFriendPageState extends State<SelectFriendPage> {
         //   ),
         // ],
       ),
-      backgroundColor: Colors.white,
       body: Obx(
         () => n.Stack([
           RefreshIndicator(
diff --git a/lib/page/contact/add_friend/add_friend_view.dart b/lib/page/contact/add_friend/add_friend_view.dart
index 30412db..bb7a362 100644
--- a/lib/page/contact/add_friend/add_friend_view.dart
+++ b/lib/page/contact/add_friend/add_friend_view.dart
@@ -1,17 +1,16 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
-
-// import 'package:imboy/component/ui/search_bar.dart';
 import 'package:imboy/page/contact/people_nearby/people_nearby_view.dart';
 import 'package:imboy/page/contact/recently_registered_user/recently_registered_user_view.dart';
 import 'package:imboy/page/scanner/scanner_view.dart';
 import 'package:imboy/page/uqrcode/uqrcode_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
-import 'package:niku/namespace.dart' as n;
 
 import '../new_friend/new_friend_logic.dart';
 import 'add_friend_logic.dart';
@@ -26,16 +25,16 @@ class AddFriendPage extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
         title: 'add_friend'.tr,
-        // backgroundColor: AppColors.AppBarColor,
+        automaticallyImplyLeading: true,
       ),
       body: SingleChildScrollView(
         child: Container(
             width: Get.width,
             height: Get.height,
-            color: AppColors.AppBarColor,
+            color: Theme.of(context).colorScheme.background,
             child: n.Column(
               [
                 n.Padding(
@@ -83,7 +82,7 @@ class AddFriendPage extends StatelessWidget {
                 ),
                 const Space(),
                 Container(
-                  color: AppColors.primaryBackground,
+                  color: Theme.of(context).colorScheme.background,
                   child: n.Column([
                     n.ListTile(
                       leading: const Icon(
@@ -98,15 +97,12 @@ class AddFriendPage extends StatelessWidget {
                       subtitle: Text(
                         'nearby_people_tips'.tr,
                         style: const TextStyle(
-                          color: AppColors.TipColor,
+                          // color: AppColors.TipColor,
                           fontSize: 12,
                         ),
                       ),
                       dense: true,
-                      trailing: Icon(
-                        Icons.navigate_next,
-                        color: AppColors.MainTextColor.withOpacity(0.5),
-                      ),
+                      trailing: navigateNextIcon,
                       onTap: () {
                         Get.to(
                           () => PeopleNearbyPage(),
@@ -132,14 +128,11 @@ class AddFriendPage extends StatelessWidget {
                       subtitle: Text(
                         'enter_same_group'.tr,
                         style: const TextStyle(
-                          color: AppColors.TipColor,
+                          // color: AppColors.TipColor,
                           fontSize: 12,
                         ),
                       ),
-                      trailing: Icon(
-                        Icons.navigate_next,
-                        color: AppColors.MainTextColor.withOpacity(0.5),
-                      ),
+                      trailing: navigateNextIcon,
                       onTap: () {
                         // Get.to(
                         //   () => PeopleNearbyPage(),
@@ -165,14 +158,11 @@ class AddFriendPage extends StatelessWidget {
                       subtitle: Text(
                         'scan_qr_code_business_card'.tr,
                         style: const TextStyle(
-                          color: AppColors.TipColor,
+                          // color: AppColors.TipColor,
                           fontSize: 12,
                         ),
                       ),
-                      trailing: Icon(
-                        Icons.navigate_next,
-                        color: AppColors.MainTextColor.withOpacity(0.5),
-                      ),
+                      trailing: navigateNextIcon,
                       onTap: () {
                         Get.to(
                           () => const ScannerPage(),
@@ -199,14 +189,11 @@ class AddFriendPage extends StatelessWidget {
                         // 最近新注册的并且允许被搜索到的朋友
                         'allowed_be_searched'.tr,
                         style: const TextStyle(
-                          color: AppColors.TipColor,
+                          // color: AppColors.TipColor,
                           fontSize: 12,
                         ),
                       ),
-                      trailing: Icon(
-                        Icons.navigate_next,
-                        color: AppColors.MainTextColor.withOpacity(0.5),
-                      ),
+                      trailing: navigateNextIcon,
                       onTap: () {
                         Get.to(
                           () => RecentlyRegisteredUserPage(),
diff --git a/lib/page/contact/apply_friend/apply_friend_logic.dart b/lib/page/contact/apply_friend/apply_friend_logic.dart
index d155a3e..4f4dd67 100644
--- a/lib/page/contact/apply_friend/apply_friend_logic.dart
+++ b/lib/page/contact/apply_friend/apply_friend_logic.dart
@@ -3,9 +3,11 @@ import 'dart:convert';
 import 'package:dio/dio.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
+
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
+
 import 'package:imboy/config/const.dart';
 import 'package:imboy/config/enum.dart';
 import 'package:imboy/store/repository/new_friend_repo_sqlite.dart';
diff --git a/lib/page/contact/apply_friend/apply_friend_view.dart b/lib/page/contact/apply_friend/apply_friend_view.dart
index 636ebc4..586ae40 100644
--- a/lib/page/contact/apply_friend/apply_friend_view.dart
+++ b/lib/page/contact/apply_friend/apply_friend_view.dart
@@ -4,7 +4,7 @@ import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/icon_text.dart';
 import 'package:imboy/component/ui/radio_list_title.dart';
 import 'package:imboy/component/ui/title_text_field.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
 import 'package:niku/namespace.dart' as n;
@@ -38,18 +38,18 @@ class ApplyFriendPage extends StatelessWidget {
     _msgController.text = "${'i_am'.tr} ${UserRepoLocal.to.current.nickname}";
     _remarkController.text = remark;
 
-    Widget secondary = const Text(
+    Widget secondary = Text(
       "√",
       style: TextStyle(
         fontSize: 20,
-        color: AppColors.primaryElement,
+        color: Theme.of(context).colorScheme.primary,
       ),
     );
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
         title: 'apply_add_friend'.tr,
-        backgroundColor: Colors.white,
+        automaticallyImplyLeading: true,
       ),
       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
       floatingActionButton: Padding(
@@ -92,10 +92,10 @@ class ApplyFriendPage extends StatelessWidget {
             },
             style: ButtonStyle(
               backgroundColor: MaterialStateProperty.all<Color>(
-                AppColors.primaryElement,
+                Theme.of(context).colorScheme.background,
               ),
               foregroundColor: MaterialStateProperty.all<Color>(
-                Colors.white,
+                Theme.of(context).colorScheme.onBackground,
               ),
               minimumSize: MaterialStateProperty.all(const Size(60, 40)),
               visualDensity: VisualDensity.compact,
@@ -113,7 +113,7 @@ class ApplyFriendPage extends StatelessWidget {
         child: Container(
           width: Get.width,
           height: Get.height + 200,
-          color: AppColors.BgColor,
+          color: Theme.of(context).colorScheme.background,
           child: n.Padding(
             left: 30,
             top: 10,
@@ -187,10 +187,14 @@ class ApplyFriendPage extends StatelessWidget {
                           secondary:
                               logic.role.value == "all" ? secondary : null,
                           controlAffinity: ListTileControlAffinity.leading,
-                          activeColor: AppColors.primaryElement,
+                          activeColor: Theme.of(context).colorScheme.onPrimary,
                           groupValue: logic.role.value,
-                          contentPadding:
-                              const EdgeInsets.fromLTRB(10, 0, 10, 0),
+                          contentPadding: const EdgeInsets.fromLTRB(
+                            10,
+                            0,
+                            10,
+                            0,
+                          ),
                           onChanged: (val) {
                             logic.setRole(val.toString());
                             logic.visibilityLook = true.obs;
@@ -207,7 +211,7 @@ class ApplyFriendPage extends StatelessWidget {
                               ? secondary
                               : null,
                           controlAffinity: ListTileControlAffinity.leading,
-                          activeColor: AppColors.primaryElement,
+                          activeColor: Theme.of(context).colorScheme.primary,
                           groupValue: logic.role.value,
                           contentPadding:
                               const EdgeInsets.fromLTRB(10, 0, 10, 0),
@@ -233,39 +237,39 @@ class ApplyFriendPage extends StatelessWidget {
                         top: 10,
                         bottom: 50,
                       ),
-                      child: n.Column(
-                        [
-                          Text('moment_status'.tr),
-                          Card(
-                            color: const Color.fromARGB(255, 247, 247, 247),
-                            shape: RoundedRectangleBorder(
-                              borderRadius: BorderRadiusDirectional.circular(5),
-                            ),
-                            clipBehavior: Clip.antiAlias,
-                            child: n.Column([
-                              SwitchListTile(
-                                title: Text('not_let_him_see'.tr),
-                                value: logic.donotlethimlook.isTrue,
-                                activeColor: AppColors.primaryElement,
-                                onChanged: (val) {
-                                  logic.donotlethimlook.value = val;
-                                  logic.update([logic.donotlethimlook]);
-                                },
-                              ),
-                              SwitchListTile(
-                                title: Text('not_see_him'.tr),
-                                value: logic.donotlookhim.isTrue,
-                                activeColor: AppColors.primaryElement,
-                                onChanged: (val) {
-                                  logic.donotlookhim.value = val;
-                                  logic.update([logic.donotlookhim]);
-                                },
-                              ),
-                            ]),
+                      child: n.Column([
+                        Text('moment_status'.tr),
+                        Card(
+                          color: const Color.fromARGB(255, 247, 247, 247),
+                          shape: RoundedRectangleBorder(
+                            borderRadius: BorderRadiusDirectional.circular(5),
                           ),
-                        ],
-                        crossAxisAlignment: CrossAxisAlignment.start,
-                      ),
+                          clipBehavior: Clip.antiAlias,
+                          child: n.Column([
+                            SwitchListTile(
+                              title: Text('not_let_him_see'.tr),
+                              value: logic.donotlethimlook.isTrue,
+                              activeColor:
+                                  Theme.of(context).colorScheme.primary,
+                              onChanged: (val) {
+                                logic.donotlethimlook.value = val;
+                                logic.update([logic.donotlethimlook]);
+                              },
+                            ),
+                            SwitchListTile(
+                              title: Text('not_see_him'.tr),
+                              value: logic.donotlookhim.isTrue,
+                              activeColor:
+                                  Theme.of(context).colorScheme.primary,
+                              onChanged: (val) {
+                                logic.donotlookhim.value = val;
+                                logic.update([logic.donotlookhim]);
+                              },
+                            ),
+                          ]),
+                        ),
+                      ])
+                        ..crossAxisAlignment = CrossAxisAlignment.start,
                     ),
                   ),
                 ])
diff --git a/lib/page/contact/confirm_new_friend/confirm_new_friend_logic.dart b/lib/page/contact/confirm_new_friend/confirm_new_friend_logic.dart
index 721d46a..0420d5a 100644
--- a/lib/page/contact/confirm_new_friend/confirm_new_friend_logic.dart
+++ b/lib/page/contact/confirm_new_friend/confirm_new_friend_logic.dart
@@ -3,9 +3,11 @@ import 'dart:convert';
 import 'package:dio/dio.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/bottom_navigation/bottom_navigation_logic.dart';
 
 import '../../contact/contact/contact_logic.dart';
diff --git a/lib/page/contact/confirm_new_friend/confirm_new_friend_view.dart b/lib/page/contact/confirm_new_friend/confirm_new_friend_view.dart
index 74264c7..e893fbc 100644
--- a/lib/page/contact/confirm_new_friend/confirm_new_friend_view.dart
+++ b/lib/page/contact/confirm_new_friend/confirm_new_friend_view.dart
@@ -6,7 +6,7 @@ import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/icon_text.dart';
 import 'package:imboy/component/ui/radio_list_title.dart';
 import 'package:imboy/component/ui/title_text_field.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
 import 'package:niku/namespace.dart' as n;
@@ -38,18 +38,18 @@ class ConfirmNewFriendPage extends StatelessWidget {
   Widget build(BuildContext context) {
     _remarkController.text = nickname;
 
-    Widget secondary = const Text(
+    Widget secondary = Text(
       "√",
       style: TextStyle(
         fontSize: 20,
-        color: AppColors.primaryElement,
+        color: Theme.of(context).colorScheme.primary,
       ),
     );
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
         title: 'accept_friend_request'.tr,
-        backgroundColor: Colors.white,
+        automaticallyImplyLeading: true,
       ),
       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
       floatingActionButton: Padding(
@@ -77,10 +77,10 @@ class ConfirmNewFriendPage extends StatelessWidget {
             },
             style: ButtonStyle(
               backgroundColor: MaterialStateProperty.all<Color>(
-                AppColors.primaryElement,
+                Theme.of(context).colorScheme.background,
               ),
               foregroundColor: MaterialStateProperty.all<Color>(
-                Colors.white,
+                Theme.of(context).colorScheme.onBackground,
               ),
               minimumSize: MaterialStateProperty.all(const Size(40, 40)),
               visualDensity: VisualDensity.compact,
@@ -101,7 +101,7 @@ class ConfirmNewFriendPage extends StatelessWidget {
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.BgColor,
+          color: Theme.of(context).colorScheme.background,
           child: Padding(
             padding: const EdgeInsets.only(
               left: 30,
@@ -121,7 +121,7 @@ class ConfirmNewFriendPage extends StatelessWidget {
                     padding: const EdgeInsets.only(top: 0, bottom: 20),
                     child: Text(
                       '对方发来的验证消息为："$msg"',
-                      style: const TextStyle(color: AppColors.LabelTextColor),
+                      // style: const TextStyle(color: AppColors.LabelTextColor),
                     ),
                   ),
                   Obx(() => IconTextView(
@@ -172,7 +172,7 @@ class ConfirmNewFriendPage extends StatelessWidget {
                         selected: false,
                         secondary: logic.role.value == "all" ? secondary : null,
                         controlAffinity: ListTileControlAffinity.leading,
-                        activeColor: AppColors.primaryElement,
+                        activeColor: Theme.of(context).colorScheme.primary,
                         groupValue: logic.role.value,
                         contentPadding: const EdgeInsets.fromLTRB(10, 0, 10, 0),
                         onChanged: (val) {
@@ -190,7 +190,7 @@ class ConfirmNewFriendPage extends StatelessWidget {
                         secondary:
                             logic.role.value == "just_chat" ? secondary : null,
                         controlAffinity: ListTileControlAffinity.leading,
-                        activeColor: AppColors.primaryElement,
+                        activeColor: Theme.of(context).colorScheme.primary,
                         groupValue: logic.role.value,
                         contentPadding: const EdgeInsets.fromLTRB(10, 0, 10, 0),
                         onChanged: (val) {
@@ -225,7 +225,8 @@ class ConfirmNewFriendPage extends StatelessWidget {
                               SwitchListTile(
                                 title: Text('not_let_him_see'.tr),
                                 value: logic.donotlethimlook.isTrue,
-                                activeColor: AppColors.primaryElement,
+                                activeColor:
+                                    Theme.of(context).colorScheme.primary,
                                 onChanged: (val) {
                                   logic.donotlethimlook.value = val;
                                   logic.update([logic.donotlethimlook]);
@@ -234,7 +235,8 @@ class ConfirmNewFriendPage extends StatelessWidget {
                               SwitchListTile(
                                 title: Text('not_see_him'.tr),
                                 value: logic.donotlookhim.isTrue,
-                                activeColor: AppColors.primaryElement,
+                                activeColor:
+                                    Theme.of(context).colorScheme.primary,
                                 onChanged: (val) {
                                   logic.donotlookhim.value = val;
                                   logic.update([logic.donotlookhim]);
diff --git a/lib/page/contact/contact/contact_logic.dart b/lib/page/contact/contact/contact_logic.dart
index a7282b2..5d7cb1e 100644
--- a/lib/page/contact/contact/contact_logic.dart
+++ b/lib/page/contact/contact/contact_logic.dart
@@ -4,7 +4,7 @@ import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/avatar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/bottom_navigation/bottom_navigation_logic.dart';
 import 'package:imboy/page/chat/chat/chat_view.dart';
 import 'package:imboy/page/contact/new_friend/new_friend_view.dart';
@@ -263,7 +263,6 @@ class ContactLogic extends GetxController {
     // debugPrint("getChatItem ${model.toJson().toString()}");
     return Container(
       padding: const EdgeInsets.only(top: 10, left: 10.0, bottom: 6),
-      color: Colors.white,
       child: n.Row([
         n.Padding(
           right: 2,
@@ -294,9 +293,12 @@ class ContactLogic extends GetxController {
             bottom: 10.0,
           ),
           width: Get.width - 78,
-          decoration: const BoxDecoration(
+          decoration: BoxDecoration(
             border: Border(
-              bottom: BorderSide(color: AppColors.LineColor, width: 0.25),
+              bottom: BorderSide(
+                color: Theme.of(context).colorScheme.onPrimaryContainer,
+                width: 0.25,
+              ),
             ),
           ),
           child: n.Row([
@@ -323,14 +325,14 @@ class ContactLogic extends GetxController {
       height: susHeight,
       width: MediaQuery.of(context).size.width,
       padding: const EdgeInsets.only(left: 10.0),
-      color: const Color(0xFFF3F4F5),
+      // color: const Color(0xFFF3F4F5),
       alignment: Alignment.centerLeft,
       child: Text(
         tag,
         softWrap: false,
         style: const TextStyle(
           fontSize: 14.0,
-          color: Color(0xFF666666),
+          // color: Color(0xFF666666),
         ),
       ),
     );
diff --git a/lib/page/contact/contact/contact_view.dart b/lib/page/contact/contact/contact_view.dart
index 338e1d3..241978c 100644
--- a/lib/page/contact/contact/contact_view.dart
+++ b/lib/page/contact/contact/contact_view.dart
@@ -92,7 +92,9 @@ class ContactPage extends StatelessWidget {
                         return Container();
                       }
                       return logic.getSusItem(
-                          context, model.getSuspensionTag());
+                        context,
+                        model.getSuspensionTag(),
+                      );
                     },
                     // indexBarData: const ['↑', ...kIndexBarData],
                     indexBarData: logic.contactList.isNotEmpty
diff --git a/lib/page/contact/contact_setting/contact_setting_view.dart b/lib/page/contact/contact_setting/contact_setting_view.dart
index 350a2b0..69934f1 100644
--- a/lib/page/contact/contact_setting/contact_setting_view.dart
+++ b/lib/page/contact/contact_setting/contact_setting_view.dart
@@ -7,10 +7,10 @@ import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/button.dart';
-import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/label_row.dart';
-import 'package:imboy/config/const.dart';
+import 'package:imboy/component/ui/line.dart';
+
 import 'package:imboy/page/bottom_navigation/bottom_navigation_view.dart';
 import 'package:imboy/page/chat/chat/chat_logic.dart';
 import 'package:imboy/page/chat/widget/select_friend.dart';
@@ -35,7 +35,7 @@ class ContactSettingPage extends StatelessWidget {
   final String peerSign;
   final String peerRegion;
   final String peerSource;
-  final String peerRemark;
+  String peerRemark;
   final String peerTag;
 
   ContactSettingPage({
@@ -64,8 +64,9 @@ class ContactSettingPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'profile_settings'.tr,
       ),
       body: SingleChildScrollView(
@@ -90,7 +91,11 @@ class ContactSettingPage extends StatelessWidget {
                 ),
                 transition: Transition.rightToLeft,
                 popGesture: true, // 右滑，返回上一页
-              );
+              )?.then((value) {
+                if (value != null) {
+                  peerRemark = value.toString();
+                }
+              });
             },
           ),
           // LabelRow(
@@ -103,7 +108,11 @@ class ContactSettingPage extends StatelessWidget {
           //     );
           //   },
           // ),
-          const Space(),
+          n.Padding(
+            left: 16,
+            right: 16,
+            child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+          ),
           LabelRow(
             label: 'recommend_to_friend'.tr,
             // isLine: false,
@@ -161,68 +170,84 @@ class ContactSettingPage extends StatelessWidget {
               }
             },
           ),
-          const Space(),
+
+          n.Padding(
+            left: 16,
+            right: 16,
+            child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+          ),
           Container(
-            color: Colors.white,
-            child: Container(
-              padding: const EdgeInsets.only(
-                left: 0,
-                top: 0.0,
-                bottom: 0.0,
-                right: 0.0,
-              ),
-              margin: const EdgeInsets.only(left: 15.0),
-              decoration: const BoxDecoration(
-                color: Colors.white,
-                border: Border(
-                  bottom: BorderSide(color: AppColors.LineColor, width: 0.2),
+            padding: const EdgeInsets.only(
+              left: 0,
+              top: 0.0,
+              bottom: 0.0,
+              right: 0.0,
+            ),
+            margin: const EdgeInsets.only(left: 16.0, right: 16),
+            decoration: BoxDecoration(
+              // color: Colors.white,
+              border: Border(
+                bottom: BorderSide(
+                  color: Theme.of(context).colorScheme.onPrimaryContainer,
+                  width: 0.5,
                 ),
               ),
-              child: Obx(() => SwitchListTile(
-                    title: Text('add_to_blacklist'.tr),
-                    // value: false,
-                    value: inDenylist.isTrue,
-                    contentPadding: const EdgeInsets.only(
-                      left: 0,
-                      top: 0.0,
-                      bottom: 0.0,
-                      right: 0.0,
-                    ),
-                    activeColor: AppColors.primaryElement,
-                    onChanged: (val) async {
-                      debugPrint("addDenylist val $val, $inDenylist");
-
-                      bool res;
-                      if (inDenylist.isTrue) {
-                        res = await DenylistLogic().removeDenylist(peerId);
-                      } else {
-                        DenylistModel model = DenylistModel(
-                          deniedUid: peerId,
-                          nickname: peerNickname,
-                          account: peerAccount,
-                          remark: peerRemark,
-                          sign: peerSign,
-                          source: peerSource,
-                          avatar: peerAvatar,
-                          region: peerRegion,
-                          gender: peerGender,
-                          createdAt: DateTimeHelper.utc(),
-                        );
-                        res = await DenylistLogic().addDenylist(model);
-                      }
-                      if (res) {
-                        inDenylist.value = val;
-                      }
-                    },
-                  )),
             ),
+            child: Obx(() => SwitchListTile(
+                  title: Text('add_to_blacklist'.tr),
+                  // value: false,
+                  value: inDenylist.isTrue,
+                  contentPadding: const EdgeInsets.only(
+                    left: 0,
+                    top: 0.0,
+                    bottom: 0.0,
+                    right: 0.0,
+                  ),
+                  activeColor: Colors.green,
+                  inactiveThumbColor: Theme.of(context).colorScheme.onPrimary,
+                  trackColor: MaterialStateProperty.all<Color>(
+                    Get.isDarkMode
+                        ? const Color.fromRGBO(100, 100, 100, 1.0)
+                        : const Color.fromRGBO(230, 230, 230, 1.0),
+                  ),
+                  // activeColor: Theme.of(context).colorScheme.onPrimary,
+                  onChanged: (val) async {
+                    debugPrint("addDenylist val $val, $inDenylist");
+
+                    bool res;
+                    if (inDenylist.isTrue) {
+                      res = await DenylistLogic().removeDenylist(peerId);
+                    } else {
+                      DenylistModel model = DenylistModel(
+                        deniedUid: peerId,
+                        nickname: peerNickname,
+                        account: peerAccount,
+                        remark: peerRemark,
+                        sign: peerSign,
+                        source: peerSource,
+                        avatar: peerAvatar,
+                        region: peerRegion,
+                        gender: peerGender,
+                        createdAt: DateTimeHelper.utc(),
+                      );
+                      res = await DenylistLogic().addDenylist(model);
+                    }
+                    if (res) {
+                      inDenylist.value = val;
+                    }
+                  },
+                )),
           ),
           // LabelRow(
           //   label: 'complaint'.tr,
           //   isLine: false,
           //   onPressed: () {},
           // ),
-          // const Space(),
+          n.Padding(
+            left: 16,
+            right: 16,
+            child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+          ),
           ButtonRow(
             margin: const EdgeInsets.only(top: 10.0),
             text: '删除',
@@ -230,6 +255,9 @@ class ContactSettingPage extends StatelessWidget {
             style: const TextStyle(color: Colors.red, fontSize: 16),
             onPressed: () {
               Get.bottomSheet(
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 SizedBox(
                   width: Get.width,
                   height: Get.height * 0.25,
@@ -244,7 +272,7 @@ class ContactSettingPage extends StatelessWidget {
                       child: Text(
                         'tip_delete_contact'.trArgs([peerRemark]),
                         style: const TextStyle(
-                          color: AppColors.MainTextColor,
+                          // color: AppColors.MainTextColor,
                           fontSize: 14.0,
                         ),
                         maxLines: 3,
@@ -281,7 +309,7 @@ class ContactSettingPage extends StatelessWidget {
                     Container(
                       width: Get.width,
                       height: 6,
-                      color: AppColors.AppBarColor,
+                      color: Theme.of(context).colorScheme.background,
                     ),
                     Center(
                       child: TextButton(
@@ -289,8 +317,8 @@ class ContactSettingPage extends StatelessWidget {
                         child: Text(
                           'button_cancel'.tr,
                           textAlign: TextAlign.center,
-                          style: const TextStyle(
-                            color: AppColors.ItemOnColor,
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
                             fontSize: 16.0,
                             fontWeight: FontWeight.normal,
                           ),
@@ -300,7 +328,6 @@ class ContactSettingPage extends StatelessWidget {
                   ]),
                 ),
                 // backgroundColor: Colors.black12,
-                backgroundColor: Colors.white,
                 //改变shape这里即可
                 shape: const RoundedRectangleBorder(
                   borderRadius: BorderRadius.only(
diff --git a/lib/page/contact/contact_setting_tag/contact_setting_tag_view.dart b/lib/page/contact/contact_setting_tag/contact_setting_tag_view.dart
index 70910c2..d561f96 100644
--- a/lib/page/contact/contact_setting_tag/contact_setting_tag_view.dart
+++ b/lib/page/contact/contact_setting_tag/contact_setting_tag_view.dart
@@ -2,7 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_view.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -19,7 +19,7 @@ class ContactSettingTagPage extends StatelessWidget {
   final String peerSign;
   final String peerRegion;
   final String peerSource;
-  final String peerRemark;
+  String peerRemark;
   Rx<String> peerTag;
 
   ContactSettingTagPage({
@@ -51,7 +51,8 @@ class ContactSettingTagPage extends StatelessWidget {
     }
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         titleWidget: n.Row([
           Expanded(
             child: Text(
@@ -74,19 +75,24 @@ class ContactSettingTagPage extends StatelessWidget {
                   bool res = await logic.changeRemark(peerId, trimmedText);
                   if (res) {
                     EasyLoading.showSuccess('tip_success'.tr);
+                    peerRemark = trimmedText;
                     Get.back(result: trimmedText);
                   }
                 }
               },
               // ignore: sort_child_properties_last
-              child: n.Padding(left:10, right:10, child:Text(
-                'button_accomplish'.tr,
-                textAlign: TextAlign.center,
-              )),
+              child: n.Padding(
+                  left: 10,
+                  right: 10,
+                  child: Text(
+                    'button_accomplish'.tr,
+                    textAlign: TextAlign.center,
+                  )),
               style: logic.valueChanged.isTrue
                   ? ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.primaryElement,
+                        // Theme.of(context).colorScheme.background,
+                        Colors.green,
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
                         Colors.white,
@@ -98,10 +104,10 @@ class ContactSettingTagPage extends StatelessWidget {
                     )
                   : ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.AppBarColor,
+                        Colors.green.withOpacity(0.6),
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.LineColor,
+                        Colors.white.withOpacity(0.6),
                       ),
                       minimumSize:
                           MaterialStateProperty.all(const Size(60, 40)),
@@ -118,10 +124,15 @@ class ContactSettingTagPage extends StatelessWidget {
         right: 12,
         child: n.Column([
           n.TextFormField(
-            labelText: 'remark'.tr,
+            label: Text(
+              'remark'.tr,
+              style: TextStyle(
+                color: Theme.of(context).colorScheme.onPrimary,
+              ),
+            ),
             autofocus: true,
             showCursor: true,
-            style: n.TextStyle(color: AppColors.ItemOnColor),
+            // style: n.TextStyle(color: Colors.red),
             focusNode: logic.remarkFocusNode,
             controller: logic.remarkTextController,
             keyboardType: TextInputType.text,
@@ -143,15 +154,24 @@ class ContactSettingTagPage extends StatelessWidget {
                 logic.valueOnChange(true);
               }
             },
-          )..usePrefixStyle((v) => v..color = Colors.white),
-
+          )
+          // ..usePrefixStyle(
+          //   (v) => v..color = Theme.of(context).colorScheme.background,
+          // )
+          ,
           const SizedBox(height: 20),
           //
           Obx(() => n.TextFormField(
-                labelText: 'tags'.tr,
+                // labelText: 'tags'.tr,
+                label: Text(
+                  'tags'.tr,
+                  style: TextStyle(
+                    color: Theme.of(context).colorScheme.onPrimary,
+                  ),
+                ),
                 controller: TextEditingController()
                   ..text = peerTag.isEmpty ? 'add_tag'.tr : peerTag.value,
-                style: n.TextStyle(color: AppColors.ItemOnColor),
+                // style: n.TextStyle(color: AppColors.ItemOnColor),
                 readOnly: true,
                 minLines: 1,
                 maxLines: 8,
diff --git a/lib/page/contact/new_friend/new_friend_view.dart b/lib/page/contact/new_friend/new_friend_view.dart
index 1586685..e615bb5 100644
--- a/lib/page/contact/new_friend/new_friend_view.dart
+++ b/lib/page/contact/new_friend/new_friend_view.dart
@@ -5,7 +5,7 @@ import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/enum.dart';
 import 'package:imboy/page/single/people_info.dart';
 import 'package:imboy/store/model/new_friend_model.dart';
@@ -38,8 +38,9 @@ class NewFriendPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'new_friend'.tr,
         rightDMActions: [
           TextButton(
@@ -52,6 +53,7 @@ class NewFriendPage extends StatelessWidget {
             },
             child: Text(
               'add_friend'.tr,
+              style: TextStyle(color: Theme.of(context).colorScheme.onPrimary),
             ),
           )
         ],
@@ -60,7 +62,7 @@ class NewFriendPage extends StatelessWidget {
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.ChatBg,
+          color: Theme.of(context).colorScheme.background,
           child: n.Column([
             n.Padding(
               left: 8,
@@ -168,9 +170,10 @@ class NewFriendPage extends StatelessWidget {
                               },
                               style: TextButton.styleFrom(
                                 padding: const EdgeInsets.only(right: 0),
-                                foregroundColor: AppColors.primaryElement,
+                                foregroundColor:
+                                    Theme.of(context).colorScheme.background,
                                 backgroundColor:
-                                    AppColors.ChatInputBackgroundColor,
+                                    Theme.of(context).colorScheme.onBackground,
                                 textStyle: const TextStyle(
                                   fontSize: 16,
                                   fontWeight: FontWeight.w600,
@@ -210,7 +213,6 @@ class NewFriendPage extends StatelessWidget {
                             ),
                             child: Container(
                               decoration: const BoxDecoration(
-                                color: Colors.white,
                                 border: Border(
                                   bottom: BorderSide(
                                     width: 0.2,
diff --git a/lib/page/contact/people_nearby/people_nearby_view.dart b/lib/page/contact/people_nearby/people_nearby_view.dart
index 200864c..68e6308 100644
--- a/lib/page/contact/people_nearby/people_nearby_view.dart
+++ b/lib/page/contact/people_nearby/people_nearby_view.dart
@@ -5,7 +5,8 @@ import 'package:flutter_slidable/flutter_slidable.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+import 'package:imboy/component/ui/line.dart';
+
 import 'package:imboy/page/single/people_info.dart';
 import 'package:imboy/store/model/people_model.dart';
 import 'package:niku/namespace.dart' as n;
@@ -34,164 +35,163 @@ class PeopleNearbyPage extends StatelessWidget {
     });
 
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(title: 'people_nearby'.tr),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
+        title: 'people_nearby'.tr,
+      ),
       body: SlidableAutoCloseBehavior(
-        child: n.Column(
-          [
-            n.Row([
-              InkWell(
-                onTap: () {
-                  rotateCompass();
-                  logic.peopleNearby();
-                },
-                child: const Icon(
-                  Icons.explore,
-                  color: Colors.lightBlue,
-                  size: 80,
-                )
-                    .animate(adapter: adapter)
-                    .rotate(duration: const Duration(milliseconds: 200)),
-              )
-            ], mainAxisAlignment: MainAxisAlignment.spaceEvenly),
-            n.Row([
-              Text(
-                'nearby_people_tips'.tr,
-                style: const TextStyle(
-                  color: AppColors.TipColor,
-                  fontSize: 15,
-                ),
+        child: n.Column([
+          n.Row([
+            InkWell(
+              onTap: () {
+                rotateCompass();
+                logic.peopleNearby();
+              },
+              child: const Icon(
+                Icons.explore,
+                color: Colors.lightBlue,
+                size: 80,
               )
-            ], mainAxisAlignment: MainAxisAlignment.spaceEvenly),
-            SizedBox(
-              width: Get.width,
-              height: 8,
-            ),
-            // 附近的人
-            Expanded(
-              child: Container(
-                margin: const EdgeInsets.only(left: 12, right: 12),
-                // padding: EdgeInsets.only(left: 10),
-                child: Card(
-                  child: n.Column([
-                    n.Row(
-                      [
-                        SizedBox(
-                          width: Get.width * 0.9,
-                          child: TextButton(
-                            onPressed: () {
-                              if (state.peopleNearbyVisible.isFalse) {
-                                // Your phone number will remain hidden.
-                                Get.defaultDialog(
-                                  title: 'display_profle'.tr,
-                                  // Show You Profile
-                                  content: Text('nearby_people_explain'.tr),
-                                  textCancel: "  ${'button_cancel'.tr}  ",
-                                  textConfirm: "  ${'button_confirm'.tr}  ",
-                                  confirmTextColor:
-                                      AppColors.primaryElementText,
-                                  onConfirm: () {
-                                    // 异步处理
-                                    logic.makeMyselfVisible();
-                                    Get.closeAllDialogs();
-                                    EasyLoading.showSuccess('tip_success'.tr);
-                                  },
-                                );
-                              } else {
-                                logic.makeMyselfUnvisible();
-                              }
-                            },
-                            style: ButtonStyle(
-                              overlayColor:
-                                  MaterialStateProperty.all(Colors.transparent),
-                              backgroundColor:
-                                  MaterialStateProperty.resolveWith((states) {
-                                return states.contains(MaterialState.pressed)
-                                    ? Colors.black12
-                                    : Colors.white;
-                              }),
-                              shape: MaterialStateProperty.all(
-                                RoundedRectangleBorder(
-                                  borderRadius: BorderRadius.circular(10),
-                                ),
-                              ),
+                  .animate(adapter: adapter)
+                  .rotate(duration: const Duration(milliseconds: 300)),
+            )
+          ], mainAxisAlignment: MainAxisAlignment.spaceEvenly),
+          n.Row([
+            Text(
+              'nearby_people_tips'.tr,
+              style: const TextStyle(
+                fontSize: 15,
+              ),
+            )
+          ], mainAxisAlignment: MainAxisAlignment.spaceEvenly),
+          SizedBox(
+            width: Get.width,
+            height: 8,
+          ),
+          // 附近的人
+          Expanded(
+            child: Container(
+              margin: const EdgeInsets.only(left: 12, right: 12),
+              child: Card(
+                color: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
+                child: n.Column([
+                  n.Row([
+                    Container(
+                      margin: const EdgeInsets.only(top: 2),
+                      width: Get.width * 0.9,
+                      child: TextButton(
+                        onPressed: () {
+                          if (state.peopleNearbyVisible.isFalse) {
+                            // Your phone number will remain hidden.
+                            Get.defaultDialog(
+                              title: 'display_profile'.tr,
+                              backgroundColor: Get.isDarkMode
+                                  ? const Color.fromRGBO(80, 80, 80, 1)
+                                  : const Color.fromRGBO(240, 240, 240, 1),
+                              // Show You Profile
+                              content: Text('nearby_people_explain'.tr),
+                              textCancel: "  ${'button_cancel'.tr}  ",
+                              textConfirm: "  ${'button_confirm'.tr}  ",
+                              onConfirm: () {
+                                // 异步处理
+                                logic.makeMyselfVisible();
+                                Get.closeAllDialogs();
+                                EasyLoading.showSuccess('tip_success'.tr);
+                              },
+                            );
+                          } else {
+                            logic.makeMyselfUnvisible();
+                          }
+                        },
+                        style: ButtonStyle(
+                          overlayColor:
+                              MaterialStateProperty.all(Colors.transparent),
+                          backgroundColor:
+                              MaterialStateProperty.resolveWith((states) {
+                            // return states.contains(MaterialState.pressed)
+                            //     ? Colors.black12
+                            //     : Colors.white;
+                            return Theme.of(context).colorScheme.background;
+                          }),
+                          shape: MaterialStateProperty.all(
+                            RoundedRectangleBorder(
+                              borderRadius: BorderRadius.circular(10),
                             ),
-                            child: n.Row([
-                              Obx(() => Icon(
-                                    state.peopleNearbyVisible.isFalse
-                                        ? Icons.location_on
-                                        : Icons.location_off,
-                                    size: 28.0,
-                                    color: Colors.lightBlue,
-                                  )),
-                              const SizedBox(
-                                width: 8,
-                                height: 32,
-                              ),
-                              Obx(() => Text(
-                                    state.peopleNearbyVisible.isFalse
-                                        ? 'make_yourself_visible'.tr
-                                        : 'make_yourself_ivisible'.tr,
-                                    // Stop Showing Me
-                                    style: const TextStyle(
-                                      fontSize: 14,
-                                      fontWeight: FontWeight.bold,
-                                      color: Colors.lightBlue,
-                                    ),
-                                  ))
-                            ], mainAxisAlignment: MainAxisAlignment.start),
                           ),
                         ),
-                      ],
-                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
-                    ),
-                    Expanded(
-                      child: n.Padding(
-                        left: 10,
-                        right: 10,
-                        child: Obx(() {
-                          return ListView.builder(
-                            itemCount: state.peopleList.length,
-                            itemBuilder: (BuildContext context, int index) {
-                              PeopleModel model = state.peopleList[index];
-                              return n.Column([
-                                const Divider(
-                                  height: 8.0,
-                                  indent: 0.0,
-                                  color: Colors.black26,
+                        child: n.Row([
+                          Obx(() => Icon(
+                                state.peopleNearbyVisible.isFalse
+                                    ? Icons.location_on
+                                    : Icons.location_off,
+                                size: 28.0,
+                                color: Colors.lightBlue,
+                              )),
+                          const SizedBox(
+                            width: 8,
+                            height: 32,
+                          ),
+                          Obx(() => Text(
+                                state.peopleNearbyVisible.isFalse
+                                    ? 'make_yourself_visible'.tr
+                                    : 'make_yourself_invisible'.tr,
+                                // Stop Showing Me
+                                style: const TextStyle(
+                                  fontSize: 14,
+                                  fontWeight: FontWeight.bold,
+                                  color: Colors.lightBlue,
                                 ),
-                                ListTile(
-                                  leading: Avatar(imgUri: model.avatar),
-                                  contentPadding:
-                                      const EdgeInsets.only(left: 0),
-                                  title: Text(model.nickname),
-                                  subtitle: Text(
-                                      '${model.distance.toStringAsFixed(3)} ${model.distanceUnit}'),
-                                  onTap: () {
-                                    Get.to(
-                                      () => PeopleInfoPage(
-                                        id: model.id,
-                                        scene: 'people_nearby',
-                                      ),
-                                      transition: Transition.rightToLeft,
-                                      popGesture: true, // 右滑，返回上一页
-                                    );
-                                  },
-                                )
-                              ]);
-                            },
-                          );
-                        }),
+                              ))
+                        ], mainAxisAlignment: MainAxisAlignment.start),
                       ),
                     ),
-                  ]),
-                ),
+                  ])
+                    ..mainAxisAlignment = MainAxisAlignment.spaceEvenly,
+                  Expanded(
+                    child: n.Padding(
+                      left: 10,
+                      right: 10,
+                      child: Obx(() {
+                        return ListView.builder(
+                          itemCount: state.peopleList.length,
+                          itemBuilder: (BuildContext context, int index) {
+                            PeopleModel model = state.peopleList[index];
+                            return n.Column([
+                              ListTile(
+                                leading: Avatar(imgUri: model.avatar),
+                                contentPadding: const EdgeInsets.only(left: 0),
+                                title: Text(model.nickname),
+                                subtitle: Text(
+                                    '${model.distance.toStringAsFixed(3)} ${model.distanceUnit}'),
+                                onTap: () {
+                                  Get.to(
+                                    () => PeopleInfoPage(
+                                      id: model.id,
+                                      scene: 'people_nearby',
+                                    ),
+                                    transition: Transition.rightToLeft,
+                                    popGesture: true, // 右滑，返回上一页
+                                  );
+                                },
+                              ),
+                              const HorizontalLine(height: 1.0),
+                            ]);
+                          },
+                        );
+                      }),
+                    ),
+                  ),
+                ]),
               ),
-            )
-            // 附近的群
-          ],
-          mainAxisSize: MainAxisSize.min,
-        )..useParent((v) => v..bg = AppColors.AppBarColor),
+            ),
+          )
+          // 附近的群
+        ])
+          ..mainAxisSize = MainAxisSize.min
+          ..useParent((v) => v..bg = Theme.of(context).colorScheme.background),
       ),
     );
   }
diff --git a/lib/page/contact/recently_registered_user/recently_registered_user_view.dart b/lib/page/contact/recently_registered_user/recently_registered_user_view.dart
index 014c8f2..0d61438 100644
--- a/lib/page/contact/recently_registered_user/recently_registered_user_view.dart
+++ b/lib/page/contact/recently_registered_user/recently_registered_user_view.dart
@@ -3,7 +3,7 @@ import 'package:flutter_slidable/flutter_slidable.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/single/people_info.dart';
 import 'package:imboy/store/model/people_model.dart';
 import 'package:niku/namespace.dart' as n;
@@ -55,8 +55,9 @@ class RecentlyRegisteredUserPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(title: 'newly_registered_people'.tr),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+          automaticallyImplyLeading: true, title: 'newly_registered_people'.tr),
       body: SlidableAutoCloseBehavior(
           child: n.Column([
         Expanded(
diff --git a/lib/page/conversation/conversation_view.dart b/lib/page/conversation/conversation_view.dart
index 3c79781..e28a7b8 100644
--- a/lib/page/conversation/conversation_view.dart
+++ b/lib/page/conversation/conversation_view.dart
@@ -89,14 +89,15 @@ class _ConversationPageState extends State<ConversationPage> {
         titleWidget: Obx(
           () => Text(
             'title_message'.tr + logic.connectDesc.value,
-            style: const TextStyle(
-              color: Colors.black,
+            style: TextStyle(
+              color: Theme.of(context).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.w600,
             ),
           ),
         ),
       ),
+      // backgroundColor: Theme.of(context).colorScheme.background,
       body: n.Column([
         Obx(() {
           return logic.connectDesc.isEmpty
@@ -184,7 +185,7 @@ class _ConversationPageState extends State<ConversationPage> {
                                   key: ValueKey("delete_$index"),
                                   flex: 2,
                                   backgroundColor: Colors.red,
-                                  // foregroundColor: Colors.white,
+                                  foregroundColor: Colors.white,
                                   onPressed: (_) async {
                                     await logic
                                         .removeConversation(conversationId);
diff --git a/lib/page/conversation/widget/conversation_item.dart b/lib/page/conversation/widget/conversation_item.dart
index e8f5732..3fb78b1 100644
--- a/lib/page/conversation/widget/conversation_item.dart
+++ b/lib/page/conversation/widget/conversation_item.dart
@@ -4,7 +4,7 @@ import 'package:get/get.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/conversation/conversation_logic.dart';
 import 'package:imboy/store/model/conversation_model.dart';
 import 'package:imboy/store/model/message_model.dart';
@@ -17,6 +17,7 @@ class ConversationItem extends StatelessWidget {
   // 会话头像点击事件
   final Function()? onTapAvatar;
   final ConversationLogic logic = Get.find<ConversationLogic>();
+
   ConversationItem({
     super.key,
     required this.model,
@@ -44,7 +45,6 @@ class ConversationItem extends StatelessWidget {
     // debugPrint("> on imgUri ${imgUri!}");
     return Container(
       padding: const EdgeInsets.only(left: 10.0, top: 2),
-      color: Colors.white,
       child: n.Row([
         Obx(
           () => badges.Badge(
@@ -57,7 +57,10 @@ class ConversationItem extends StatelessWidget {
             // animationType: badges.BadgeAnimationType.scale,
             badgeContent: Text(
               "$remindCounter",
-              style: const TextStyle(color: Colors.white, fontSize: 8),
+              style: const TextStyle(
+                color: Colors.white,
+                fontSize: 8,
+              ),
             ),
             // 会话头像
             child: Avatar(
@@ -77,48 +80,50 @@ class ConversationItem extends StatelessWidget {
           width: Get.width - 78,
           decoration: const BoxDecoration(
             border: Border(
-              bottom: BorderSide(color: AppColors.LineColor, width: 0.25),
+              bottom: BorderSide(
+                // color: AppColors.LineColor,
+                width: 0.25,
+              ),
             ),
           ),
           child: n.Row([
             const Space(width: 6),
             Expanded(
-              child: n.Column(
-                [
-                  n.Row([
+              child: n.Column([
+                n.Row([
+                  Expanded(
+                    child: Text(
+                      // 会话对象标题
+                      model.title,
+                      style: const TextStyle(
+                        fontSize: 18.0,
+                        fontWeight: FontWeight.normal,
+                      ),
+                      maxLines: 2,
+                      overflow: TextOverflow.ellipsis,
+                    ),
+                  ),
+                ]),
+                Padding(
+                  padding: const EdgeInsets.only(top: 4),
+                  child: n.Row([
+                    n.Column(icon),
+                    // 会话对象子标题
                     Expanded(
                       child: Text(
-                        // 会话对象标题
-                        model.title,
+                        model.content,
                         style: const TextStyle(
-                          fontSize: 18.0,
-                          fontWeight: FontWeight.normal,
+                          // color: AppColors.MainTextColor,
+                          fontSize: 14.0,
                         ),
-                        maxLines: 2,
+                        maxLines: 1,
                         overflow: TextOverflow.ellipsis,
                       ),
                     ),
                   ]),
-                  Padding(
-                    padding: const EdgeInsets.only(top: 4),
-                    child: n.Row([
-                      n.Column(icon),
-                      // 会话对象子标题
-                      Expanded(
-                        child: Text(
-                          model.content,
-                          style: const TextStyle(
-                            color: AppColors.MainTextColor,
-                            fontSize: 14.0,
-                          ),
-                          maxLines: 1,
-                          overflow: TextOverflow.ellipsis,
-                        ),
-                      ),
-                    ]),
-                  ),
-                ],
-              )..crossAxisAlignment = CrossAxisAlignment.start,
+                ),
+              ])
+                ..crossAxisAlignment = CrossAxisAlignment.start,
             ),
             // Space(width: mainSpace),
             n.Column([
@@ -129,7 +134,7 @@ class ConversationItem extends StatelessWidget {
                   maxLines: 1,
                   overflow: TextOverflow.ellipsis,
                   style: const TextStyle(
-                    color: AppColors.MainTextColor,
+                    // color: AppColors.MainTextColor,
                     fontSize: 14.0,
                   ),
                 ),
diff --git a/lib/page/conversation/widget/right_button_list.dart b/lib/page/conversation/widget/right_button_list.dart
index d35421c..b960714 100644
--- a/lib/page/conversation/widget/right_button_list.dart
+++ b/lib/page/conversation/widget/right_button_list.dart
@@ -17,11 +17,11 @@ class RightButton extends StatelessWidget {
       child: n.Padding(
           top: 10,
           bottom: 10,
-          child: const SizedBox(
+          child: SizedBox(
             width: 46.0,
             child: Icon(
               Icons.add_circle_outline_sharp,
-              color: Colors.black54,
+              color: Theme.of(context).colorScheme.onPrimary,
             ),
           )),
       onTap: () {
@@ -29,8 +29,8 @@ class RightButton extends StatelessWidget {
           context: context,
           bodyBuilder: (context) => const RightButtonList(),
           direction: PopoverDirection.left,
-          barrierColor: Colors.black54,
-          backgroundColor: Colors.black54,
+          barrierColor: Theme.of(context).colorScheme.onBackground,
+          backgroundColor: Theme.of(context).colorScheme.onBackground,
           // barrierDismissible: false,
           // shadow: const [BoxShadow(color: Colors.white, blurRadius: 5)],
           width: 132,
@@ -59,7 +59,7 @@ class RightButtonList extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Container(
-      color: Colors.black54,
+      color: Theme.of(context).colorScheme.onBackground,
       padding: EdgeInsets.symmetric(vertical: GetPlatform.isDesktop ? 24 : 8),
       child: n.ListView.children([
         InkWell(
diff --git a/lib/page/group/group_bill_board/group_bill_board_binding.dart b/lib/page/group/group_bill_board/group_bill_board_binding.dart
index d236565..0d4187c 100644
--- a/lib/page/group/group_bill_board/group_bill_board_binding.dart
+++ b/lib/page/group/group_bill_board/group_bill_board_binding.dart
@@ -4,7 +4,7 @@ import 'group_bill_board_logic.dart';
 
 class GroupBillBoardBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => GroupBillBoardLogic()),
       ];
 }
diff --git a/lib/page/group/group_bill_board/group_bill_board_view.dart b/lib/page/group/group_bill_board/group_bill_board_view.dart
index f7dbf44..19d77d5 100644
--- a/lib/page/group/group_bill_board/group_bill_board_view.dart
+++ b/lib/page/group/group_bill_board/group_bill_board_view.dart
@@ -70,7 +70,8 @@ class _GroupBillBoardPageState extends State<GroupBillBoardPage> {
     // );
 
     return Scaffold(
-      appBar: const PageAppBar(
+      appBar: const NavAppBar(
+        automaticallyImplyLeading: true,
         title: '群公告',
         // rightDMActions: <Widget>[rWidget],
       ),
diff --git a/lib/page/group/group_detail/group_detail_view.dart b/lib/page/group/group_detail/group_detail_view.dart
index a5fabc4..9496da6 100644
--- a/lib/page/group/group_detail/group_detail_view.dart
+++ b/lib/page/group/group_detail/group_detail_view.dart
@@ -4,12 +4,15 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/web_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/enum.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/group/group_bill_board/group_bill_board_view.dart';
@@ -18,7 +21,6 @@ import 'package:imboy/page/group/group_member_detail/group_member_detail_view.da
 import 'package:imboy/page/group/group_remark/group_remark_view.dart';
 import 'package:imboy/page/group/select_member/select_member_view.dart';
 import 'package:imboy/store/model/group_model.dart';
-import 'package:niku/namespace.dart' as n;
 
 import 'group_detail_logic.dart';
 import 'group_detail_state.dart';
@@ -166,7 +168,8 @@ class _GroupDetailPageState extends State<GroupDetailPage> {
 
     return Scaffold(
       backgroundColor: const Color(0xffEDEDED),
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: '聊天信息 (${dataGroup![0]['memberNum']})',
       ),
       body: ScrollConfiguration(
@@ -273,10 +276,13 @@ class _GroupDetailPageState extends State<GroupDetailPage> {
                 String tips = 'sure_to_leave_group'.tr;
                 Get.defaultDialog(
                   title: 'tip_tips'.tr,
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
                   content: Text(tips),
                   textCancel: "  ${'button_cancel'.tr}  ",
                   textConfirm: "  ${'button_setempty'.tr}  ",
-                  confirmTextColor: AppColors.primaryElementText,
+                  // confirmTextColor: AppColors.primaryElementText,
                   onConfirm: () {
                     GroupModel.quitGroupModel(widget.peer!, callback: (str) {
                       if (str.toString().contains('失败')) {
@@ -404,8 +410,9 @@ class _GroupDetailPageState extends State<GroupDetailPage> {
             )
             ..actions = [
               n.Button('button_cancel'.tr.n)
-                ..style =
-                    n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+                ..style = n.NikuButtonStyle(
+                  foregroundColor: Theme.of(context).colorScheme.onBackground,
+                )
                 ..onPressed = () {
                   Navigator.of(context).pop();
                 },
diff --git a/lib/page/group/group_list/group_list_binding.dart b/lib/page/group/group_list/group_list_binding.dart
index 224c351..a83a357 100644
--- a/lib/page/group/group_list/group_list_binding.dart
+++ b/lib/page/group/group_list/group_list_binding.dart
@@ -4,7 +4,7 @@ import 'group_list_logic.dart';
 
 class GroupListBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => GroupListLogic()),
       ];
 }
diff --git a/lib/page/group/group_list/group_list_view.dart b/lib/page/group/group_list/group_list_view.dart
index 367ede2..0ab7d06 100644
--- a/lib/page/group/group_list/group_list_view.dart
+++ b/lib/page/group/group_list/group_list_view.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 // import 'group_list_logic.dart';
@@ -15,10 +15,11 @@ class GroupListPage extends StatelessWidget {
     // final state = Get.find<GroupListLogic>().state;
 
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
+      backgroundColor: Theme.of(context).colorScheme.background,
       // backgroundColor: Colors.white,
-      appBar: PageAppBar(
+      appBar: NavAppBar(
         title: 'group_chat'.tr,
+        automaticallyImplyLeading: true,
       ),
       body: n.Padding(
         left: 12,
diff --git a/lib/page/group/group_member/group_member_view.dart b/lib/page/group/group_member/group_member_view.dart
index 0b79b6d..d79622f 100644
--- a/lib/page/group/group_member/group_member_view.dart
+++ b/lib/page/group/group_member/group_member_view.dart
@@ -150,7 +150,8 @@ class _GroupMemberPageState extends State<GroupMemberPage> {
     }
 
     return Scaffold(
-      appBar: PageAppBar(titleWidget: titleWidget()),
+      appBar: NavAppBar(
+          automaticallyImplyLeading: true, titleWidget: titleWidget()),
       body: ListView(
         padding: const EdgeInsets.all(10),
         children: <Widget>[
diff --git a/lib/page/group/group_member_detail/group_member_detail_binding.dart b/lib/page/group/group_member_detail/group_member_detail_binding.dart
index 0a2a141..9a91e0a 100644
--- a/lib/page/group/group_member_detail/group_member_detail_binding.dart
+++ b/lib/page/group/group_member_detail/group_member_detail_binding.dart
@@ -4,7 +4,7 @@ import 'group_member_detail_logic.dart';
 
 class GroupMemberDetailBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => GroupMemberDetailLogic()),
       ];
 }
diff --git a/lib/page/group/group_member_detail/group_member_detail_view.dart b/lib/page/group/group_member_detail/group_member_detail_view.dart
index f89071b..de57f7c 100644
--- a/lib/page/group/group_member_detail/group_member_detail_view.dart
+++ b/lib/page/group/group_member_detail/group_member_detail_view.dart
@@ -23,7 +23,7 @@ class _GroupMemberDetailPageState extends State<GroupMemberDetailPage> {
   @override
   Widget build(BuildContext context) {
     return const Scaffold(
-      appBar: PageAppBar(title: '等待编写'),
+      appBar: NavAppBar(automaticallyImplyLeading: true, title: '等待编写'),
     );
   }
 
diff --git a/lib/page/group/group_remark/group_remark_binding.dart b/lib/page/group/group_remark/group_remark_binding.dart
index 161ab58..a6de079 100644
--- a/lib/page/group/group_remark/group_remark_binding.dart
+++ b/lib/page/group/group_remark/group_remark_binding.dart
@@ -4,7 +4,7 @@ import 'group_remark_logic.dart';
 
 class GroupRemarkBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => GroupRemarkLogic()),
       ];
 }
diff --git a/lib/page/group/group_remark/group_remark_view.dart b/lib/page/group/group_remark/group_remark_view.dart
index eb803df..aa45a88 100644
--- a/lib/page/group/group_remark/group_remark_view.dart
+++ b/lib/page/group/group_remark/group_remark_view.dart
@@ -4,7 +4,7 @@ import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/main_input.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/enum.dart';
 
 import 'group_remark_logic.dart';
@@ -77,7 +77,9 @@ class _GroupRemarkPageState extends State<GroupRemarkPage> {
   Widget build(BuildContext context) {
     return MainInputBody(
       child: Scaffold(
-        appBar: const PageAppBar(backgroundColor: Colors.white),
+        appBar: const NavAppBar(
+          automaticallyImplyLeading: true,
+        ),
         body: Container(
           padding: const EdgeInsets.symmetric(horizontal: 20),
           child: Column(
@@ -141,7 +143,9 @@ class _GroupRemarkPageState extends State<GroupRemarkPage> {
                         child: Text(
                           '填入',
                           style: TextStyle(
-                              color: AppColors.MainTextColor, fontSize: 14),
+                            // color: AppColors.MainTextColor,
+                            fontSize: 14,
+                          ),
                         ),
                       ),
                       onTap: () {
diff --git a/lib/page/group/group_select/group_select_binding.dart b/lib/page/group/group_select/group_select_binding.dart
index 28f2e51..ca9d14b 100644
--- a/lib/page/group/group_select/group_select_binding.dart
+++ b/lib/page/group/group_select/group_select_binding.dart
@@ -4,7 +4,7 @@ import 'group_select_logic.dart';
 
 class GroupSelectBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => GroupSelectLogic()),
       ];
 }
diff --git a/lib/page/group/select_member/select_member_binding.dart b/lib/page/group/select_member/select_member_binding.dart
index cef044b..0826cfd 100644
--- a/lib/page/group/select_member/select_member_binding.dart
+++ b/lib/page/group/select_member/select_member_binding.dart
@@ -4,7 +4,7 @@ import 'select_member_logic.dart';
 
 class SelectMemberBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => SelectMemberLogic()),
       ];
 }
diff --git a/lib/page/group/select_member/select_member_view.dart b/lib/page/group/select_member/select_member_view.dart
index 6949fc5..1aec7cb 100644
--- a/lib/page/group/select_member/select_member_view.dart
+++ b/lib/page/group/select_member/select_member_view.dart
@@ -5,11 +5,12 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:get/get.dart';
+import 'package:lpinyin/lpinyin.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
-import 'package:lpinyin/lpinyin.dart';
 
 import 'select_member_logic.dart';
 import 'select_member_state.dart';
@@ -75,7 +76,7 @@ class _SelectMemberPageState extends State<SelectMemberPage> {
       height: _suspensionHeight.toDouble(),
       width: double.infinity,
       alignment: Alignment.centerLeft,
-      color: AppColors.AppBarColor,
+      color: Theme.of(context).colorScheme.background,
       child: Text(
         susTag,
         textScaler: const TextScaler.linear(1.2),
@@ -128,7 +129,7 @@ class _SelectMemberPageState extends State<SelectMemberPage> {
                     decoration: const BoxDecoration(
                       border: Border(
                         top: BorderSide(
-                          color: AppColors.LineColor,
+                          // color: AppColors.LineColor,
                           width: 0.2,
                         ),
                       ),
@@ -159,7 +160,8 @@ class _SelectMemberPageState extends State<SelectMemberPage> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'select_contacts'.tr,
         /*
         rightDMActions: <Widget>[
diff --git a/lib/page/live_room/live_room_list/live_room_list_view.dart b/lib/page/live_room/live_room_list/live_room_list_view.dart
index 80e0671..3c71aa0 100644
--- a/lib/page/live_room/live_room_list/live_room_list_view.dart
+++ b/lib/page/live_room/live_room_list/live_room_list_view.dart
@@ -3,9 +3,11 @@ import 'package:get/get.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
+
 import 'package:imboy/config/const.dart';
-import 'package:imboy/page/live_room/publisher/publisher_view.dart';
-import 'package:imboy/page/live_room/subscriber/subscriber_view.dart';
+
+// import 'package:imboy/page/live_room/publisher/publisher_view.dart';
+// import 'package:imboy/page/live_room/subscriber/subscriber_view.dart';
 import 'package:imboy/store/model/live_room_model.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -40,14 +42,15 @@ class LiveRoomListPage extends StatelessWidget {
     initData();
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'my_live'.tr,
       ),
       body: SingleChildScrollView(
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.primaryBackground,
+          color: Theme.of(context).colorScheme.background,
           child: n.Column([
             Expanded(
               child: n.Padding(
@@ -70,11 +73,7 @@ class LiveRoomListPage extends StatelessWidget {
                                 subtitle: n.Row([
                                   Text('PublisherPage'.tr),
                                 ]),
-                                trailing: Icon(
-                                  Icons.navigate_next,
-                                  color:
-                                      AppColors.MainTextColor.withOpacity(0.5),
-                                ),
+                                trailing: navigateNextIcon,
                                 onTap: () {
                                   // Get.to(
                                   //   () => const PublisherPage(),
@@ -104,11 +103,7 @@ class LiveRoomListPage extends StatelessWidget {
                                 subtitle: n.Row([
                                   Text('Subscriber'.tr),
                                 ]),
-                                trailing: Icon(
-                                  Icons.navigate_next,
-                                  color:
-                                      AppColors.MainTextColor.withOpacity(0.5),
-                                ),
+                                trailing: navigateNextIcon,
                                 onTap: () {
                                   // Get.to(
                                   //   () => const SubscriberPage(),
diff --git a/lib/page/mine/dark_model/dark_model_logic.dart b/lib/page/mine/dark_model/dark_model_logic.dart
new file mode 100644
index 0000000..b47b0fd
--- /dev/null
+++ b/lib/page/mine/dark_model/dark_model_logic.dart
@@ -0,0 +1,122 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_easyloading/flutter_easyloading.dart';
+import 'package:get/get.dart';
+
+import 'package:imboy/config/const.dart';
+import 'package:imboy/component/helper/func.dart';
+import 'package:imboy/config/theme.dart';
+import 'package:imboy/service/storage.dart';
+
+import 'dark_model_state.dart';
+
+class DarkModelLogic extends GetxController {
+  final DarkModelState state = DarkModelState();
+
+  /// 配置本地主题配置
+  configLocalTheme() {
+    ThemeMode themeMode = getLocalProfileAboutThemeModel();
+    if (themeMode == ThemeMode.system) {
+      state.switchValue.value = true;
+    } else {
+      state.switchValue.value = false;
+      if (themeMode == ThemeMode.light) {
+        state.selectIndex.value = 2;
+      } else if (themeMode == ThemeMode.dark) {
+        state.selectIndex.value = 3;
+      }
+    }
+  }
+
+  /// 点击开关 回调
+  configSwitchOnChanged(bool value) {
+    iPrint("configSwitchOnChanged $value");
+    state.switchValue.value = value;
+    changeTheme(type: value ? 2 : 0);
+  }
+
+  tapDarkItem({required int index}) async {
+    int type = 0;
+    if (index == 2) {
+      type = 0;
+    } else if (index == 3) {
+      type = 1;
+    }
+    if (state.selectIndex.value == index) {
+      return;
+    }
+    state.selectIndex.value = index;
+
+    await changeTheme(type: type);
+  }
+
+  /// 切换主题
+  /// 0 白色
+  /// 1 黑色
+  /// 2 系统跟随
+  changeTheme({
+    int type = 0,
+    bool isUserCache = false,
+  }) async {
+    ThemeMode mode = getLocalProfileAboutThemeModel(
+      isUserCache: isUserCache,
+      themeType: type,
+    );
+    ThemeData themeData = getLocalProfileAboutThemeData(
+      isUserCache: isUserCache,
+      themeType: type,
+    );
+    iPrint(mode.toString());
+    iPrint(themeData.toString());
+    EasyLoadingStyle easyLoadingStyle = EasyLoadingStyle.dark;
+    if (mode == ThemeMode.dark) {
+      easyLoadingStyle = EasyLoadingStyle.light;
+    } else if (mode == ThemeMode.system) {
+      if (!Get.isDarkMode) {
+        easyLoadingStyle = EasyLoadingStyle.light;
+      }
+    }
+    EasyLoading.instance.loadingStyle = easyLoadingStyle;
+    Get.changeThemeMode(mode);
+    Get.changeTheme(themeData);
+    updateTheme();
+    if (!isUserCache) {
+      saveThemeType(type);
+    }
+  }
+
+  updateTheme() {
+    Future.delayed(const Duration(milliseconds: 250), () {
+      Get.forceAppUpdate();
+    });
+  }
+
+  /// 取主题
+  /// 0 白色
+  /// 1 黑色
+  /// 2 跟随系统
+  int getThemeType() {
+    return StorageService.to.getInt(Keys.themeType) ?? 0;
+  }
+
+  saveThemeType(int type) {
+    StorageService.to.setInt(Keys.themeType, type);
+  }
+
+  getLocalProfileAboutThemeData({
+    bool isUserCache = true,
+    int themeType = 0,
+  }) {
+    int type = isUserCache ? getThemeType() : themeType;
+    if (type == 0) {
+      return lightTheme;
+    } else if (type == 1) {
+      return darkTheme;
+    } else if (type == 2) {
+      if (!Get.isDarkMode) {
+        return darkTheme;
+      } else {
+        return lightTheme;
+      }
+    }
+  }
+}
diff --git a/lib/page/mine/dark_model/dark_model_state.dart b/lib/page/mine/dark_model/dark_model_state.dart
new file mode 100644
index 0000000..050b71c
--- /dev/null
+++ b/lib/page/mine/dark_model/dark_model_state.dart
@@ -0,0 +1,12 @@
+import 'package:get/get.dart';
+
+class DarkModelState {
+  var switchValue = false.obs;
+
+  /// 2 普通模式选择 3 深色模式选择
+  var selectIndex = 2.obs;
+
+  DarkModelState() {
+    ///Initialize variables
+  }
+}
diff --git a/lib/page/mine/dark_model/dark_model_view.dart b/lib/page/mine/dark_model/dark_model_view.dart
new file mode 100644
index 0000000..81c17b7
--- /dev/null
+++ b/lib/page/mine/dark_model/dark_model_view.dart
@@ -0,0 +1,169 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/gestures.dart';
+import 'package:flutter/material.dart';
+import 'package:get/get.dart';
+import 'package:imboy/component/ui/common_bar.dart';
+import 'package:imboy/component/ui/line.dart';
+
+import 'package:niku/namespace.dart' as n;
+
+import 'dark_model_logic.dart';
+
+class DarkModelPage extends StatelessWidget {
+  final logic = Get.put(DarkModelLogic());
+  final state = Get.find<DarkModelLogic>().state;
+
+  DarkModelPage({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    logic.configLocalTheme();
+    return Scaffold(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
+        title: 'dark_model'.tr,
+      ),
+      backgroundColor: Theme.of(context).colorScheme.primary.withOpacity(0.7),
+      body: n.Column([
+        Expanded(
+          child: ListView.separated(
+            itemBuilder: createItemBuilder,
+            separatorBuilder: createSeparatorBuilder,
+            itemCount: state.switchValue.value ? 1 : 4,
+          ),
+        ),
+      ]),
+    );
+  }
+
+  Widget createItemBuilder(BuildContext context, int index) {
+    Widget body = Container();
+    if (index == 0) {
+      body = createFirstWidget(context);
+    } else if (index == 1) {
+      body = n.Padding(
+          left: 20,
+          right: 20,
+          top: 10,
+          bottom: 10,
+          child: Text(
+            'manually'.tr,
+            style: const TextStyle(
+              fontSize: 14,
+              // color: Colors.black54,
+            ),
+            // style: FontConfig.fontMedium145a5a5a,
+          ));
+    } else if (index == 2) {
+      body = createDarkItemWidget(
+        'normal_model'.tr,
+        index,
+      );
+    } else if (index == 3) {
+      body = createDarkItemWidget(
+        'dark_model'.tr,
+        index,
+      );
+    }
+    return body;
+  }
+
+  Widget createSeparatorBuilder(BuildContext context, int index) {
+    if (index == 2) {
+      return n.Padding(
+        left: 20,
+        right: 20,
+        child: const HorizontalLine(height: 0.5),
+      );
+    } else {
+      return Container();
+    }
+  }
+
+  // 创建跟随系统
+  Widget createFirstWidget(BuildContext context) {
+    return Container(
+      padding: const EdgeInsets.only(
+        left: 20,
+        right: 20,
+        top: 15,
+        bottom: 15,
+      ),
+      color: Theme.of(context).colorScheme.background,
+      // color: Colors.white,
+      child: n.Row([
+        Expanded(
+          child: n.Column([
+            Text(
+              'follow_system'.tr,
+              style: const TextStyle(
+                fontSize: 16,
+                fontWeight: FontWeight.w500,
+                // color: Theme.of(context).colorScheme.onSecondary,
+              ),
+            ),
+            // Gaps.vGap5,
+            Text(
+              'follow_system_tips'.tr,
+              style: const TextStyle(
+                fontSize: 14,
+                fontWeight: FontWeight.w200,
+                // color: Theme.of(context).colorScheme.onSecondary,
+              ),
+            ),
+          ])
+            ..mainAxisAlignment = MainAxisAlignment.center
+            ..crossAxisAlignment = CrossAxisAlignment.start,
+        ),
+        CupertinoSwitch(
+          value: state.switchValue.value,
+          dragStartBehavior: DragStartBehavior.down,
+          onChanged: (value) {
+            logic.configSwitchOnChanged(value);
+          },
+        )
+      ])
+        ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
+    );
+  }
+
+  Widget createDarkItemWidget(String text, int index) {
+    return InkWell(
+      onTap: () {
+        logic.tapDarkItem(index: index);
+      },
+      child: Container(
+        padding: const EdgeInsets.only(
+          left: 20,
+          right: 20,
+          bottom: 10,
+          top: 10,
+        ),
+        decoration: BoxDecoration(
+          color: Theme.of(Get.context!).colorScheme.background,
+        ),
+        child: n.Row([
+          Expanded(
+            child: Text(
+              text,
+              overflow: TextOverflow.ellipsis,
+            ),
+          ),
+          state.selectIndex.value == index
+              ? const Icon(
+                  Icons.check,
+                  size: 20,
+                  color: Colors.green,
+                )
+              : Container(),
+        ])
+          ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
+      ),
+    );
+  }
+
+// @override
+// configShowBack() {
+//   return isShowBack ?? true;
+// }
+}
diff --git a/lib/page/mine/denylist/denylist_view.dart b/lib/page/mine/denylist/denylist_view.dart
index 29c809b..6979286 100644
--- a/lib/page/mine/denylist/denylist_view.dart
+++ b/lib/page/mine/denylist/denylist_view.dart
@@ -5,8 +5,9 @@ import 'package:get/get.dart';
 import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
+import 'package:imboy/component/ui/line.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/contact/contact/contact_logic.dart';
 import 'package:imboy/page/single/people_info.dart';
 import 'package:imboy/service/assets.dart';
@@ -39,129 +40,134 @@ class DenylistPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'blacklist'.tr,
       ),
       body: SingleChildScrollView(
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.ChatBg,
-          child: n.Column(
-            [
-              n.Padding(
-                left: 8,
-                top: 10,
-                right: 8,
-                bottom: 10,
-                child: searchBar(
-                  context,
-                  searchLabel: 'search'.tr,
-                  hintText: 'search'.tr,
-                  queryTips: 'search_friends_tips'.tr,
-                  doSearch: ((query) {
-                    // debugPrint(
-                    //     "> on search doSearch ${query.toString()}");
-                    return UserDenylistRepo().search(kwd: query);
-                  }),
-                  onTapForItem: (value) {
-                    // debugPrint(
-                    //     "> on search value ${value is DenylistModel}, ${value.toString()}");
-                    if (value is DenylistModel) {
-                      Get.to(
-                        () => PeopleInfoPage(
-                          id: value.deniedUid,
-                          scene: 'denylist',
-                        ),
-                        transition: Transition.rightToLeft,
-                        popGesture: true, // 右滑，返回上一页
-                      );
-                    }
-                  },
-                ),
+          color: Theme.of(context).colorScheme.background,
+          child: n.Column([
+            n.Padding(
+              left: 8,
+              top: 10,
+              right: 8,
+              bottom: 10,
+              child: searchBar(
+                context,
+                searchLabel: 'search'.tr,
+                hintText: 'search'.tr,
+                queryTips: 'search_friends_tips'.tr,
+                doSearch: ((query) {
+                  // debugPrint(
+                  //     "> on search doSearch ${query.toString()}");
+                  return UserDenylistRepo().search(kwd: query);
+                }),
+                onTapForItem: (value) {
+                  // debugPrint(
+                  //     "> on search value ${value is DenylistModel}, ${value.toString()}");
+                  if (value is DenylistModel) {
+                    Get.to(
+                      () => PeopleInfoPage(
+                        id: value.deniedUid,
+                        scene: 'denylist',
+                      ),
+                      transition: Transition.rightToLeft,
+                      popGesture: true, // 右滑，返回上一页
+                    );
+                  }
+                },
               ),
-              Expanded(
-                child: Container(
-                  color: Colors.white,
-                  child: SlidableAutoCloseBehavior(child: Obx(() {
-                    return logic.items.isEmpty
-                        ? NoDataView(text: 'no_data'.tr)
-                        : AzListView(
-                            data: logic.items,
-                            itemCount: logic.items.length,
-                            itemBuilder: (BuildContext context, int index) {
-                              DenylistModel model = logic.items[index];
-                              // debugPrint(
-                              //     "model.avatar ${model.avatar.toString()}: ${model.toJson().toString()}");
-                              return ListTile(
-                                leading: Avatar(imgUri: model.avatar),
-                                contentPadding: const EdgeInsets.only(left: 10),
-                                title: Text(model.nickname),
-                                // subtitle: Text('${model.remark}'),
-                                onTap: () {
-                                  Get.to(
-                                    () => PeopleInfoPage(
-                                      id: model.deniedUid,
-                                      scene: 'denylist',
-                                    ),
-                                    transition: Transition.rightToLeft,
-                                    popGesture: true, // 右滑，返回上一页
-                                  );
-                                },
-                              );
-                            },
-                            // 解决联系人数据量少的情况下无法刷新的问题
-                            // 在listview的physice属性赋值new AlwaysScrollableScrollPhysics()，保持listview任何情况都能滚动
-                            physics: const AlwaysScrollableScrollPhysics(),
-                            susItemBuilder: (BuildContext context, int index) {
-                              DenylistModel model = logic.items[index];
-                              if ('↑' == model.getSuspensionTag()) {
-                                return Container();
-                              }
-                              return Get.find<ContactLogic>().getSusItem(
-                                context,
-                                model.getSuspensionTag(),
-                              );
-                            },
-                            // indexBarData: const ['↑', ...kIndexBarData],
-                            indexBarData: logic.items.isNotEmpty
-                                ? ['↑', ...logic.currIndexBarData]
-                                : [],
-                            indexBarOptions: IndexBarOptions(
-                              needRebuild: true,
-                              ignoreDragCancel: true,
-                              downTextStyle: const TextStyle(
-                                fontSize: 12,
-                                color: Colors.white,
-                              ),
-                              downItemDecoration: const BoxDecoration(
-                                shape: BoxShape.circle,
-                                color: Colors.green,
-                              ),
-                              indexHintWidth: 128 / 2,
-                              indexHintHeight: 128 / 2,
-                              indexHintDecoration: BoxDecoration(
-                                image: DecorationImage(
-                                  image: AssetImage(
-                                    AssetsService.getImgPath(
-                                        'ic_index_bar_bubble_gray'),
+            ),
+            Expanded(
+              child: SlidableAutoCloseBehavior(child: Obx(() {
+                // return NoDataView(text: 'no_data'.tr);
+                return logic.items.isEmpty
+                    ? NoDataView(text: 'no_data'.tr)
+                    : AzListView(
+                        data: logic.items,
+                        itemCount: logic.items.length,
+                        itemBuilder: (BuildContext context, int index) {
+                          DenylistModel model = logic.items[index];
+                          // debugPrint(
+                          //     "model.avatar ${model.avatar.toString()}: ${model.toJson().toString()}");
+                          return n.Column([
+                            ListTile(
+                              leading: Avatar(imgUri: model.avatar),
+                              contentPadding: const EdgeInsets.only(left: 10),
+                              title: Text(model.nickname),
+                              // subtitle: Text('${model.remark}'),
+                              onTap: () {
+                                Get.to(
+                                  () => PeopleInfoPage(
+                                    id: model.deniedUid,
+                                    scene: 'denylist',
                                   ),
-                                  fit: BoxFit.contain,
-                                ),
-                              ),
-                              indexHintAlignment: Alignment.centerRight,
-                              indexHintChildAlignment:
-                                  const Alignment(-0.25, 0.0),
-                              indexHintOffset: const Offset(-20, 0),
+                                  transition: Transition.rightToLeft,
+                                  popGesture: true, // 右滑，返回上一页
+                                );
+                              },
                             ),
+                            n.Padding(
+                              left: 12,
+                              right: 20,
+                              bottom: 10,
+                              child: HorizontalLine(
+                                  height: Get.isDarkMode ? 0.5 : 1.0),
+                            ),
+                          ]);
+                        },
+                        // 解决联系人数据量少的情况下无法刷新的问题
+                        // 在listview的physice属性赋值new AlwaysScrollableScrollPhysics()，保持listview任何情况都能滚动
+                        physics: const AlwaysScrollableScrollPhysics(),
+                        susItemBuilder: (BuildContext context, int index) {
+                          DenylistModel model = logic.items[index];
+                          if ('↑' == model.getSuspensionTag()) {
+                            return Container();
+                          }
+                          return Get.find<ContactLogic>().getSusItem(
+                            context,
+                            model.getSuspensionTag(),
                           );
-                  })),
-                ),
-              ),
-            ],
-            mainAxisSize: MainAxisSize.min,
-          ),
+                        },
+                        // indexBarData: const ['↑', ...kIndexBarData],
+                        indexBarData: logic.items.isNotEmpty
+                            ? ['↑', ...logic.currIndexBarData]
+                            : [],
+                        indexBarOptions: IndexBarOptions(
+                          needRebuild: true,
+                          ignoreDragCancel: true,
+                          downTextStyle: const TextStyle(
+                            fontSize: 12,
+                            color: Colors.white,
+                          ),
+                          downItemDecoration: const BoxDecoration(
+                            shape: BoxShape.circle,
+                            color: Colors.green,
+                          ),
+                          indexHintWidth: 128 / 2,
+                          indexHintHeight: 128 / 2,
+                          indexHintDecoration: BoxDecoration(
+                            image: DecorationImage(
+                              image: AssetImage(
+                                AssetsService.getImgPath(
+                                    'ic_index_bar_bubble_gray'),
+                              ),
+                              fit: BoxFit.contain,
+                            ),
+                          ),
+                          indexHintAlignment: Alignment.centerRight,
+                          indexHintChildAlignment: const Alignment(-0.25, 0.0),
+                          indexHintOffset: const Offset(-20, 0),
+                        ),
+                      );
+              })),
+            ),
+          ])
+            ..mainAxisSize = MainAxisSize.min,
         ),
       ),
     );
diff --git a/lib/page/mine/feedback/feedback_detail_view.dart b/lib/page/mine/feedback/feedback_detail_view.dart
index e0dc3f6..79ed9de 100644
--- a/lib/page/mine/feedback/feedback_detail_view.dart
+++ b/lib/page/mine/feedback/feedback_detail_view.dart
@@ -3,7 +3,7 @@ import 'package:flutter_rating_bar/flutter_rating_bar.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/image_gallery/image_gallery.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/model/feedback_reply_model.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -45,7 +45,8 @@ class FeedbackDetailPage extends StatelessWidget {
     initData();
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'feedback_details'.tr,
       ),
       body: SingleChildScrollView(
@@ -114,10 +115,7 @@ class FeedbackDetailPage extends StatelessWidget {
             n.Padding(
               top: 8,
               bottom: 20,
-              child: const HorizontalLine(
-                height: 2,
-                color: Colors.black12,
-              ),
+              child: const HorizontalLine(height: 1.0),
             ),
             n.Row([
               Expanded(
@@ -136,17 +134,14 @@ class FeedbackDetailPage extends StatelessWidget {
             n.Padding(
               top: 8,
               bottom: 20,
-              child: const HorizontalLine(
-                height: 2,
-                color: Colors.black12,
-              ),
+              child: const HorizontalLine(height: 1.0),
             ),
             n.Row([
               SingleChildScrollView(
                 child: Container(
                   width: Get.width - 32,
                   height: Get.height,
-                  color: AppColors.primaryBackground,
+                  color: Theme.of(context).colorScheme.background,
                   child: n.Column([
                     Expanded(
                       child: n.Padding(
@@ -169,7 +164,7 @@ class FeedbackDetailPage extends StatelessWidget {
                                           Text(
                                             'replied_at'.tr,
                                             style: const TextStyle(
-                                              color: AppColors.MainTextColor,
+                                              // color: AppColors.MainTextColor,
                                               fontSize: 14.0,
                                             ),
                                           ),
@@ -180,7 +175,7 @@ class FeedbackDetailPage extends StatelessWidget {
                                             maxLines: 1,
                                             overflow: TextOverflow.ellipsis,
                                             style: const TextStyle(
-                                              color: AppColors.MainTextColor,
+                                              // color: AppColors.MainTextColor,
                                               fontSize: 14.0,
                                             ),
                                           ),
@@ -188,7 +183,7 @@ class FeedbackDetailPage extends StatelessWidget {
                                           Text(
                                             model.statusDesc,
                                             style: const TextStyle(
-                                              color: AppColors.MainTextColor,
+                                              // color: AppColors.MainTextColor,
                                               fontSize: 14.0,
                                             ),
                                           )
@@ -218,11 +213,7 @@ class FeedbackDetailPage extends StatelessWidget {
                                         //   );
                                         // },
                                       ),
-                                      const Divider(
-                                        height: 8.0,
-                                        indent: 0.0,
-                                        color: Colors.black26,
-                                      ),
+                                      const HorizontalLine(height: 1.0)
                                     ]);
                                   },
                                 );
diff --git a/lib/page/mine/feedback/feedback_logic.dart b/lib/page/mine/feedback/feedback_logic.dart
index e23f0ac..be9530b 100644
--- a/lib/page/mine/feedback/feedback_logic.dart
+++ b/lib/page/mine/feedback/feedback_logic.dart
@@ -19,7 +19,8 @@ class FeedbackLogic extends GetxController {
     // 检查网络状态
     var res = await Connectivity().checkConnectivity();
     if (res == ConnectivityResult.none) {
-      EasyLoading.showToast('network_exception_plase_need_network_to_view_data'.tr);
+      EasyLoading.showToast(
+          'network_exception_plase_need_network_to_view_data'.tr);
       // list = await repo.page(limit: size, offset: offset);
     }
     if (list.isNotEmpty) {
@@ -62,7 +63,8 @@ class FeedbackLogic extends GetxController {
     // 检查网络状态
     var res = await Connectivity().checkConnectivity();
     if (res == ConnectivityResult.none) {
-      EasyLoading.showToast('network_exception_plase_need_network_to_view_data'.tr);
+      EasyLoading.showToast(
+          'network_exception_plase_need_network_to_view_data'.tr);
       // list = await repo.page(limit: size, offset: offset);
     }
     if (list.isNotEmpty) {
diff --git a/lib/page/mine/feedback/feedback_view.dart b/lib/page/mine/feedback/feedback_view.dart
index e65a4c5..89a2183 100644
--- a/lib/page/mine/feedback/feedback_view.dart
+++ b/lib/page/mine/feedback/feedback_view.dart
@@ -2,14 +2,15 @@ import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:flutter_slidable/flutter_slidable.dart';
 import 'package:get/get.dart';
+import 'package:imboy/component/ui/line.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
 import 'package:imboy/page/mine/feedback/feedback_detail_view.dart';
 import 'package:imboy/store/model/feedback_model.dart';
-import 'package:niku/namespace.dart' as n;
-
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
 
 import 'feedback_logic.dart';
 
@@ -33,14 +34,15 @@ class FeedbackPage extends StatelessWidget {
     initData();
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'feedback'.tr,
       ),
       body: SingleChildScrollView(
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.primaryBackground,
+          color: Theme.of(context).colorScheme.background,
           child: n.Column([
             Expanded(
               child: n.Padding(
@@ -79,15 +81,21 @@ class FeedbackPage extends StatelessWidget {
                                             ..actions = [
                                               n.Button('button_cancel'.tr.n)
                                                 ..style = n.NikuButtonStyle(
-                                                    foregroundColor:
-                                                        AppColors.ItemOnColor)
+                                                  foregroundColor:
+                                                      Theme.of(context)
+                                                          .colorScheme
+                                                          .onBackground,
+                                                )
                                                 ..onPressed = () {
                                                   Navigator.of(context).pop();
                                                 },
                                               n.Button('button_delete'.tr.n)
                                                 ..style = n.NikuButtonStyle(
-                                                    foregroundColor:
-                                                        AppColors.ItemOnColor)
+                                                  foregroundColor:
+                                                      Theme.of(context)
+                                                          .colorScheme
+                                                          .onBackground,
+                                                )
                                                 ..onPressed = () async {
                                                   Navigator.of(context).pop();
                                                   bool res = await logic.remove(
@@ -124,7 +132,7 @@ class FeedbackPage extends StatelessWidget {
                                       Text(
                                         "${model.type.tr} | ${'submitted_at'.tr}",
                                         style: const TextStyle(
-                                          color: AppColors.MainTextColor,
+                                          // color: AppColors.MainTextColor,
                                           fontSize: 14.0,
                                         ),
                                       ),
@@ -136,7 +144,7 @@ class FeedbackPage extends StatelessWidget {
                                         maxLines: 1,
                                         overflow: TextOverflow.ellipsis,
                                         style: const TextStyle(
-                                          color: AppColors.MainTextColor,
+                                          // color: AppColors.MainTextColor,
                                           fontSize: 14.0,
                                         ),
                                       ),
@@ -144,7 +152,7 @@ class FeedbackPage extends StatelessWidget {
                                       Text(
                                         model.statusDesc,
                                         style: const TextStyle(
-                                          color: AppColors.MainTextColor,
+                                          // color: AppColors.MainTextColor,
                                           fontSize: 14.0,
                                         ),
                                       )
@@ -164,11 +172,7 @@ class FeedbackPage extends StatelessWidget {
                                       ),
                                     ),
                                   ]),
-                                  trailing: Icon(
-                                    Icons.navigate_next,
-                                    color: AppColors.MainTextColor.withOpacity(
-                                        0.5),
-                                  ),
+                                  trailing: navigateNextIcon,
                                   onTap: () {
                                     Get.to(
                                       () => FeedbackDetailPage(
@@ -180,10 +184,8 @@ class FeedbackPage extends StatelessWidget {
                                   },
                                 ),
                               ),
-                              const Divider(
-                                height: 8.0,
-                                indent: 0.0,
-                                color: Colors.black26,
+                              HorizontalLine(
+                                height: Get.isDarkMode ? 0.5 : 1.0,
                               ),
                             ]);
                           },
diff --git a/lib/page/mine/language/language_logic.dart b/lib/page/mine/language/language_logic.dart
index 5956a45..0ed09bf 100644
--- a/lib/page/mine/language/language_logic.dart
+++ b/lib/page/mine/language/language_logic.dart
@@ -1,9 +1,10 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
-import 'package:imboy/component/locales/locales.dart';
+import 'package:jiffy/jiffy.dart';
+
 import 'package:imboy/config/const.dart';
+import 'package:imboy/component/locales/locales.dart';
 import 'package:imboy/service/storage.dart';
-import 'package:jiffy/jiffy.dart';
 
 import 'language_state.dart';
 
@@ -38,14 +39,20 @@ class LanguageLogic extends GetxController {
         child: ListTile(
           title: Text(
             model['title'] ?? '',
+            style: TextStyle(
+              fontSize: state.selectedLanguage.value == id ? 20 : 16,
+              // color: Theme.of(context).colorScheme.onPrimary,
+            ),
           ),
           selected: state.selectedLanguage.value == id,
-          selectedColor: AppColors.primaryElement,
+          selectedColor: Theme.of(context).colorScheme.onPrimary,
           trailing: state.selectedLanguage.value == id
               ? const Text(
-                  "√",
+                  '√',
                   style: TextStyle(
-                      fontSize: 20, color: AppColors.secondaryElementText),
+                    fontSize: 20,
+                    color: Colors.green,
+                  ),
                 )
               : null,
           onTap: () {
@@ -57,12 +64,13 @@ class LanguageLogic extends GetxController {
             // regionSelectedTitle(title);
           },
         ),
+        // margin: const EdgeInsets.only(left: 16, right: 16),
         // 下边框
-        decoration: const BoxDecoration(
+        decoration: BoxDecoration(
           border: Border(
             bottom: BorderSide(
-              width: 1,
-              color: Color(0xffe5e5e5),
+              width: 1.0,
+              color: Theme.of(context).colorScheme.primary,
             ),
           ),
         ),
diff --git a/lib/page/mine/language/language_state.dart b/lib/page/mine/language/language_state.dart
index c95d130..cbc6c2f 100644
--- a/lib/page/mine/language/language_state.dart
+++ b/lib/page/mine/language/language_state.dart
@@ -50,6 +50,7 @@ class LanguageState {
       "title": 'en_us'.tr //美国英语
     }
   ];
+
   LanguageState() {
     ///Initialize variables
   }
diff --git a/lib/page/mine/language/language_view.dart b/lib/page/mine/language/language_view.dart
index fab3e4b..835db4e 100644
--- a/lib/page/mine/language/language_view.dart
+++ b/lib/page/mine/language/language_view.dart
@@ -1,9 +1,9 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
-import 'package:imboy/config/const.dart';
-import 'package:imboy/service/storage.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
+import 'package:imboy/service/storage.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 
 import 'language_logic.dart';
@@ -22,15 +22,16 @@ class LanguagePage extends StatelessWidget {
     state.selectedLanguage.value =
         StorageService.to.getString(Keys.currentLang) ?? 'zh_CN';
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      // backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         titleWidget: n.Row([
           Expanded(
             child: Text(
               'language_setting'.tr,
               textAlign: TextAlign.center,
-              style: const TextStyle(
-                // color: Colors.white,
+              style: TextStyle(
+                color: Theme.of(context).colorScheme.onPrimary,
                 fontSize: 16.0,
                 fontWeight: FontWeight.bold,
               ),
@@ -53,7 +54,8 @@ class LanguagePage extends StatelessWidget {
               style: state.valueChanged.isTrue
                   ? ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.primaryElement,
+                        // Theme.of(context).colorScheme.background,
+                        Colors.green,
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
                         Colors.white,
@@ -65,10 +67,10 @@ class LanguagePage extends StatelessWidget {
                     )
                   : ButtonStyle(
                       backgroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.AppBarColor,
+                        Colors.green.withOpacity(0.6),
                       ),
                       foregroundColor: MaterialStateProperty.all<Color>(
-                        AppColors.LineColor,
+                        Colors.white.withOpacity(0.6),
                       ),
                       // minimumSize:
                       //     MaterialStateProperty.all(const Size(88, 40)),
@@ -90,7 +92,7 @@ class LanguagePage extends StatelessWidget {
           ),
         ),
       ], mainAxisSize: MainAxisSize.min)
-        ..useParent((v) => v..bg = Colors.white),
+        ..useParent((v) => v..bg = Theme.of(context).colorScheme.background),
     );
   }
 }
diff --git a/lib/page/mine/mine/mine_binding.dart b/lib/page/mine/mine/mine_binding.dart
index 8f98f25..ef0db46 100644
--- a/lib/page/mine/mine/mine_binding.dart
+++ b/lib/page/mine/mine/mine_binding.dart
@@ -4,7 +4,7 @@ import 'mine_logic.dart';
 
 class MineBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => MineLogic()),
       ];
 }
diff --git a/lib/page/mine/mine/mine_view.dart b/lib/page/mine/mine/mine_view.dart
index a2126b7..0e65664 100644
--- a/lib/page/mine/mine/mine_view.dart
+++ b/lib/page/mine/mine/mine_view.dart
@@ -3,10 +3,11 @@ import 'package:get/get.dart';
 import 'package:imboy/page/mine/feedback/feedback_view.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/image_gallery/image_gallery.dart';
 import 'package:imboy/component/ui/line.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/mine/setting/setting_view.dart';
 import 'package:imboy/page/personal_info/personal_info/personal_info_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
@@ -25,7 +26,7 @@ class MinePage extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Container(
-      color: AppColors.AppBarColor,
+      color: Theme.of(context).colorScheme.background,
       child: SingleChildScrollView(
         child: n.Column([
           GetBuilder<UserRepoLocal>(
@@ -37,114 +38,113 @@ class MinePage extends StatelessWidget {
                   popGesture: true, // 右滑，返回上一页
                 );
               },
-              child: Container(
-                color: Colors.white,
-                child: n.Padding(
-                  child: Container(
-                    color: Colors.white,
-                    // 显示地区需要360的高度
-                    height: c.current.region.isEmpty ? 340 : 380,
-                    padding: const EdgeInsets.only(
-                      left: 16.0,
-                      right: 12.0,
-                      top: 32.0,
-                    ),
-                    margin: const EdgeInsets.only(
-                      bottom: 10,
-                    ),
-                    child: n.Column([
-                      // avatar
-                      n.Row([
-                        Container(
-                          margin: const EdgeInsets.only(top: 32.0),
-                          // color: Colors.red,
-                          width: 180.0,
-                          height: 180.0,
-                          child: ClipRRect(
-                            borderRadius:
-                                const BorderRadius.all(Radius.circular(100.0)),
-                            child: InkWell(
-                              onTap: () {
-                                if (c.current.avatar.isEmpty) {
-                                  Get.to(
-                                    () => const PersonalInfoPage(),
-                                    transition: Transition.rightToLeft,
-                                    popGesture: true, // 右滑，返回上一页
-                                  );
-                                  // EasyLoading.showInfo('请进入【个人信息页面】设置头像'.tr);
-                                } else {
-                                  zoomInPhotoView(c.current.avatar);
-                                }
-                              },
-                              child: Container(
-                                decoration: BoxDecoration(
-                                  shape: BoxShape.rectangle,
-                                  borderRadius: BorderRadius.circular(80.0),
-                                  // color: defHeaderBgColor,
-                                  image: dynamicAvatar(c.current.avatar),
-                                ),
+              child: n.Padding(
+                child: Container(
+                  // color: Colors.white,
+                  // 显示地区需要360的高度
+                  height: c.current.region.isEmpty ? 340 : 380,
+                  padding: const EdgeInsets.only(
+                    left: 16.0,
+                    right: 12.0,
+                    top: 32.0,
+                  ),
+                  margin: const EdgeInsets.only(
+                    bottom: 10,
+                  ),
+                  child: n.Column([
+                    // avatar
+                    n.Row([
+                      Container(
+                        margin: const EdgeInsets.only(top: 32.0),
+                        // color: Colors.red,
+                        width: 180.0,
+                        height: 180.0,
+                        child: ClipRRect(
+                          borderRadius:
+                              const BorderRadius.all(Radius.circular(100.0)),
+                          child: InkWell(
+                            onTap: () {
+                              if (c.current.avatar.isEmpty) {
+                                Get.to(
+                                  () => const PersonalInfoPage(),
+                                  transition: Transition.rightToLeft,
+                                  popGesture: true, // 右滑，返回上一页
+                                );
+                                // EasyLoading.showInfo('请进入【个人信息页面】设置头像'.tr);
+                              } else {
+                                zoomInPhotoView(c.current.avatar);
+                              }
+                            },
+                            child: Container(
+                              decoration: BoxDecoration(
+                                shape: BoxShape.rectangle,
+                                borderRadius: BorderRadius.circular(80.0),
+                                // color: defHeaderBgColor,
+                                image: dynamicAvatar(c.current.avatar),
                               ),
                             ),
                           ),
-                        )
-                      ])
-                        ..mainAxisAlignment = MainAxisAlignment.center,
-                      n.Row([
-                        Expanded(
-                            child: Container(
-                          margin: const EdgeInsets.only(left: 0.0, top: 10.0),
-                          width: 200.0,
-                          child: n.Column([
-                            Text(
-                              c.current.nickname,
-                              style: const TextStyle(
-                                color: Colors.black,
-                                fontSize: 18.0,
-                                fontWeight: FontWeight.w500,
-                              ),
-                              maxLines: 4,
-                              overflow: TextOverflow.ellipsis,
-                              textAlign: TextAlign.left,
+                        ),
+                      )
+                    ])
+                      ..mainAxisAlignment = MainAxisAlignment.center,
+                    n.Row([
+                      Expanded(
+                          child: Container(
+                        margin: const EdgeInsets.only(left: 0.0, top: 10.0),
+                        width: 200.0,
+                        child: n.Column([
+                          Text(
+                            c.current.nickname,
+                            style: const TextStyle(
+                              fontSize: 18.0,
+                              fontWeight: FontWeight.w500,
                             ),
-                            n.Padding(
-                              top: 8.0,
-                              bottom: 8.0,
-                              child: Text(
-                                // '',
-                                "${'account'.tr}：${c.current.account}",
-                                style: const TextStyle(
-                                  color: AppColors.MainTextColor,
-                                ),
-                              ),
+                            maxLines: 4,
+                            overflow: TextOverflow.ellipsis,
+                            textAlign: TextAlign.left,
+                          ),
+                          n.Padding(
+                            top: 8.0,
+                            bottom: 8.0,
+                            child: Text(
+                              // '',
+                              "${'account'.tr}：${c.current.account}",
+                              // style: const TextStyle(
+                              //   color: AppColors.MainTextColor,
+                              // ),
                             ),
-                            strNoEmpty(c.current.region)
-                                ? Text(
-                                    "${'region'.tr}：${c.current.region}",
-                                    style: const TextStyle(
-                                        color: AppColors.MainTextColor),
-                                  )
-                                : const SizedBox.shrink(),
-                          ])
-                            ..mainAxisSize = MainAxisSize.min
-                            ..mainAxisAlignment = MainAxisAlignment.start
-                            ..crossAxisAlignment = CrossAxisAlignment.start,
-                        )),
-                        Container(
-                          width: 20.0,
-                          margin: const EdgeInsets.only(right: 10.0),
-                          child: const Icon(Icons.qr_code_2),
-                        ),
-                      ]),
+                          ),
+                          strNoEmpty(c.current.region)
+                              ? Text(
+                                  "${'region'.tr}：${c.current.region}",
+                                  // style: const TextStyle(
+                                  //     color: AppColors.MainTextColor),
+                                )
+                              : const SizedBox.shrink(),
+                        ])
+                          ..mainAxisSize = MainAxisSize.min
+                          ..mainAxisAlignment = MainAxisAlignment.start
+                          ..crossAxisAlignment = CrossAxisAlignment.start,
+                      )),
+                      Container(
+                        width: 20.0,
+                        margin: const EdgeInsets.only(right: 10.0),
+                        child: const Icon(Icons.qr_code_2),
+                      ),
                     ]),
-                  ),
+                  ]),
                 ),
               ),
             ),
           ),
-          const HorizontalLine(height: 8),
+          HorizontalLine(
+            height: 8,
+            color: Theme.of(context).colorScheme.primary,
+          ),
           Container(
             padding: const EdgeInsets.only(left: 0),
-            color: Colors.white,
+            // color: Colors.white,
             child: n.Column([
               /*
               n.ListTile(
@@ -157,10 +157,7 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('my_live'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => LiveRoomListPage(),
@@ -169,7 +166,10 @@ class MinePage extends StatelessWidget {
                   );
                 },
               ),
-              n.Padding(left: 40, child: const Divider()),
+              n.Padding(left: 40, child: HorizontalLine(
+            height: 1.0,
+            color: Theme.of(context).colorScheme.primary,
+          )),
               */
               n.ListTile(
                 leading: const Icon(
@@ -181,10 +181,7 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('my_favorites'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => UserCollectPage(),
@@ -193,7 +190,12 @@ class MinePage extends StatelessWidget {
                   );
                 },
               ),
-              n.Padding(left: 40, child: const Divider()),
+              n.Padding(
+                  left: 40,
+                  child: HorizontalLine(
+                    height: 1.0,
+                    color: Theme.of(context).colorScheme.primary,
+                  )),
               n.ListTile(
                 leading: const Icon(
                   Icons.devices,
@@ -204,10 +206,7 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('device_list'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => UserDevicePage(),
@@ -217,7 +216,10 @@ class MinePage extends StatelessWidget {
                 },
               ),
               /*
-              n.Padding(left: 40, child: const Divider()),
+              n.Padding(left: 40, child: HorizontalLine(
+            height: 1.0,
+            color: Theme.of(context).colorScheme.primary,
+          )),
               n.ListTile(
                 leading: const Icon(
                   Icons.restore_page,
@@ -228,14 +230,16 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('storage_space_data'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {},
               ),
               */
-              n.Padding(left: 40, child: const Divider()),
+              n.Padding(
+                  left: 40,
+                  child: HorizontalLine(
+                    height: 1.0,
+                    color: Theme.of(context).colorScheme.primary,
+                  )),
               n.ListTile(
                 leading: const Icon(
                   Icons.speaker_notes_off,
@@ -246,10 +250,7 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('blacklist'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => DenylistPage(),
@@ -258,7 +259,12 @@ class MinePage extends StatelessWidget {
                   );
                 },
               ),
-              n.Padding(left: 40, child: const Divider()),
+              n.Padding(
+                  left: 40,
+                  child: HorizontalLine(
+                    height: 1.0,
+                    color: Theme.of(context).colorScheme.primary,
+                  )),
               n.ListTile(
                 leading: const Icon(
                   Icons.feedback_outlined,
@@ -271,10 +277,7 @@ class MinePage extends StatelessWidget {
                     Text('feedback'.tr),
                   ]),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => FeedbackPage(),
@@ -290,16 +293,16 @@ class MinePage extends StatelessWidget {
               //     size: 22,
               //   ),
               //   title: Text('tell_friend'.tr),
-              //   trailing: Icon(
-              //     Icons.navigate_next,
-              //     color: AppColors.MainTextColor.withOpacity(0.5),
-              //   ),
+              //   trailing: navigateNextIcon,
               //   onTap: () {},
               // ),
               // n.Padding(
               //   child: const Divider(height: 8),
               // ),
-              const HorizontalLine(height: 8),
+              HorizontalLine(
+                height: 8,
+                color: Theme.of(context).colorScheme.primary,
+              ),
               n.ListTile(
                 leading: const Icon(
                   Icons.settings,
@@ -310,10 +313,7 @@ class MinePage extends StatelessWidget {
                   transform: Matrix4.translationValues(-10, 0.0, 0.0),
                   child: Text('setting'.tr),
                 ),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
+                trailing: navigateNextIcon,
                 onTap: () {
                   Get.to(
                     () => const SettingPage(),
@@ -322,7 +322,10 @@ class MinePage extends StatelessWidget {
                   );
                 },
               ),
-              const HorizontalLine(height: 8),
+              HorizontalLine(
+                height: 8,
+                color: Theme.of(context).colorScheme.primary,
+              ),
             ]),
           ),
         ]),
diff --git a/lib/page/mine/select_region/select_region_logic.dart b/lib/page/mine/select_region/select_region_logic.dart
new file mode 100644
index 0000000..39a0268
--- /dev/null
+++ b/lib/page/mine/select_region/select_region_logic.dart
@@ -0,0 +1,143 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/widgets.dart';
+import 'package:get/get.dart';
+
+import 'package:imboy/component/helper/func.dart';
+import 'package:imboy/config/const.dart';
+
+import 'select_region_view.dart';
+
+class SelectRegionLogic extends GetxController {
+  // 用户名控制器
+
+  RxBool valueChanged = false.obs;
+
+  List regionList = [];
+
+  RxString selectedVal = ''.obs;
+
+  RxMap regionSelected = {}.obs;
+
+  void valueOnChange(bool isChange) {
+    // 必须使用 .value 修饰具体的值
+    valueChanged.value = isChange;
+  }
+
+  /// 选中title
+  void regionSelectedTitle(String title) {
+    regionSelected.clear();
+    regionSelected[title.trim()] = {
+      'selected': true,
+      'trailing': const Text(
+        '√',
+        style: TextStyle(
+          fontSize: 20,
+          color: Colors.green,
+        ),
+      ),
+    };
+  }
+
+  /// context 上下文
+  /// parent 地区父节点数据
+  /// model 当前地区节点数据，如果是叶子节点，类型为String；如果非叶子节点类型为Map
+  /// callback 有里面有业务逻辑处理
+  /// outCallback 递归调用的时候传递最外层的callback
+  Widget getListItem({
+    required BuildContext context,
+    required String parent,
+    required dynamic model,
+    required Future<bool> Function(String, String) callback,
+    required Future<bool> Function(String) outCallback,
+    required EdgeInsetsGeometry margin,
+  }) {
+    String title = "";
+    List children = [];
+    iPrint(
+        "region_item getListItem ${model.runtimeType}, $parent : ${model.toString()}");
+    if (model is String) {
+      title = model;
+    } else if (model is Map) {
+      title = model["title"] ?? "";
+      children = model["children"] ?? [];
+    }
+    bool haveChildren = children.isNotEmpty;
+    title = title.trim();
+
+    return Obx(
+      () => Container(
+        height: 52,
+        // ignore: sort_child_properties_last
+        child: ListTile(
+          title: Text(
+            title,
+            style: TextStyle(
+              fontSize: regionSelected[title] != null &&
+                      regionSelected[title]["selected"] == true
+                  ? 20
+                  : 16,
+              color: Theme.of(context).colorScheme.onPrimary,
+            ),
+          ),
+          selected: regionSelected[title] != null &&
+              regionSelected[title]["selected"] == true,
+          // selectedColor: AppColors.primaryElement,
+          trailing: haveChildren
+              ? navigateNextIcon
+              : (regionSelected[title] != null &&
+                      regionSelected[title]["selected"] == true
+                  ? regionSelected[title]["trailing"]
+                  : null),
+          onTap: () {
+            iPrint("region_item_onTap 1s $selectedVal, p $parent");
+            List<String> items = parent.split(' ');
+            // String lastTitle = items.last;
+            items.add(title);
+            items = items.toSet().toList();
+            selectedVal.value = items.join(' ');
+            iPrint(
+                "region_item_onTap 2s $selectedVal, p $parent, $haveChildren: ${children.toString()}");
+            if (haveChildren) {
+              parent = selectedVal.value;
+              Navigator.push(
+                context,
+                CupertinoPageRoute(
+                  // “右滑返回上一页”功能
+                  builder: (_) => SelectRegionPage(
+                    parent: parent,
+                    children: children,
+                    callback: callback,
+                    outCallback: outCallback,
+                  ),
+                ),
+              );
+            } else {
+              if (parent == selectedVal.value) {
+                valueOnChange(false);
+              } else {
+                // getListItem/4 第4个参数，有里面有业务逻辑处理
+                callback(parent, title);
+                regionSelectedTitle(title);
+                valueOnChange(true);
+              }
+            }
+          },
+        ),
+        // padding: const EdgeInsets.all(0),
+        margin: margin,
+        // 下边框
+        decoration: BoxDecoration(
+          border: Border(
+            bottom: BorderSide(
+              width: 1,
+              color: Get.isDarkMode
+                  ? const Color.fromRGBO(68, 68, 68, 1.0)
+                  : const Color.fromRGBO(200, 200, 200, 1.0),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/page/mine/select_region/select_region_state.dart b/lib/page/mine/select_region/select_region_state.dart
new file mode 100644
index 0000000..0aa7f7d
--- /dev/null
+++ b/lib/page/mine/select_region/select_region_state.dart
@@ -0,0 +1,5 @@
+class SelectRegionState {
+  SelectRegionState() {
+    ///Initialize variables
+  }
+}
diff --git a/lib/page/mine/select_region/select_region_view.dart b/lib/page/mine/select_region/select_region_view.dart
new file mode 100644
index 0000000..a671b50
--- /dev/null
+++ b/lib/page/mine/select_region/select_region_view.dart
@@ -0,0 +1,136 @@
+import 'package:flutter/material.dart';
+import 'package:get/get.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/component/ui/common_bar.dart';
+
+import 'select_region_logic.dart';
+
+// ignore: must_be_immutable
+class SelectRegionPage extends StatelessWidget {
+  String parent;
+  List children;
+
+  final Future<bool> Function(String, String) callback;
+  final Future<bool> Function(String) outCallback;
+
+  SelectRegionPage({
+    super.key,
+    required this.parent,
+    required this.children,
+    required this.callback,
+    required this.outCallback,
+  });
+
+  final logic = Get.put(SelectRegionLogic(), tag: "SelectRegionPage");
+
+  // SelectRegionLogic logic = Get.find();
+
+  @override
+  Widget build(BuildContext context) {
+    Future.delayed(const Duration(milliseconds: 100)).then((e) {
+      logic.valueOnChange(false);
+    });
+    return Scaffold(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
+        titleWidget: n.Row([
+          Expanded(
+            child: Text(
+              'set_region'.tr,
+              textAlign: TextAlign.center,
+              style: const TextStyle(
+                fontSize: 16.0,
+                fontWeight: FontWeight.bold,
+              ),
+            ),
+            // 中间用Expanded控件
+          ),
+          Obx(
+            () => ElevatedButton(
+              onPressed: () async {
+                var nav = Navigator.of(context);
+                bool res = await outCallback(logic.selectedVal.value);
+                // iPrint("logic.selectedVal.value ${logic.selectedVal.value}");
+                if (res) {
+                  int t = logic.selectedVal.value.split(" ").length;
+                  // iPrint("logic.selectedVal.value $t");
+                  for (var i = 0; i < t; i++) {
+                    nav.pop();
+                  }
+                }
+              },
+              // ignore: sort_child_properties_last
+              child: n.Padding(
+                  left: 10,
+                  right: 10,
+                  child: Text(
+                    'button_accomplish'.tr,
+                    textAlign: TextAlign.center,
+                  )),
+              style: logic.valueChanged.isTrue
+                  ? ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green,
+                      ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white,
+                      ),
+                      minimumSize:
+                          MaterialStateProperty.all(const Size(60, 40)),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
+                    )
+                  : ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green.withOpacity(0.6),
+                      ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white.withOpacity(0.6),
+                      ),
+                      minimumSize:
+                          MaterialStateProperty.all(const Size(60, 40)),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
+                    ),
+            ),
+          ),
+        ]),
+      ),
+      body: n.Column([
+        Container(
+          alignment: Alignment.centerLeft,
+          padding: const EdgeInsets.only(left: 34.0),
+          width: Get.width,
+          height: 40.0,
+          child: Obx(() => Text(
+                logic.selectedVal.value.isEmpty
+                    ? 'all'.tr
+                    : logic.selectedVal.value,
+                style: const TextStyle(fontSize: 12),
+              )),
+        ),
+        Expanded(
+          child: ListView.builder(
+            itemBuilder: (BuildContext context, int index) {
+              return logic.getListItem(
+                context: context,
+                parent: parent,
+                model: children[index],
+                callback: (a, b) async {
+                  return true;
+                },
+                outCallback: outCallback,
+                margin: const EdgeInsets.only(left: 16, right: 16),
+              );
+            },
+            itemCount: children.length,
+          ),
+        ),
+      ])
+        // ..mainAxisSize = MainAxisSize.min
+        ..useParent((v) => v..bg = Theme.of(context).colorScheme.background),
+    );
+  }
+}
diff --git a/lib/page/mine/setting/friends_permissions_view.dart b/lib/page/mine/setting/friends_permissions_view.dart
index ef7f3c8..0973440 100644
--- a/lib/page/mine/setting/friends_permissions_view.dart
+++ b/lib/page/mine/setting/friends_permissions_view.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/mine/setting/setting_logic.dart';
 import 'package:niku/namespace.dart' as n;
 
@@ -23,8 +23,9 @@ class FriendsPermissionsPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-        backgroundColor: AppColors.ChatBg,
-        appBar: PageAppBar(
+        backgroundColor: Theme.of(context).colorScheme.background,
+        appBar: NavAppBar(
+          automaticallyImplyLeading: true,
           title: 'friend_permissions'.tr,
         ),
         body: SingleChildScrollView(child: n.Column(const [])));
diff --git a/lib/page/mine/setting/setting_binding.dart b/lib/page/mine/setting/setting_binding.dart
index 0b1e605..99735ea 100644
--- a/lib/page/mine/setting/setting_binding.dart
+++ b/lib/page/mine/setting/setting_binding.dart
@@ -4,7 +4,7 @@ import 'setting_logic.dart';
 
 class SettingBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => SettingLogic()),
       ];
 }
diff --git a/lib/page/mine/setting/setting_logic.dart b/lib/page/mine/setting/setting_logic.dart
index 5d95cd6..e5dfba8 100644
--- a/lib/page/mine/setting/setting_logic.dart
+++ b/lib/page/mine/setting/setting_logic.dart
@@ -1,3 +1,18 @@
 import 'package:get/get.dart';
 
-class SettingLogic extends GetxController {}
+import 'package:imboy/config/const.dart';
+import 'package:imboy/service/storage.dart';
+
+class SettingLogic extends GetxController {
+  String themeTypeTips() {
+    int themeType = StorageService.to.getInt(Keys.themeType) ?? 0;
+    if (themeType == 2) {
+      return 'follow_system'.tr;
+    } else if (themeType == 1) {
+      return 'on'.tr;
+    } else if (themeType == 0) {
+      return 'off'.tr;
+    }
+    return '';
+  }
+}
diff --git a/lib/page/mine/setting/setting_view.dart b/lib/page/mine/setting/setting_view.dart
index 1a6c09f..554a014 100644
--- a/lib/page/mine/setting/setting_view.dart
+++ b/lib/page/mine/setting/setting_view.dart
@@ -2,16 +2,17 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/ui/line.dart';
+import 'package:imboy/page/mine/dark_model/dark_model_view.dart';
 import 'package:imboy/page/mine/language/language_view.dart';
 import 'package:imboy/page/mine/storage_space/storage_space_view.dart';
 import 'package:imboy/page/single/upgrade.dart';
 import 'package:imboy/store/provider/app_version_provider.dart';
-import 'package:niku/namespace.dart' as n;
-
 import 'package:imboy/component/ui/button.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/passport/passport_view.dart';
 import 'package:imboy/page/single/markdown.dart';
@@ -34,220 +35,244 @@ class _SettingPageState extends State<SettingPage> {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'setting'.tr,
       ),
-      // color: appBarColor,
       body: SingleChildScrollView(
         child: n.Column([
-          Container(
-            color: Colors.white,
-            child: n.Column([
-              n.ListTile(
-                title: Text('account_security'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  // Get.to(
-                  //       () => MarkdownPage(
-                  //     title: 'update_log'.tr,
-                  //     url:
-                  //     "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
-                  //   ),
-                  //   transition: Transition.rightToLeft,
-                  //   popGesture: true, // 右滑，返回上一页
-                  // );
-                },
-              ),
-              n.Padding(left: 18, child: const Divider()),
-              n.ListTile(
-                title: Text('language_setting'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  Get.to(
-                    () => LanguagePage(),
-                    transition: Transition.rightToLeft,
-                    popGesture: true, // 右滑，返回上一页
-                  );
-                },
-              ),
-              const HorizontalLine(height: 10),
-              n.ListTile(
-                title: Text('message_notification'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  // Get.to(
-                  //       () => MarkdownPage(
-                  //     title: 'update_log'.tr,
-                  //     url:
-                  //     "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
-                  //   ),
-                  //   transition: Transition.rightToLeft,
-                  //   popGesture: true, // 右滑，返回上一页
-                  // );
-                },
-              ),
-              n.Padding(left: 18, child: const Divider()),
-              n.ListTile(
-                title: Text('storage_space'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  Get.to(
-                    () => StorageSpacePage(),
-                    transition: Transition.rightToLeft,
-                    popGesture: true, // 右滑，返回上一页
-                  );
-                },
-              ),
-              // n.Padding(left: 18, child: const Divider()),
-              // n.ListTile(
-              //   title: Text('friend_permissions'.tr),
-              //   trailing: Icon(
-              //     Icons.navigate_next,
-              //     color: AppColors.MainTextColor.withOpacity(0.5),
-              //   ),
-              //   onTap: () {
-              //     Get.to(
-              //       () => FriendsPermissionsPage(),
-              //       transition: Transition.rightToLeft,
-              //       popGesture: true, // 右滑，返回上一页
-              //     );
-              //   },
-              // ),
-              const HorizontalLine(height: 10),
-              n.ListTile(
-                title: Text('update_log'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  Get.to(
-                    () => MarkdownPage(
-                      title: 'update_log'.tr,
-                      url:
-                          "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
-                    ),
-                    transition: Transition.rightToLeft,
-                    popGesture: true, // 右滑，返回上一页
-                  );
-                },
-              ),
-              n.Padding(left: 18, child: const Divider()),
-              n.ListTile(
-                title: Text('help_document'.tr),
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  Get.to(
-                    () => MarkdownPage(
-                      title: 'help_document'.tr,
-                      url:
-                          "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/help_document.md",
-                    ),
-                    transition: Transition.rightToLeft,
-                    popGesture: true, // 右滑，返回上一页
-                  );
-                },
-              ),
-              n.Padding(left: 18, child: const Divider()),
-              n.ListTile(
-                title: n.Row([
-                  Text('about_app'.tr),
-                  Text("${'version'.tr} $appVsn"),
-                ])
-                  // 两端对齐
-                  ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
-                trailing: Icon(
-                  Icons.navigate_next,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                ),
-                onTap: () {
-                  final rightDMActions = [
-                    n.Padding(
-                      right: 10,
-                      top: 10,
-                      bottom: 10,
-                      child: ElevatedButton(
-                        onPressed: () async {
-                          final AppVersionProvider p = AppVersionProvider();
-                          final navigator = Navigator.of(context);
-                          final Map<String, dynamic> info = await p.check(
-                            appVsn,
-                          );
-                          final String downLoadUrl = info['download_url'] ?? '';
-                          bool updatable = info['updatable'] ?? false;
-                          updatable = downLoadUrl.isEmpty ? false : updatable;
-                          if (updatable) {
-                            await navigator.push(
-                              CupertinoPageRoute(
-                                // “右滑返回上一页”功能
-                                builder: (_) => UpgradePage(
-                                  version: info['vsn'],
-                                  downLoadUrl: downLoadUrl,
-                                  message: info['description'] ?? '',
-                                  isForce: 1 == (info['force_update'] ?? 2)
-                                      ? true
-                                      : false,
-                                ),
+          n.Column([
+            n.ListTile(
+              title: Text('account_security'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                // Get.to(
+                //       () => MarkdownPage(
+                //     title: 'update_log'.tr,
+                //     url:
+                //     "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
+                //   ),
+                //   transition: Transition.rightToLeft,
+                //   popGesture: true, // 右滑，返回上一页
+                // );
+              },
+            ),
+            n.Padding(
+                left: 18,
+                child: HorizontalLine(
+                  height: Get.isDarkMode ? 0.5 : 1.0,
+                  color: Theme.of(context).colorScheme.primary,
+                )),
+            n.ListTile(
+              title: Text('language_setting'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                Get.to(
+                  () => LanguagePage(),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+            n.Padding(
+                left: 18,
+                child: HorizontalLine(
+                  height: Get.isDarkMode ? 0.5 : 1.0,
+                  color: Theme.of(context).colorScheme.primary,
+                )),
+            n.ListTile(
+              title: n.Row([
+                Text('dark_model'.tr),
+                Text(logic.themeTypeTips()),
+              ])
+                // 两端对齐
+                ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
+              trailing: navigateNextIcon,
+              onTap: () {
+                Get.to(
+                  () => DarkModelPage(),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+            HorizontalLine(
+              height: 10,
+              color: Theme.of(context).colorScheme.primary,
+            ),
+            n.ListTile(
+              title: Text('message_notification'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                // Get.to(
+                //       () => MarkdownPage(
+                //     title: 'update_log'.tr,
+                //     url:
+                //     "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
+                //   ),
+                //   transition: Transition.rightToLeft,
+                //   popGesture: true, // 右滑，返回上一页
+                // );
+              },
+            ),
+            n.Padding(
+                left: 18,
+                child: HorizontalLine(
+                  height: Get.isDarkMode ? 0.5 : 1.0,
+                  color: Theme.of(context).colorScheme.primary,
+                )),
+            n.ListTile(
+              title: Text('storage_space'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                Get.to(
+                  () => StorageSpacePage(),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+            // n.Padding(left: 18, child: HorizontalLine(
+            //         height: Get.isDarkMode ? 0.5 : 1.0,
+            //         color: Theme.of(context).colorScheme.primary,
+            //       )),
+            // n.ListTile(
+            //   title: Text('friend_permissions'.tr),
+            //   trailing: navigateNextIcon,
+            //   onTap: () {
+            //     Get.to(
+            //       () => FriendsPermissionsPage(),
+            //       transition: Transition.rightToLeft,
+            //       popGesture: true, // 右滑，返回上一页
+            //     );
+            //   },
+            // ),
+            HorizontalLine(
+              height: 10,
+              color: Theme.of(context).colorScheme.primary,
+            ),
+            n.ListTile(
+              title: Text('update_log'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                Get.to(
+                  () => MarkdownPage(
+                    title: 'update_log'.tr,
+                    url:
+                        "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/changelog.md",
+                  ),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+            n.Padding(
+                left: 18,
+                child: HorizontalLine(
+                  height: Get.isDarkMode ? 0.5 : 1.0,
+                  color: Theme.of(context).colorScheme.primary,
+                )),
+            n.ListTile(
+              title: Text('help_document'.tr),
+              trailing: navigateNextIcon,
+              onTap: () {
+                Get.to(
+                  () => MarkdownPage(
+                    title: 'help_document'.tr,
+                    url:
+                        "https://gitee.com/imboy-pub/imboy-flutter/raw/main/doc/help_document.md",
+                  ),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+            n.Padding(
+                left: 18,
+                child: HorizontalLine(
+                  height: Get.isDarkMode ? 0.5 : 1.0,
+                  color: Theme.of(context).colorScheme.primary,
+                )),
+            n.ListTile(
+              title: n.Row([
+                Text('about_app'.tr),
+                Text("${'version'.tr} $appVsn"),
+              ])
+                // 两端对齐
+                ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
+              trailing: navigateNextIcon,
+              onTap: () {
+                final rightDMActions = [
+                  n.Padding(
+                    right: 10,
+                    top: 10,
+                    bottom: 10,
+                    child: ElevatedButton(
+                      onPressed: () async {
+                        final AppVersionProvider p = AppVersionProvider();
+                        final navigator = Navigator.of(context);
+                        final Map<String, dynamic> info = await p.check(
+                          appVsn,
+                        );
+                        final String downLoadUrl = info['download_url'] ?? '';
+                        bool updatable = info['updatable'] ?? false;
+                        updatable = downLoadUrl.isEmpty ? false : updatable;
+                        if (updatable) {
+                          await navigator.push(
+                            CupertinoPageRoute(
+                              // “右滑返回上一页”功能
+                              builder: (_) => UpgradePage(
+                                version: info['vsn'],
+                                downLoadUrl: downLoadUrl,
+                                message: info['description'] ?? '',
+                                isForce: 1 == (info['force_update'] ?? 2)
+                                    ? true
+                                    : false,
                               ),
-                            );
-                          } else {
-                            EasyLoading.showInfo('now_new_version'.tr);
-                          }
-                        },
-                        // ignore: sort_child_properties_last
-                        child: n.Padding(
-                            left: 10,
-                            right: 10,
-                            child: Text(
-                              'check_for_updates'.tr,
-                              textAlign: TextAlign.center,
-                            )),
-                        style: ButtonStyle(
-                          backgroundColor: MaterialStateProperty.all<Color>(
-                            AppColors.primaryElement,
-                          ),
-                          foregroundColor: MaterialStateProperty.all<Color>(
-                            Colors.white,
-                          ),
-                          minimumSize: MaterialStateProperty.all(
-                            const Size(80, 32),
-                          ),
-                          padding: MaterialStateProperty.all(
-                            EdgeInsets.zero,
-                          ),
+                            ),
+                          );
+                        } else {
+                          EasyLoading.showInfo('now_new_version'.tr);
+                        }
+                      },
+                      // ignore: sort_child_properties_last
+                      child: n.Padding(
+                          left: 10,
+                          right: 10,
+                          child: Text(
+                            'check_for_updates'.tr,
+                            textAlign: TextAlign.center,
+                          )),
+                      style: ButtonStyle(
+                        backgroundColor: MaterialStateProperty.all<Color>(
+                          Theme.of(context).colorScheme.background,
+                        ),
+                        foregroundColor: MaterialStateProperty.all<Color>(
+                          Theme.of(context).colorScheme.onBackground,
+                        ),
+                        minimumSize: MaterialStateProperty.all(
+                          const Size(80, 32),
+                        ),
+                        padding: MaterialStateProperty.all(
+                          EdgeInsets.zero,
                         ),
                       ),
-                    )
-                  ];
-                  Get.to(
-                    () => MarkdownPage(
-                      title: "${'about'.tr} $appName",
-                      rightDMActions: rightDMActions,
-                      url:
-                          "https://gitee.com/imboy-pub/imboy-flutter/raw/main/README.md",
                     ),
-                    transition: Transition.rightToLeft,
-                    popGesture: true, // 右滑，返回上一页
-                  );
-                },
-              ),
-            ]),
-          ),
+                  )
+                ];
+                Get.to(
+                  () => MarkdownPage(
+                    title: "${'about'.tr} $appName",
+                    rightDMActions: rightDMActions,
+                    url:
+                        "https://gitee.com/imboy-pub/imboy-flutter/raw/main/README.md",
+                  ),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+          ]),
           /*
           ButtonRow(
             margin: const EdgeInsets.only(
@@ -263,11 +288,14 @@ class _SettingPageState extends State<SettingPage> {
             onPressed: () async {},
           ),
           */
-          const HorizontalLine(height: 10),
+          HorizontalLine(
+            height: 10,
+            color: Theme.of(context).colorScheme.primary,
+          ),
           ButtonRow(
             text: 'log_out'.tr,
-            style: const TextStyle(
-              color: AppColors.ButtonTextColor,
+            style: TextStyle(
+              color: Theme.of(context).colorScheme.onPrimary,
               fontWeight: FontWeight.w600,
               fontSize: 14,
             ),
@@ -280,6 +308,10 @@ class _SettingPageState extends State<SettingPage> {
               }
             },
           ),
+          // HorizontalLine(
+          //   height: 20,
+          //   color: Theme.of(context).colorScheme.primary,
+          // ),
         ]),
       ),
     );
diff --git a/lib/page/mine/storage_space/storage_space_state.dart b/lib/page/mine/storage_space/storage_space_state.dart
index 750b110..bb94b6b 100644
--- a/lib/page/mine/storage_space/storage_space_state.dart
+++ b/lib/page/mine/storage_space/storage_space_state.dart
@@ -2,8 +2,10 @@ import 'package:get/get.dart';
 
 class StorageSpaceState {
   RxInt totalDiskSpace = 0.obs;
+
   // 可用空间
   RxInt freeDiskSpace = 0.obs;
+
   // 已用空间
   RxInt usedDiskSpace = 0.obs;
 
diff --git a/lib/page/mine/storage_space/storage_space_view.dart b/lib/page/mine/storage_space/storage_space_view.dart
index d483a95..7accf9c 100644
--- a/lib/page/mine/storage_space/storage_space_view.dart
+++ b/lib/page/mine/storage_space/storage_space_view.dart
@@ -6,7 +6,6 @@ import 'package:niku/namespace.dart' as n;
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
 
 import 'storage_space_logic.dart';
 
@@ -28,7 +27,8 @@ class StorageSpacePage extends StatelessWidget {
     initData();
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'storage_space'.tr,
       ),
       body: SingleChildScrollView(
@@ -72,7 +72,7 @@ class StorageSpacePage extends StatelessWidget {
                               : 1,
                           child: const LinearProgressIndicator(
                             value: 1,
-                            backgroundColor: Color(0xFF7E7F88),
+                            backgroundColor: Colors.grey,
                             valueColor:
                                 AlwaysStoppedAnimation<Color>(Colors.black12),
                           ),
@@ -117,7 +117,7 @@ class StorageSpacePage extends StatelessWidget {
             n.Row([
               const Icon(
                 Icons.square,
-                color: Colors.black12,
+                color: Colors.grey,
                 size: 12,
               ),
               const SizedBox(width: 4),
@@ -165,7 +165,7 @@ class StorageSpacePage extends StatelessWidget {
               ClipRRect(
                 borderRadius: const BorderRadius.all(Radius.circular(8)),
                 child: Container(
-                  color: AppColors.primaryBackground,
+                  color: Theme.of(context).colorScheme.background,
                   child: n.ListTile(
                     title: n.Row([
                       Text(appName + 'cache'.tr),
@@ -196,8 +196,8 @@ class StorageSpacePage extends StatelessWidget {
                           // 'go_clean'.tr,
                           'clean'.tr,
                           textAlign: TextAlign.center,
-                          style: const TextStyle(
-                            color: AppColors.primaryElement,
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
                             fontWeight: FontWeight.normal,
                           ),
                         ),
@@ -219,8 +219,9 @@ class StorageSpacePage extends StatelessWidget {
                         ..mainAxisAlignment = MainAxisAlignment.start,
                       Text(
                         'cache_tips'.tr,
-                        style:
-                            const TextStyle(color: AppColors.thirdElementText),
+                        style: TextStyle(
+                          color: Theme.of(context).colorScheme.onPrimary,
+                        ),
                       )
                     ])
                       // 内容居左
@@ -298,7 +299,7 @@ class StorageSpacePage extends StatelessWidget {
               ClipRRect(
                 borderRadius: const BorderRadius.all(Radius.circular(8)),
                 child: Container(
-                  color: AppColors.primaryBackground,
+                  color: Theme.of(context).colorScheme.background,
                   child: n.ListTile(
                     title: n.Row([
                       Text('user_data'.tr),
@@ -348,8 +349,9 @@ class StorageSpacePage extends StatelessWidget {
                         ..mainAxisAlignment = MainAxisAlignment.start,
                       Text(
                         'user_data_tips'.tr,
-                        style:
-                            const TextStyle(color: AppColors.thirdElementText),
+                        style: TextStyle(
+                          color: Theme.of(context).colorScheme.onPrimary,
+                        ),
                       )
                     ])
                       // 内容居左
@@ -361,7 +363,7 @@ class StorageSpacePage extends StatelessWidget {
               ClipRRect(
                 borderRadius: const BorderRadius.all(Radius.circular(8)),
                 child: Container(
-                  color: AppColors.primaryBackground,
+                  color: Theme.of(context).colorScheme.background,
                   child: n.ListTile(
                     title: Text('app_size'.tr),
                     subtitle: n.Column([
@@ -380,8 +382,9 @@ class StorageSpacePage extends StatelessWidget {
                         ..mainAxisAlignment = MainAxisAlignment.start,
                       Text(
                         'app_size_tips'.tr,
-                        style:
-                            const TextStyle(color: AppColors.thirdElementText),
+                        style: TextStyle(
+                          color: Theme.of(context).colorScheme.onPrimary,
+                        ),
                       )
                     ])
                       // 内容居左
diff --git a/lib/page/mine/user_collect/user_collect_detail_view.dart b/lib/page/mine/user_collect/user_collect_detail_view.dart
index fc3a88e..2f5293a 100644
--- a/lib/page/mine/user_collect/user_collect_detail_view.dart
+++ b/lib/page/mine/user_collect/user_collect_detail_view.dart
@@ -5,7 +5,7 @@ import 'package:get/get.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/line.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/chat/send_to/send_to_view.dart';
 import 'package:imboy/page/personal_info/update/update_view.dart';
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_view.dart';
@@ -38,8 +38,8 @@ class UserCollectDetailPage extends StatelessWidget {
           child: Text(
             'forward_to_friend'.tr,
             textAlign: TextAlign.center,
-            style: const TextStyle(
-              color: AppColors.ItemOnColor,
+            style: TextStyle(
+              color: Theme.of(txt).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.normal,
             ),
@@ -47,24 +47,39 @@ class UserCollectDetailPage extends StatelessWidget {
           onPressed: () async {
             Get.closeAllBottomSheets();
             obj.info['id'] = Xid().toString();
+
             // 转发消息
-            Get.bottomSheet(
-              n.Padding(
-                top: 24,
-                child: SendToPage(
-                    msg: MessageModel.fromJson(obj.info).toTypeMessage(),
-                    callback: () {
-                      logic.change(obj.kindId);
-                    }),
-              ),
-              // 是否支持全屏弹出，默认false
-              isScrollControlled: true,
-              // enableDrag: false,
+
+            Get.to(
+              () => SendToPage(
+                  msg: MessageModel.fromJson(obj.info).toTypeMessage(),
+                  callback: () {
+                    logic.change(obj.kindId);
+                  }),
+              transition: Transition.rightToLeft,
+              popGesture: true, // 右滑，返回上一页
             );
+            // Get.bottomSheet(
+            //   n.Padding(
+            //     top: 24,
+            //     child: SendToPage(
+            //         msg: MessageModel.fromJson(obj.info).toTypeMessage(),
+            //         callback: () {
+            //           logic.change(obj.kindId);
+            //         }),
+            //   ),
+            //   // 是否支持全屏弹出，默认false
+            //   isScrollControlled: true,
+            //   // enableDrag: false,
+            // );
           },
         ),
       ),
-      const Divider(),
+      n.Padding(
+        left: 16,
+        right: 16,
+        child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+      ),
       Center(
         child: TextButton(
           onPressed: () {
@@ -91,15 +106,19 @@ class UserCollectDetailPage extends StatelessWidget {
           child: Text(
             'edit_tag'.tr,
             textAlign: TextAlign.center,
-            style: const TextStyle(
-              color: AppColors.ItemOnColor,
+            style: TextStyle(
+              color: Theme.of(txt).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.normal,
             ),
           ),
         ),
       ),
-      const Divider(),
+      n.Padding(
+        left: 16,
+        right: 16,
+        child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+      ),
       Center(
         child: TextButton(
           onPressed: () {
@@ -133,15 +152,19 @@ class UserCollectDetailPage extends StatelessWidget {
           child: Text(
             'set_remark'.tr,
             textAlign: TextAlign.center,
-            style: const TextStyle(
-              color: AppColors.ItemOnColor,
+            style: TextStyle(
+              color: Theme.of(txt).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.normal,
             ),
           ),
         ),
       ),
-      const Divider(),
+      n.Padding(
+        left: 16,
+        right: 16,
+        child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+      ),
       Center(
         child: TextButton(
           onPressed: () async {
@@ -170,13 +193,18 @@ class UserCollectDetailPage extends StatelessWidget {
           child: Text(
             'button_cancel'.tr,
             textAlign: TextAlign.center,
-            style: const TextStyle(
-              color: AppColors.ItemOnColor,
+            style: TextStyle(
+              color: Theme.of(txt).colorScheme.onPrimary,
               fontSize: 16.0,
               fontWeight: FontWeight.normal,
             ),
           ),
         ),
+      ),
+      n.Padding(
+        left: 16,
+        right: 16,
+        child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
       )
     ];
     if (obj.kind == 1) {
@@ -186,8 +214,8 @@ class UserCollectDetailPage extends StatelessWidget {
             child: Text(
               'button_copy'.tr,
               textAlign: TextAlign.center,
-              style: const TextStyle(
-                color: AppColors.ItemOnColor,
+              style: TextStyle(
+                color: Theme.of(txt).colorScheme.onPrimary,
                 fontSize: 16.0,
                 fontWeight: FontWeight.normal,
               ),
@@ -203,7 +231,11 @@ class UserCollectDetailPage extends StatelessWidget {
             },
           ),
         ),
-        const Divider(),
+        n.Padding(
+          left: 16,
+          right: 16,
+          child: HorizontalLine(height: Get.isDarkMode ? 0.5 : 1.0),
+        ),
       ]);
     }
     return n.Wrap(rightItems);
@@ -214,7 +246,8 @@ class UserCollectDetailPage extends StatelessWidget {
     remark.value = obj.remark;
 
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'details'.tr,
         rightDMActions: [
           InkWell(
@@ -225,7 +258,9 @@ class UserCollectDetailPage extends StatelessWidget {
                   height: 304 + (obj.kind == 1 ? 64 : 0),
                   child: buildRightItems(context),
                 ),
-                backgroundColor: Colors.white,
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 //改变shape这里即可
                 shape: const RoundedRectangleBorder(
                   borderRadius: BorderRadius.only(
diff --git a/lib/page/mine/user_collect/user_collect_logic.dart b/lib/page/mine/user_collect/user_collect_logic.dart
index 5bc5af0..b8a9d0e 100644
--- a/lib/page/mine/user_collect/user_collect_logic.dart
+++ b/lib/page/mine/user_collect/user_collect_logic.dart
@@ -12,7 +12,7 @@ import 'package:imboy/component/image_gallery/image_gallery.dart';
 import 'package:imboy/component/message/message_audio_builder.dart';
 import 'package:imboy/component/message/message_location_builder.dart';
 import 'package:imboy/component/message/message_visit_card_builder.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/single/video_viewer.dart';
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_logic.dart';
 import 'package:imboy/store/model/contact_model.dart';
@@ -158,7 +158,7 @@ class UserCollectLogic extends GetxController {
             Text(
               formatBytes(obj.info['payload']['size'] ?? ''),
               style: const TextStyle(
-                color: AppColors.MainTextColor,
+                // color: AppColors.MainTextColor,
                 fontSize: 14.0,
               ),
               maxLines: 1,
@@ -167,7 +167,7 @@ class UserCollectLogic extends GetxController {
             Text(
               " ${obj.info['payload']['width']}X${obj.info['payload']['height']}",
               style: const TextStyle(
-                color: AppColors.MainTextColor,
+                // color: AppColors.MainTextColor,
                 fontSize: 14.0,
               ),
               maxLines: 1,
@@ -280,7 +280,7 @@ class UserCollectLogic extends GetxController {
             Text(
               formatBytes(obj.info['payload']['video']['size'] ?? 0),
               style: const TextStyle(
-                color: AppColors.MainTextColor,
+                // color: AppColors.MainTextColor,
                 fontSize: 14.0,
               ),
               maxLines: 1,
@@ -289,7 +289,7 @@ class UserCollectLogic extends GetxController {
             Text(
               " ${obj.info['payload']['video']['width']}X${obj.info['payload']['video']['height']}",
               style: const TextStyle(
-                color: AppColors.MainTextColor,
+                // color: AppColors.MainTextColor,
                 fontSize: 14.0,
               ),
               maxLines: 1,
@@ -333,7 +333,7 @@ class UserCollectLogic extends GetxController {
                     Text(
                       "$mimeType  ${formatBytes(obj.info['payload']['size'] ?? '')}",
                       style: const TextStyle(
-                        color: AppColors.MainTextColor,
+                        // color: AppColors.MainTextColor,
                         fontSize: 14.0,
                       ),
                       maxLines: 1,
@@ -376,7 +376,7 @@ class UserCollectLogic extends GetxController {
                 Text(
                   mimeType,
                   style: const TextStyle(
-                    color: AppColors.MainTextColor,
+                    // color: AppColors.MainTextColor,
                     fontSize: 14.0,
                   ),
                   maxLines: 1,
@@ -414,7 +414,7 @@ class UserCollectLogic extends GetxController {
                       maxLines: 4,
                       overflow: TextOverflow.ellipsis,
                       style: const TextStyle(
-                        color: AppColors.MainTextColor,
+                        // color: AppColors.MainTextColor,
                         fontSize: 14.0,
                       ),
                     ),
@@ -450,24 +450,22 @@ class UserCollectLogic extends GetxController {
             ]);
     } else if (obj.kind == 7) {
       // row > expand > column > text 换行有效
-      body = n.Row(
-        [
-          Expanded(
-              child: VisitCardMessageBuilder(
-            // width: Get.width - 20,
-            // height: Get.height - 160,
-            user: types.User(
-              id: UserRepoLocal.to.currentUid,
-              firstName: UserRepoLocal.to.current.nickname,
-              imageUrl: UserRepoLocal.to.current.avatar,
-            ),
-            message: MessageModel.fromJson(obj.info).toTypeMessage()
-                as types.CustomMessage,
-          ))
-        ],
+      body = n.Row([
+        Expanded(
+            child: VisitCardMessageBuilder(
+          // width: Get.width - 20,
+          // height: Get.height - 160,
+          user: types.User(
+            id: UserRepoLocal.to.currentUid,
+            firstName: UserRepoLocal.to.current.nickname,
+            imageUrl: UserRepoLocal.to.current.avatar,
+          ),
+          message: MessageModel.fromJson(obj.info).toTypeMessage()
+              as types.CustomMessage,
+        ))
+      ])
         // 内容文本左对齐
-        crossAxisAlignment: CrossAxisAlignment.start,
-      );
+        ..crossAxisAlignment = CrossAxisAlignment.start;
     }
     return scene == 'detail'
         ? SizedBox(
@@ -522,7 +520,7 @@ class UserCollectLogic extends GetxController {
                 return Colors.white.withOpacity(0.75);
               }
               // Use the component's default.
-              return AppColors.ChatBg;
+              return Theme.of(Get.context!).colorScheme.background;
             },
           ),
         ),
@@ -532,19 +530,24 @@ class UserCollectLogic extends GetxController {
             right: 8,
             child: Transform.scale(
               scaleX: -1,
-              child: Icon(
+              child: const Icon(
                 Icons.local_offer,
                 size: 18,
-                color: AppColors.MainTextColor.withOpacity(0.8),
+                // color: AppColors.MainTextColor.withOpacity(0.8),
               ),
             ),
           ),
-          Text(kindTips, style: const TextStyle(color: AppColors.ItemOnColor)),
+          Text(
+            kindTips,
+            // style: TextStyle(
+            //   color: AppColors.ItemOnColor,
+            // ),
+          ),
           const SizedBox(width: 12),
-          Icon(
+          const Icon(
             Icons.close,
             size: 16,
-            color: AppColors.ItemOnColor.withOpacity(0.7),
+            // color: AppColors.ItemOnColor.withOpacity(0.7),
           ),
         ]),
       )
@@ -596,7 +599,7 @@ class UserCollectLogic extends GetxController {
                 return Colors.white.withOpacity(0.75);
               }
               // Use the component's default.
-              return AppColors.ChatBg;
+              return Theme.of(Get.context!).colorScheme.background;
             },
           ),
         ),
@@ -605,19 +608,24 @@ class UserCollectLogic extends GetxController {
             right: 8,
             child: Transform.scale(
               scaleX: -1,
-              child: Icon(
+              child: const Icon(
                 Icons.grid_view,
                 size: 18,
-                color: AppColors.MainTextColor.withOpacity(0.8),
+                // color: AppColors.MainTextColor.withOpacity(0.8),
               ),
             ),
           ),
-          Text(kindTips, style: const TextStyle(color: AppColors.ItemOnColor)),
+          Text(
+            kindTips,
+            // style: const TextStyle(
+            //   color: AppColors.ItemOnColor,
+            // ),
+          ),
           const SizedBox(width: 12),
-          Icon(
+          const Icon(
             Icons.close,
             size: 16,
-            color: AppColors.ItemOnColor.withOpacity(0.7),
+            // color: AppColors.ItemOnColor.withOpacity(0.7),
           ),
         ]),
       )
@@ -788,7 +796,7 @@ class UserCollectLogic extends GetxController {
           right: 2,
           child: Text(
             tag,
-            style: const TextStyle(color: AppColors.MainTextColor),
+            // style: const TextStyle(color: AppColors.MainTextColor),
           ),
         ),
       ));
diff --git a/lib/page/mine/user_collect/user_collect_view.dart b/lib/page/mine/user_collect/user_collect_view.dart
index 5ad21b5..ad38548 100644
--- a/lib/page/mine/user_collect/user_collect_view.dart
+++ b/lib/page/mine/user_collect/user_collect_view.dart
@@ -13,7 +13,7 @@ import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/line.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/user_tag_relation/user_tag_relation_view.dart';
 import 'package:imboy/store/model/message_model.dart';
 import 'package:imboy/store/model/user_collect_model.dart';
@@ -92,10 +92,10 @@ class UserCollectPage extends StatelessWidget {
             [
               Transform.scale(
                 scaleX: -1,
-                child: Icon(
+                child: const Icon(
                   Icons.local_offer,
                   size: 12,
-                  color: AppColors.MainTextColor.withOpacity(0.8),
+                  // color: AppColors.MainTextColor.withOpacity(0.8),
                 ),
               ),
               Text(
@@ -116,6 +116,9 @@ class UserCollectPage extends StatelessWidget {
     types.Message msg = MessageModel.fromJson(model.info).toTypeMessage();
     Get.defaultDialog(
       title: 'send_to'.tr,
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
       radius: 6,
       cancel: TextButton(
         onPressed: () {
@@ -124,6 +127,9 @@ class UserCollectPage extends StatelessWidget {
         child: Text(
           'button_cancel'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(ctx).colorScheme.onPrimary,
+          ),
         ),
       ),
       confirm: TextButton(
@@ -148,6 +154,9 @@ class UserCollectPage extends StatelessWidget {
         child: Text(
           'button_send'.tr,
           textAlign: TextAlign.center,
+          style: TextStyle(
+            color: Theme.of(ctx).colorScheme.onPrimary,
+          ),
         ),
       ),
       content: SizedBox(
@@ -187,8 +196,9 @@ class UserCollectPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         leading: isSelect
             ? InkWell(
                 onTap: () {
@@ -221,263 +231,255 @@ class UserCollectPage extends StatelessWidget {
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.ChatBg,
-          child: Obx(() => n.Column(
-                [
-                  n.Padding(
-                    left: 8,
-                    top: 10,
-                    right: 8,
-                    bottom: 10,
-                    child: searchBar(
-                      context,
-                      leading: state.searchLeading?.value ??
-                          InkWell(
-                            onTap: () {
-                              logic.doSearch(state.kwd);
-                            },
-                            child: const Icon(Icons.search),
-                          ),
-                      trailing: state.searchTrailing?.value,
-                      controller: state.searchController,
-                      searchLabel: 'search'.tr,
-                      hintText: 'search'.tr,
-                      queryTips: 'favorite_group_tags_etc'.tr,
-                      onChanged: ((query) {
-                        state.kwd = query.obs;
-                        debugPrint(
-                            "user_collect_s_onChanged ${query.toString()}");
-                        logic.doSearch(state.kwd);
-                      }),
-                      doSearch: logic.doSearch,
-                    ),
-                  ),
-                  _buildKindList(),
-                  Expanded(
-                    child: SlidableAutoCloseBehavior(
-                        child: state.items.isEmpty
-                            ? NoDataView(text: 'no_data'.tr)
-                            : n.Padding(
-                                top: 16,
-                                left: 10,
-                                right: 10,
-                                child: ListView.builder(
-                                  controller: controller,
-                                  physics:
-                                      const AlwaysScrollableScrollPhysics(),
-                                  itemCount: state.items.length,
-                                  itemBuilder:
-                                      (BuildContext context, int index) {
-                                    UserCollectModel obj = state.items[index];
-                                    return Slidable(
-                                      key: ValueKey(obj.kindId),
-                                      groupTag: '0',
-                                      closeOnScroll: true,
-                                      endActionPane: ActionPane(
-                                        extentRatio: 0.5,
-                                        motion: const StretchMotion(),
-                                        children: [
-                                          SlidableAction(
-                                            key: ValueKey("tag_$index"),
-                                            flex: 1,
-                                            backgroundColor: AppColors.ChatBg,
-                                            // foregroundColor: Colors.white,
-                                            onPressed: (_) async {
-                                              Get.to(
-                                                () => UserTagRelationPage(
-                                                  peerId: obj.kindId,
-                                                  // peerTag: peerTag.value,
-                                                  peerTag: obj.tag,
-                                                  scene: 'collect',
-                                                  title: 'edit_tag'.tr,
-                                                ),
-                                                // () => TagAddPage(peerId:peerId, peerTag:'标签1, 标签1,标签1,标签1,标签1,标签1,标签1,标签1,标签1,标签1,ABCD'),
-                                                transition:
-                                                    Transition.rightToLeft,
-                                                popGesture: true, // 右滑，返回上一页
-                                              )?.then((value) {
-                                                // iPrint(
-                                                //     "UserCollectListPage_TagAddPage_back then $value");
-                                                if (value != null &&
-                                                    value is String) {
-                                                  obj.tag = value.toString();
-                                                  logic.updateItem(obj);
-                                                }
-                                              });
-                                            },
-                                            icon: Icons.local_offer,
-                                            foregroundColor: Colors.green,
-                                            label: 'tags'.tr,
-                                            spacing: 1,
-                                          ),
-                                          SlidableAction(
-                                            key: ValueKey("delete_$index"),
-                                            flex: 1,
-                                            backgroundColor: AppColors.ChatBg,
-                                            // foregroundColor: Colors.white,
-                                            onPressed: (_) async {
-                                              Get.bottomSheet(
-                                                SizedBox(
-                                                  width: Get.width,
-                                                  height: 106,
-                                                  child: n.Wrap([
-                                                    Center(
-                                                      child: TextButton(
-                                                        onPressed: () async {
-                                                          bool res = await logic
-                                                              .remove(obj);
-                                                          debugPrint(
-                                                              "user_collect_remove $res; i $index");
-                                                          if (res) {
-                                                            state.items
-                                                                .removeAt(
-                                                                    index);
-                                                            Get.closeAllBottomSheets();
-                                                            EasyLoading
-                                                                .showSuccess(
-                                                                    'tip_success'
-                                                                        .tr);
-                                                          } else {
-                                                            EasyLoading
-                                                                .showError(
-                                                                    'tip_failed'
-                                                                        .tr);
-                                                          }
-                                                        },
-                                                        child: Text(
-                                                          'sure_delete_data'.tr,
-                                                          textAlign:
-                                                              TextAlign.center,
-                                                          style:
-                                                              const TextStyle(
-                                                            color: Colors.red,
-                                                            fontSize: 16.0,
-                                                            fontWeight:
-                                                                FontWeight
-                                                                    .normal,
-                                                          ),
-                                                        ),
+          color: Theme.of(context).colorScheme.background,
+          child: Obx(
+            () => n.Column([
+              n.Padding(
+                left: 8,
+                top: 10,
+                right: 8,
+                bottom: 10,
+                child: searchBar(
+                  context,
+                  leading: state.searchLeading?.value ??
+                      InkWell(
+                        onTap: () {
+                          logic.doSearch(state.kwd);
+                        },
+                        child: const Icon(Icons.search),
+                      ),
+                  trailing: state.searchTrailing?.value,
+                  controller: state.searchController,
+                  searchLabel: 'search'.tr,
+                  hintText: 'search'.tr,
+                  queryTips: 'favorite_group_tags_etc'.tr,
+                  onChanged: ((query) {
+                    state.kwd = query.obs;
+                    debugPrint("user_collect_s_onChanged ${query.toString()}");
+                    logic.doSearch(state.kwd);
+                  }),
+                  doSearch: logic.doSearch,
+                ),
+              ),
+              _buildKindList(),
+              Expanded(
+                child: SlidableAutoCloseBehavior(
+                    child: state.items.isEmpty
+                        ? NoDataView(text: 'no_data'.tr)
+                        : n.Padding(
+                            top: 16,
+                            left: 10,
+                            right: 10,
+                            child: ListView.builder(
+                              controller: controller,
+                              physics: const AlwaysScrollableScrollPhysics(),
+                              itemCount: state.items.length,
+                              itemBuilder: (BuildContext context, int index) {
+                                UserCollectModel obj = state.items[index];
+                                return Slidable(
+                                  key: ValueKey(obj.kindId),
+                                  groupTag: '0',
+                                  closeOnScroll: true,
+                                  endActionPane: ActionPane(
+                                    extentRatio: 0.5,
+                                    motion: const StretchMotion(),
+                                    children: [
+                                      SlidableAction(
+                                        key: ValueKey("tag_$index"),
+                                        flex: 1,
+                                        backgroundColor: Theme.of(context)
+                                            .colorScheme
+                                            .background,
+                                        // foregroundColor: Colors.white,
+                                        onPressed: (_) async {
+                                          Get.to(
+                                            () => UserTagRelationPage(
+                                              peerId: obj.kindId,
+                                              // peerTag: peerTag.value,
+                                              peerTag: obj.tag,
+                                              scene: 'collect',
+                                              title: 'edit_tag'.tr,
+                                            ),
+                                            // () => TagAddPage(peerId:peerId, peerTag:'标签1, 标签1,标签1,标签1,标签1,标签1,标签1,标签1,标签1,标签1,ABCD'),
+                                            transition: Transition.rightToLeft,
+                                            popGesture: true, // 右滑，返回上一页
+                                          )?.then((value) {
+                                            // iPrint(
+                                            //     "UserCollectListPage_TagAddPage_back then $value");
+                                            if (value != null &&
+                                                value is String) {
+                                              obj.tag = value.toString();
+                                              logic.updateItem(obj);
+                                            }
+                                          });
+                                        },
+                                        icon: Icons.local_offer,
+                                        foregroundColor: Colors.green,
+                                        label: 'tags'.tr,
+                                        spacing: 1,
+                                      ),
+                                      SlidableAction(
+                                        key: ValueKey("delete_$index"),
+                                        flex: 1,
+                                        backgroundColor: Theme.of(context)
+                                            .colorScheme
+                                            .background,
+                                        // foregroundColor: Colors.white,
+                                        onPressed: (_) async {
+                                          Get.bottomSheet(
+                                            SizedBox(
+                                              width: Get.width,
+                                              height: 106,
+                                              child: n.Wrap([
+                                                Center(
+                                                  child: TextButton(
+                                                    onPressed: () async {
+                                                      bool res = await logic
+                                                          .remove(obj);
+                                                      debugPrint(
+                                                          "user_collect_remove $res; i $index");
+                                                      if (res) {
+                                                        state.items
+                                                            .removeAt(index);
+                                                        Get.closeAllBottomSheets();
+                                                        EasyLoading.showSuccess(
+                                                            'tip_success'.tr);
+                                                      } else {
+                                                        EasyLoading.showError(
+                                                            'tip_failed'.tr);
+                                                      }
+                                                    },
+                                                    child: Text(
+                                                      'sure_delete_data'.tr,
+                                                      textAlign:
+                                                          TextAlign.center,
+                                                      style: const TextStyle(
+                                                        color: Colors.red,
+                                                        fontSize: 16.0,
+                                                        fontWeight:
+                                                            FontWeight.normal,
                                                       ),
                                                     ),
-                                                    const HorizontalLine(
-                                                        height: 6),
-                                                    Center(
-                                                      child: TextButton(
-                                                        onPressed: () => Get
-                                                            .closeAllBottomSheets(),
-                                                        child: Text(
-                                                          'button_cancel'.tr,
-                                                          textAlign:
-                                                              TextAlign.center,
-                                                          style:
-                                                              const TextStyle(
-                                                            // color: Colors.white,
-                                                            fontSize: 16.0,
-                                                            fontWeight:
-                                                                FontWeight
-                                                                    .normal,
-                                                          ),
-                                                        ),
-                                                      ),
-                                                    )
-                                                  ]),
-                                                ),
-                                                backgroundColor: Colors.white,
-                                                //改变shape这里即可
-                                                shape:
-                                                    const RoundedRectangleBorder(
-                                                  borderRadius:
-                                                      BorderRadius.only(
-                                                    topLeft:
-                                                        Radius.circular(20.0),
-                                                    topRight:
-                                                        Radius.circular(20.0),
                                                   ),
                                                 ),
-                                              );
-                                            },
-                                            icon: Icons.delete_forever_sharp,
-                                            foregroundColor: Colors.red,
-                                            label: 'button_delete'.tr,
-                                            spacing: 1,
-                                          ),
-                                        ],
-                                      ),
-                                      child: Container(
-                                        margin: const EdgeInsets.fromLTRB(
-                                            0, 0, 0, 16),
-                                        padding: const EdgeInsets.all(12),
-                                        decoration: BoxDecoration(
-                                          color: Colors.white,
-                                          borderRadius:
-                                              BorderRadius.circular(8),
-                                        ),
-                                        child: InkWell(
-                                          onTap: () async {
-                                            if (isSelect) {
-                                              // 转发消息
-                                              sendToDialog(context, obj);
-                                            } else {
-                                              // 收藏详情
-                                              Get.to(
-                                                () => UserCollectDetailPage(
-                                                  obj: obj,
-                                                  pageIndex: index,
-                                                ),
-                                                transition:
-                                                    Transition.rightToLeft,
-                                                popGesture: true, // 右滑，返回上一页
-                                              );
-                                            }
-                                          },
-                                          child: n.Column([
-                                            logic.buildItemBody(obj, 'page'),
-                                            n.Row(const [SizedBox(height: 16)]),
-                                            n.Row([
-                                              Text(
-                                                obj.source,
-                                                maxLines: 6,
-                                                overflow: TextOverflow.ellipsis,
-                                                style: const TextStyle(
-                                                  color:
-                                                      AppColors.MainTextColor,
-                                                  fontSize: 14.0,
-                                                ),
-                                              ),
-                                              const Expanded(child: SizedBox()),
-                                              Text(
-                                                state.kind == state.recentUse &&
-                                                        obj.updatedAt > 0
-                                                    ? DateTimeHelper
-                                                        .lastTimeFmt(
-                                                            obj.updatedAtLocal)
-                                                    : DateTimeHelper
-                                                        .lastTimeFmt(
-                                                            obj.createdAtLocal),
-                                                maxLines: 1,
-                                                overflow: TextOverflow.ellipsis,
-                                                style: const TextStyle(
-                                                  color:
-                                                      AppColors.MainTextColor,
-                                                  fontSize: 14.0,
-                                                ),
+                                                const HorizontalLine(height: 6),
+                                                Center(
+                                                  child: TextButton(
+                                                    onPressed: () => Get
+                                                        .closeAllBottomSheets(),
+                                                    child: Text(
+                                                      'button_cancel'.tr,
+                                                      textAlign:
+                                                          TextAlign.center,
+                                                      style: const TextStyle(
+                                                        // color: Colors.white,
+                                                        fontSize: 16.0,
+                                                        fontWeight:
+                                                            FontWeight.normal,
+                                                      ),
+                                                    ),
+                                                  ),
+                                                )
+                                              ]),
+                                            ),
+                                            backgroundColor: Get.isDarkMode
+                                                ? const Color.fromRGBO(
+                                                    80, 80, 80, 1)
+                                                : const Color.fromRGBO(
+                                                    240, 240, 240, 1),
+                                            //改变shape这里即可
+                                            shape: const RoundedRectangleBorder(
+                                              borderRadius: BorderRadius.only(
+                                                topLeft: Radius.circular(20.0),
+                                                topRight: Radius.circular(20.0),
                                               ),
-                                            ])
-                                              ..mainAxisAlignment =
-                                                  MainAxisAlignment
-                                                      .spaceBetween,
-                                            buildItemTag(obj.tag),
-                                          ]),
-                                        ),
+                                            ),
+                                          );
+                                        },
+                                        icon: Icons.delete_forever_sharp,
+                                        foregroundColor: Colors.red,
+                                        label: 'button_delete'.tr,
+                                        spacing: 1,
                                       ),
-                                    );
-                                  },
-                                ),
-                              )),
-                  ),
-                ],
-                mainAxisSize: MainAxisSize.min,
-              )),
+                                    ],
+                                  ),
+                                  child: Container(
+                                    margin: const EdgeInsets.fromLTRB(
+                                      0,
+                                      0,
+                                      0,
+                                      16,
+                                    ),
+                                    padding: const EdgeInsets.all(12),
+                                    decoration: BoxDecoration(
+                                      color: Get.isDarkMode
+                                          ? const Color.fromRGBO(60, 60, 60, 1)
+                                          : const Color.fromRGBO(
+                                              245, 245, 245, 1),
+                                      borderRadius: BorderRadius.circular(8),
+                                    ),
+                                    child: InkWell(
+                                      onTap: () async {
+                                        if (isSelect) {
+                                          // 转发消息
+                                          sendToDialog(context, obj);
+                                        } else {
+                                          // 收藏详情
+                                          Get.to(
+                                            () => UserCollectDetailPage(
+                                              obj: obj,
+                                              pageIndex: index,
+                                            ),
+                                            transition: Transition.rightToLeft,
+                                            popGesture: true, // 右滑，返回上一页
+                                          );
+                                        }
+                                      },
+                                      child: n.Column([
+                                        logic.buildItemBody(obj, 'page'),
+                                        n.Row(const [SizedBox(height: 16)]),
+                                        n.Row([
+                                          Text(
+                                            obj.source,
+                                            maxLines: 6,
+                                            overflow: TextOverflow.ellipsis,
+                                            style: const TextStyle(
+                                              // color:
+                                              //     AppColors.MainTextColor,
+                                              fontSize: 14.0,
+                                            ),
+                                          ),
+                                          const Expanded(child: SizedBox()),
+                                          Text(
+                                            state.kind == state.recentUse &&
+                                                    obj.updatedAt > 0
+                                                ? DateTimeHelper.lastTimeFmt(
+                                                    obj.updatedAtLocal)
+                                                : DateTimeHelper.lastTimeFmt(
+                                                    obj.createdAtLocal),
+                                            maxLines: 1,
+                                            overflow: TextOverflow.ellipsis,
+                                            style: const TextStyle(
+                                              // color:
+                                              //     AppColors.MainTextColor,
+                                              fontSize: 14.0,
+                                            ),
+                                          ),
+                                        ])
+                                          ..mainAxisAlignment =
+                                              MainAxisAlignment.spaceBetween,
+                                        buildItemTag(obj.tag),
+                                      ]),
+                                    ),
+                                  ),
+                                );
+                              },
+                            ),
+                          )),
+              ),
+            ])
+              ..mainAxisSize = MainAxisSize.min,
+          ),
         ),
       ),
     );
@@ -519,30 +521,30 @@ class UserCollectPage extends StatelessWidget {
         ),
         child: Text(
           value,
-          style: const TextStyle(color: AppColors.MainTextColor),
+          // style: const TextStyle(color: AppColors.MainTextColor),
         ),
       ));
     });
     return Container(
         padding: const EdgeInsets.only(left: 8, right: 16.0),
-        color: AppColors.ChatBg,
+        color: Theme.of(Get.context!).colorScheme.background,
         child: ExpansionPanelList(
-          expandIconColor: AppColors.ChatBg,
+          expandIconColor: Theme.of(Get.context!).colorScheme.background,
           expansionCallback: (panelIndex, isExpanded) {
             state.kindActive.value = !state.kindActive.value;
             debugPrint("state.kindActive $state.kindActive");
           },
           children: <ExpansionPanel>[
             ExpansionPanel(
-              backgroundColor: AppColors.ChatBg,
+              backgroundColor: Theme.of(Get.context!).colorScheme.background,
               headerBuilder: (context, isExpanded) {
                 if (isExpanded) {
                   return n.Row([
                     const SizedBox(width: 8),
-                    Icon(
+                    const Icon(
                       Icons.grid_view,
                       size: 18,
-                      color: AppColors.MainTextColor.withOpacity(0.8),
+                      // color: AppColors.MainTextColor.withOpacity(0.8),
                     ),
                     const SizedBox(width: 10),
                     Text('type'.tr),
@@ -553,7 +555,8 @@ class UserCollectPage extends StatelessWidget {
                       onTap: () {
                         state.kindActive.value = !state.kindActive.value;
                         state.kindActive.value = !state.kindActive.value;
-                        logic.searchByKind(state.recentUse, 'recently_used'.tr, () {
+                        logic.searchByKind(state.recentUse, 'recently_used'.tr,
+                            () {
                           state.kindActive.value = !state.kindActive.value;
                         });
                       },
@@ -648,10 +651,10 @@ class UserCollectPage extends StatelessWidget {
                       top: 16,
                       child: n.Row([
                         const SizedBox(width: 8),
-                        Icon(
+                        const Icon(
                           Icons.sell_outlined,
                           size: 18,
-                          color: AppColors.MainTextColor.withOpacity(0.8),
+                          // color: AppColors.MainTextColor.withOpacity(0.8),
                         ),
                         const SizedBox(width: 10),
                         Text('tags'.tr),
diff --git a/lib/page/mine/user_device/change_name_view.dart b/lib/page/mine/user_device/change_name_view.dart
index 335486d..99baadf 100644
--- a/lib/page/mine/user_device/change_name_view.dart
+++ b/lib/page/mine/user_device/change_name_view.dart
@@ -4,7 +4,7 @@ import 'package:niku/namespace.dart' as n;
 
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/mine/user_device/user_device_logic.dart';
 
 // ignore: must_be_immutable
@@ -37,146 +37,138 @@ class ChangeNamePage extends StatelessWidget {
       // logic.valueOnChange(false);
     });
     textController.text = value;
-
-    return Container(
-      // top 22 in Android
-      padding: const EdgeInsets.only(top: 22),
-      color: AppColors.AppBarColor,
-      width: Get.width,
-      height: Get.height,
-      child: n.Wrap([
-        PageAppBar(
-          titleWidget: n.Row([
-            Expanded(
-              child: Text(
-                title,
-                textAlign: TextAlign.center,
-                style: const TextStyle(
-                  fontSize: 16.0,
-                  fontWeight: FontWeight.bold,
-                ),
+    return Scaffold(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
+        titleWidget: n.Row([
+          Expanded(
+            child: Text(
+              title,
+              textAlign: TextAlign.center,
+              style: const TextStyle(
+                fontSize: 16.0,
+                fontWeight: FontWeight.bold,
               ),
-              // 中间用Expanded控件
             ),
-            Obx(
-              () => ElevatedButton(
-                onPressed: () async {
-                  if (field == "input") {
-                    String trimmedText = textController.text.trim();
-                    if (trimmedText == '') {
-                      valueChanged.value = false;
-                    } else {
-                      bool res = await callback(trimmedText);
-                      if (res) {
-                        Get.back();
-                      }
+            // 中间用Expanded控件
+          ),
+          Obx(
+            () => ElevatedButton(
+              onPressed: () async {
+                if (field == "input") {
+                  String trimmedText = textController.text.trim();
+                  if (trimmedText == '') {
+                    valueChanged.value = false;
+                  } else {
+                    bool res = await callback(trimmedText);
+                    if (res) {
+                      Get.back();
                     }
                   }
-                },
-                // ignore: sort_child_properties_last
-                child: n.Padding(
-                    left: 10,
-                    right: 10,
-                    child: Text(
-                      'button_accomplish'.tr,
-                      textAlign: TextAlign.center,
-                    )),
-                style: valueChanged.isTrue
-                    ? ButtonStyle(
-                        backgroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.primaryElement,
-                        ),
-                        foregroundColor: MaterialStateProperty.all<Color>(
-                          Colors.white,
-                        ),
-                        minimumSize:
-                            MaterialStateProperty.all(const Size(60, 40)),
-                        visualDensity: VisualDensity.compact,
-                        padding: MaterialStateProperty.all(EdgeInsets.zero),
-                      )
-                    : ButtonStyle(
-                        backgroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.AppBarColor,
-                        ),
-                        foregroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.LineColor,
-                        ),
-                        minimumSize:
-                            MaterialStateProperty.all(const Size(60, 40)),
-                        visualDensity: VisualDensity.compact,
-                        padding: MaterialStateProperty.all(EdgeInsets.zero),
+                }
+              },
+              // ignore: sort_child_properties_last
+              child: n.Padding(
+                  left: 10,
+                  right: 10,
+                  child: Text(
+                    'button_accomplish'.tr,
+                    textAlign: TextAlign.center,
+                  )),
+              style: valueChanged.isTrue
+                  ? ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green,
                       ),
-              ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white,
+                      ),
+                      minimumSize:
+                          MaterialStateProperty.all(const Size(60, 40)),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
+                    )
+                  : ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green.withOpacity(0.6),
+                      ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white.withOpacity(0.6),
+                      ),
+                      minimumSize: MaterialStateProperty.all(
+                        const Size(60, 40),
+                      ),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
+                    ),
             ),
-          ]),
-        ),
-        n.Row([
-          Expanded(
-            child: inputField(),
           ),
         ]),
-      ]),
-    );
-  }
-
-  Widget inputField() {
-    return TextFormField(
-      autofocus: true,
-      focusNode: inputFocusNode,
-      controller: textController,
-      keyboardType: TextInputType.text,
-      textCapitalization: TextCapitalization.words,
-      decoration: InputDecoration(
-          contentPadding: const EdgeInsets.fromLTRB(14, 0, 8, 0),
-          filled: true,
-          fillColor: Colors.white,
-          focusedBorder: OutlineInputBorder(
+      ),
+      body: TextFormField(
+        autofocus: true,
+        focusNode: inputFocusNode,
+        controller: textController,
+        keyboardType: TextInputType.text,
+        textCapitalization: TextCapitalization.words,
+        decoration: InputDecoration(
+            contentPadding: const EdgeInsets.fromLTRB(14, 0, 8, 0),
+            filled: true,
+            fillColor: Get.isDarkMode
+                ? const Color.fromRGBO(70, 70, 70, 1.0)
+                : Colors.white70,
+            focusedBorder: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(3),
+                borderSide: BorderSide(
+                  width: 0.2,
+                  color: Theme.of(context).colorScheme.background,
+                )),
+            enabledBorder: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(3),
+                borderSide: BorderSide(
+                  width: 0.2,
+                  color: Theme.of(context).colorScheme.background,
+                )),
+            errorBorder: OutlineInputBorder(
               borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
-                width: 1.0,
-                color: AppColors.AppBarColor,
-              )),
-          enabledBorder: OutlineInputBorder(
+              borderSide: BorderSide(
+                  width: 1.0,
+                  color: Theme.of(Get.context!).colorScheme.errorContainer),
+            ),
+            errorStyle: const TextStyle(),
+            focusedErrorBorder: OutlineInputBorder(
               borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
-                width: 1.0,
-                color: AppColors.AppBarColor,
-              )),
-          errorBorder: OutlineInputBorder(
-            borderRadius: BorderRadius.circular(3),
-            borderSide: const BorderSide(width: 1.0, color: Colors.red),
-          ),
-          errorStyle: const TextStyle(),
-          focusedErrorBorder: OutlineInputBorder(
-            borderRadius: BorderRadius.circular(3),
-            borderSide: const BorderSide(width: 1.0, color: Colors.red),
-          ),
-          border: InputBorder.none),
-      readOnly: false,
-      onFieldSubmitted: (val) async {
-        // FocusScope.of(Get.context!).requestFocus();
-        if (val == '') {
-          valueChanged.value = false;
-        } else {
-          bool res = await callback(val);
-          if (res) {
-            Get.back();
+              borderSide: BorderSide(
+                  width: 1.0,
+                  color: Theme.of(Get.context!).colorScheme.errorContainer),
+            ),
+            border: InputBorder.none),
+        readOnly: false,
+        onFieldSubmitted: (val) async {
+          // FocusScope.of(Get.context!).requestFocus();
+          if (val == '') {
+            valueChanged.value = false;
+          } else {
+            bool res = await callback(val);
+            if (res) {
+              Get.back();
+            }
+          }
+        },
+        //style: ,
+        onChanged: (val) {
+          iPrint("ChangeName_Page val $val, value $value;");
+          if (value == val) {
+            valueChanged.value = false;
+          } else {
+            valueChanged.value = true;
           }
-        }
-      },
-      //style: ,
-      onChanged: (val) {
-        iPrint("ChangeName_Page val $val, value $value;");
-        if (value == val) {
-          valueChanged.value = false;
-        } else {
-          valueChanged.value = true;
-        }
-      },
-      onSaved: (value) {},
-      validator: (value) {
-        return null;
-      },
+        },
+        onSaved: (value) {},
+        validator: (value) {
+          return null;
+        },
+      ),
     );
   }
 }
diff --git a/lib/page/mine/user_device/user_device_detail_view.dart b/lib/page/mine/user_device/user_device_detail_view.dart
index 82b824e..1407a71 100644
--- a/lib/page/mine/user_device/user_device_detail_view.dart
+++ b/lib/page/mine/user_device/user_device_detail_view.dart
@@ -5,7 +5,7 @@ import 'package:imboy/component/ui/button.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/label_row.dart';
 import 'package:imboy/component/ui/line.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/model/user_device_model.dart';
 import 'package:jiffy/jiffy.dart';
 import 'package:niku/namespace.dart' as n;
@@ -36,14 +36,14 @@ class UserDeviceDetailPage extends StatelessWidget {
     //
     initData();
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'device_details'.tr,
       ),
       body: SingleChildScrollView(
-        child: Container(
+        child: SizedBox(
           width: Get.width,
           height: Get.height,
-          color: const Color(0xFFEEEEEE),
           child: n.Column([
             LabelRow(
               label: 'device_name'.tr,
@@ -56,7 +56,10 @@ class UserDeviceDetailPage extends StatelessWidget {
                       overflow: TextOverflow.ellipsis,
                       textAlign: TextAlign.right,
                       style: TextStyle(
-                        color: AppColors.MainTextColor.withOpacity(0.8),
+                        color: Theme.of(context)
+                            .colorScheme
+                            .onPrimary
+                            .withOpacity(0.8),
                         fontWeight: FontWeight.w400,
                       ),
                     )),
@@ -97,7 +100,10 @@ class UserDeviceDetailPage extends StatelessWidget {
                   overflow: TextOverflow.ellipsis,
                   textAlign: TextAlign.right,
                   style: TextStyle(
-                    color: AppColors.MainTextColor.withOpacity(0.8),
+                    color: Theme.of(context)
+                        .colorScheme
+                        .onPrimary
+                        .withOpacity(0.8),
                     fontWeight: FontWeight.w400,
                   ),
                 ),
@@ -105,7 +111,7 @@ class UserDeviceDetailPage extends StatelessWidget {
               onPressed: () {},
             ),
             const HorizontalLine(
-              height: 8,
+              height: 4,
             ),
             LabelRow(
               label: 'last_active_time'.tr,
@@ -119,7 +125,10 @@ class UserDeviceDetailPage extends StatelessWidget {
                   overflow: TextOverflow.ellipsis,
                   textAlign: TextAlign.right,
                   style: TextStyle(
-                    color: AppColors.MainTextColor.withOpacity(0.8),
+                    color: Theme.of(context)
+                        .colorScheme
+                        .onPrimary
+                        .withOpacity(0.8),
                     fontWeight: FontWeight.w400,
                   ),
                 ),
@@ -160,13 +169,17 @@ class UserDeviceDetailPage extends StatelessWidget {
                     ..actions = [
                       n.Button('button_cancel'.tr.n)
                         ..style = n.NikuButtonStyle(
-                            foregroundColor: AppColors.ItemOnColor)
+                          foregroundColor:
+                              Theme.of(context).colorScheme.onBackground,
+                        )
                         ..onPressed = () {
                           Navigator.of(context).pop();
                         },
                       n.Button('button_delete'.tr.n)
                         ..style = n.NikuButtonStyle(
-                            foregroundColor: AppColors.ItemOnColor)
+                          foregroundColor:
+                              Theme.of(context).colorScheme.onBackground,
+                        )
                         ..onPressed = () async {
                           var nav = Navigator.of(context);
 
diff --git a/lib/page/mine/user_device/user_device_view.dart b/lib/page/mine/user_device/user_device_view.dart
index 92499ae..1c2f761 100644
--- a/lib/page/mine/user_device/user_device_view.dart
+++ b/lib/page/mine/user_device/user_device_view.dart
@@ -2,13 +2,14 @@ import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:flutter_slidable/flutter_slidable.dart';
 import 'package:get/get.dart';
+import 'package:imboy/component/ui/line.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
 import 'package:imboy/config/init.dart';
 import 'package:imboy/store/model/user_device_model.dart';
 
@@ -37,7 +38,8 @@ class UserDevicePage extends StatelessWidget {
     //
     initData();
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'login_device_management'.tr,
         // rightDMActions: [
         //   TextButton(
@@ -58,12 +60,12 @@ class UserDevicePage extends StatelessWidget {
         child: Container(
           width: Get.width,
           height: Get.height,
-          color: AppColors.primaryBackground,
+          color: Theme.of(context).colorScheme.background,
           child: n.Column([
             n.Column([
               Container(
                 width: Get.width,
-                color: AppColors.AppBarColor,
+                color: Theme.of(context).colorScheme.background,
                 padding: const EdgeInsets.only(
                   top: 10.0,
                   left: 15,
@@ -119,8 +121,11 @@ class UserDevicePage extends StatelessWidget {
                                             ..actions = [
                                               n.Button('button_cancel'.tr.n)
                                                 ..style = n.NikuButtonStyle(
-                                                    foregroundColor:
-                                                        AppColors.ItemOnColor)
+                                                  foregroundColor:
+                                                      Theme.of(context)
+                                                          .colorScheme
+                                                          .onBackground,
+                                                )
                                                 ..onPressed = () {
                                                   Navigator.of(context).pop();
                                                 },
@@ -164,7 +169,9 @@ class UserDevicePage extends StatelessWidget {
                                       Text(
                                         'current_device'.tr,
                                         style: TextStyle(
-                                          color: AppColors.MainTextColor
+                                          color: Theme.of(context)
+                                              .colorScheme
+                                              .onPrimary
                                               .withOpacity(0.7),
                                           fontSize: 14,
                                         ),
@@ -181,11 +188,7 @@ class UserDevicePage extends StatelessWidget {
                                             model.lastActiveAtLocal),
                                       ),
                                   ]),
-                                  trailing: Icon(
-                                    Icons.navigate_next,
-                                    color: AppColors.MainTextColor.withOpacity(
-                                        0.5),
-                                  ),
+                                  trailing: navigateNextIcon,
                                   onTap: () {
                                     Get.to(
                                       () => UserDeviceDetailPage(
@@ -197,11 +200,7 @@ class UserDevicePage extends StatelessWidget {
                                   },
                                 ),
                               ),
-                              const Divider(
-                                height: 8.0,
-                                indent: 0.0,
-                                color: Colors.black26,
-                              ),
+                              const HorizontalLine(height: 1.0),
                             ]);
                           },
                         );
diff --git a/lib/page/passport/passport_logic.dart b/lib/page/passport/passport_logic.dart
index 027a382..0ae3f67 100644
--- a/lib/page/passport/passport_logic.dart
+++ b/lib/page/passport/passport_logic.dart
@@ -6,12 +6,13 @@ import 'package:flutter/foundation.dart';
 import 'package:flutter/services.dart';
 import 'package:flutter_login/flutter_login.dart';
 import 'package:get/get.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/extension/device_ext.dart';
 import 'package:imboy/component/extension/get_extension.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 import 'package:imboy/service/encrypter.dart';
 import 'package:imboy/service/storage.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
diff --git a/lib/page/passport/passport_view.dart b/lib/page/passport/passport_view.dart
index 5b8884f..f710c68 100644
--- a/lib/page/passport/passport_view.dart
+++ b/lib/page/passport/passport_view.dart
@@ -5,7 +5,8 @@ import 'package:get/get.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/network_failure_tips.dart';
-import 'package:imboy/config/const.dart';
+import 'package:imboy/config/init.dart';
+
 import 'package:imboy/config/theme.dart';
 import 'package:imboy/page/bottom_navigation/bottom_navigation_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
@@ -79,8 +80,9 @@ class PassportPage extends StatelessWidget {
             )
             ..actions = [
               n.Button('button_confirm'.tr.n)
-                ..style =
-                    n.NikuButtonStyle(foregroundColor: AppColors.ItemOnColor)
+                ..style = n.NikuButtonStyle(
+                  foregroundColor: Theme.of(context).colorScheme.onPrimary,
+                )
                 ..onPressed = () {
                   Navigator.of(context).pop();
                 },
@@ -109,7 +111,7 @@ class PassportPage extends StatelessWidget {
           ),
         ),
         child: FlutterLogin(
-          title: 'IMBoy',
+          title: appName,
           logo: const AssetImage('assets/images/3.0x/logo.png'),
           userType: userType,
           messages: LoginMessages(
diff --git a/lib/page/personal_info/personal_info/personal_info_binding.dart b/lib/page/personal_info/personal_info/personal_info_binding.dart
index 2168180..1e41f5d 100644
--- a/lib/page/personal_info/personal_info/personal_info_binding.dart
+++ b/lib/page/personal_info/personal_info/personal_info_binding.dart
@@ -4,7 +4,7 @@ import 'personal_info_logic.dart';
 
 class PersonalInfoBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => PersonalInfoLogic()),
       ];
 }
diff --git a/lib/page/personal_info/personal_info/personal_info_logic.dart b/lib/page/personal_info/personal_info/personal_info_logic.dart
index 1d4d033..8e08eec 100644
--- a/lib/page/personal_info/personal_info/personal_info_logic.dart
+++ b/lib/page/personal_info/personal_info/personal_info_logic.dart
@@ -1,7 +1,9 @@
 import 'package:get/get.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/personal_info/widget/more_view.dart';
 import 'package:imboy/page/uqrcode/uqrcode_view.dart';
 
@@ -21,7 +23,7 @@ class PersonalInfoLogic extends GetxController {
   }
 
   labelOnPressed(String label) {
-    if (label == "more") {
+    if (label == 'more') {
       Get.to(
         () => const MoreView(),
         transition: Transition.rightToLeft,
diff --git a/lib/page/personal_info/personal_info/personal_info_view.dart b/lib/page/personal_info/personal_info/personal_info_view.dart
index bed512e..eacca20 100644
--- a/lib/page/personal_info/personal_info/personal_info_view.dart
+++ b/lib/page/personal_info/personal_info/personal_info_view.dart
@@ -3,6 +3,7 @@ import 'dart:io';
 import 'package:connectivity_plus/connectivity_plus.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:flutter/widgets.dart';
 import 'package:get/get.dart';
 import 'package:image_picker_platform_interface/image_picker_platform_interface.dart';
 import 'package:niku/namespace.dart' as n;
@@ -13,7 +14,7 @@ import 'package:imboy/component/ui/avatar.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/label_row.dart';
 import 'package:imboy/component/ui/line.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/repository/user_repo_local.dart';
 
 import '../update/update_view.dart';
@@ -97,7 +98,10 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
       isRight: item['isRight'] ?? true,
       margin: EdgeInsets.only(bottom: item['label'] == 'more' ? 10.0 : 0.0),
       rightW: item['label'] == 'user_qrcode'
-          ? const Icon(Icons.qr_code_2)
+          ? Icon(
+              Icons.qr_code_2,
+              color: Get.isDarkMode ? Colors.white70 : Colors.black,
+            )
           : Container(),
       onPressed: () => logic.labelOnPressed(item['label']),
     );
@@ -125,8 +129,9 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
     });
     // }
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(title: 'personal_information'.tr),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+          automaticallyImplyLeading: true, title: 'personal_information'.tr),
       body: SingleChildScrollView(
           child: n.Column([
         LabelRow(
@@ -152,8 +157,8 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
                     child: Text(
                       'button_taking_pictures'.tr,
                       textAlign: TextAlign.center,
-                      style: const TextStyle(
-                        // color: Colors.white,
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.onPrimary,
                         fontSize: 16.0,
                         fontWeight: FontWeight.normal,
                       ),
@@ -167,23 +172,26 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
                     child: Text(
                       'choose_from_album'.tr,
                       textAlign: TextAlign.center,
-                      style: const TextStyle(
-                        // color: Colors.white,
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.onPrimary,
                         fontSize: 16.0,
                         fontWeight: FontWeight.normal,
                       ),
                     ),
                   ),
                 ),
-                const HorizontalLine(height: 6),
+                HorizontalLine(
+                  height: 6,
+                  color: Theme.of(context).colorScheme.primary,
+                ),
                 Center(
                   child: TextButton(
                     onPressed: () => Get.close(),
                     child: Text(
                       'button_cancel'.tr,
                       textAlign: TextAlign.center,
-                      style: const TextStyle(
-                        // color: Colors.white,
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.onPrimary,
                         fontSize: 16.0,
                         fontWeight: FontWeight.normal,
                       ),
@@ -192,7 +200,9 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
                 )
               ]),
             ),
-            backgroundColor: Colors.white,
+            backgroundColor: Get.isDarkMode
+                ? const Color.fromRGBO(80, 80, 80, 1)
+                : const Color.fromRGBO(240, 240, 240, 1),
             //改变shape这里即可
             shape: const RoundedRectangleBorder(
               borderRadius: BorderRadius.only(
@@ -214,7 +224,7 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
                 overflow: TextOverflow.ellipsis,
                 textAlign: TextAlign.right,
                 style: TextStyle(
-                    color: AppColors.MainTextColor.withOpacity(0.7),
+                    color: Theme.of(context).colorScheme.onPrimary,
                     fontWeight: FontWeight.w400),
               ),
             ),
@@ -225,8 +235,10 @@ class _PersonalInfoPageState extends State<PersonalInfoPage> {
                     value: UserRepoLocal.to.current.nickname,
                     field: 'input',
                     callback: (nickname) async {
-                      bool ok = await logic
-                          .changeInfo({"field": "nickname", "value": nickname});
+                      bool ok = await logic.changeInfo({
+                        "field": "nickname",
+                        "value": nickname,
+                      });
                       if (ok) {
                         //url是图片上传后拿到的url
                         setState(() {
diff --git a/lib/page/personal_info/update/update_view.dart b/lib/page/personal_info/update/update_view.dart
index 37712cd..4812858 100644
--- a/lib/page/personal_info/update/update_view.dart
+++ b/lib/page/personal_info/update/update_view.dart
@@ -1,13 +1,12 @@
-import 'dart:io';
-
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
+import 'package:imboy/component/ui/line.dart';
+import 'package:imboy/page/mine/select_region/select_region_logic.dart';
+import 'package:niku/namespace.dart' as n;
+
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/radio_list_title.dart';
-import 'package:imboy/component/ui/select_region_view.dart';
-import 'package:imboy/config/const.dart';
-import 'package:niku/namespace.dart' as n;
 
 import 'update_logic.dart';
 
@@ -37,6 +36,7 @@ class UpdatePage extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
+    logic.val.value = value;
     Future.delayed(const Duration(milliseconds: 100)).then((e) {
       // 设置提交按钮灰色
       logic.valueOnChange(false);
@@ -44,123 +44,110 @@ class UpdatePage extends StatelessWidget {
     Widget body = const SizedBox.shrink();
     if (field == "input") {
       logic.textController.text = value;
-      body = inputField();
+      body = inputField(context);
     } else if (field == "text") {
       logic.textController.text = value;
       logic.valueOnChange(true);
-      body = textField();
+      body = textField(context);
     } else if (field == "region") {
-      logic.val.value = value;
       // 选择如果是顶级地区,选中之
-      regionLogic.regionSelectedTitle(logic.val.value);
+      regionLogic.regionSelectedTitle(value);
       // 加载地区数据
       logic.loadData();
-      body = regionField();
+      body = regionField(context);
     } else if (field == "gender") {
-      logic.val.value = value;
       logic.valueOnChange(true);
-      body = genderField();
-    }
-    double top = 0;
-    if (Platform.isAndroid || Platform.isIOS || Platform.isFuchsia) {
-      top = 22;
+      body = genderField(context);
     }
-    return Container(
-      padding: EdgeInsets.only(top: top),
-      color: AppColors.AppBarColor,
-      width: Get.width,
-      height: Get.height,
-      child: Wrap(
-        children: <Widget>[
-          PageAppBar(
-            titleWidget: Row(
-              children: [
-                Expanded(
+    // double top = 0;
+    // if (Platform.isAndroid || Platform.isIOS || Platform.isFuchsia) {
+    //   top = 22;
+    // }
+    return Scaffold(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
+        titleWidget: n.Row([
+          Expanded(
+            child: Text(
+              title,
+              textAlign: TextAlign.center,
+              style: TextStyle(
+                fontSize: 16.0,
+                fontWeight: FontWeight.bold,
+                color: Theme.of(context).colorScheme.onPrimary,
+              ),
+            ),
+            // 中间用Expanded控件
+          ),
+          Obx(
+            () => ElevatedButton(
+              onPressed: () async {
+                if (field == "input") {
+                  String trimmedText = logic.textController.text.trim();
+                  if (trimmedText == '') {
+                    logic.valueOnChange(false);
+                  } else {
+                    bool res = await callback(trimmedText);
+                    if (res) {
+                      Get.back();
+                    }
+                  }
+                } else if (field == "text") {
+                  String trimmedText = logic.textController.text.trim();
+                  bool res = await callback(trimmedText);
+                  if (res) {
+                    Get.back();
+                  }
+                } else if (field == "region" || field == "gender") {
+                  bool res = await callback(logic.val.value);
+                  if (res) {
+                    Get.back();
+                  }
+                }
+              },
+              // ignore: sort_child_properties_last
+              child: n.Padding(
+                  left: 10,
+                  right: 10,
                   child: Text(
-                    title,
+                    'button_accomplish'.tr,
                     textAlign: TextAlign.center,
-                    style: const TextStyle(
-                      fontSize: 16.0,
-                      fontWeight: FontWeight.bold,
+                  )),
+              style: logic.valueChanged.isTrue
+                  ? ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green,
+                      ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white,
+                      ),
+                      minimumSize:
+                          MaterialStateProperty.all(const Size(60, 40)),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
+                    )
+                  : ButtonStyle(
+                      backgroundColor: MaterialStateProperty.all<Color>(
+                        Colors.green.withOpacity(0.6),
+                      ),
+                      foregroundColor: MaterialStateProperty.all<Color>(
+                        Colors.white.withOpacity(0.6),
+                      ),
+                      minimumSize:
+                          MaterialStateProperty.all(const Size(60, 40)),
+                      visualDensity: VisualDensity.compact,
+                      padding: MaterialStateProperty.all(EdgeInsets.zero),
                     ),
-                  ),
-                  // 中间用Expanded控件
-                ),
-                Obx(
-                  () => ElevatedButton(
-                    onPressed: () async {
-                      if (field == "input") {
-                        String trimmedText = logic.textController.text.trim();
-                        if (trimmedText == '') {
-                          logic.valueOnChange(false);
-                        } else {
-                          bool res = await callback(trimmedText);
-                          if (res) {
-                            Get.back();
-                          }
-                        }
-                      } else if (field == "text") {
-                        String trimmedText = logic.textController.text.trim();
-                        bool res = await callback(trimmedText);
-                        if (res) {
-                          Get.back();
-                        }
-                      } else if (field == "region" || field == "gender") {
-                        bool res = await callback(logic.val.value);
-                        if (res) {
-                          Get.back();
-                        }
-                      }
-                    },
-                    // ignore: sort_child_properties_last
-                    child: n.Padding(
-                        left: 10,
-                        right: 10,
-                        child: Text(
-                          'button_accomplish'.tr,
-                          textAlign: TextAlign.center,
-                        )),
-                    style: logic.valueChanged.isTrue
-                        ? ButtonStyle(
-                            backgroundColor: MaterialStateProperty.all<Color>(
-                              AppColors.primaryElement,
-                            ),
-                            foregroundColor: MaterialStateProperty.all<Color>(
-                              Colors.white,
-                            ),
-                            minimumSize:
-                                MaterialStateProperty.all(const Size(60, 40)),
-                            visualDensity: VisualDensity.compact,
-                            padding: MaterialStateProperty.all(EdgeInsets.zero),
-                          )
-                        : ButtonStyle(
-                            backgroundColor: MaterialStateProperty.all<Color>(
-                              AppColors.AppBarColor,
-                            ),
-                            foregroundColor: MaterialStateProperty.all<Color>(
-                              AppColors.LineColor,
-                            ),
-                            minimumSize:
-                                MaterialStateProperty.all(const Size(60, 40)),
-                            visualDensity: VisualDensity.compact,
-                            padding: MaterialStateProperty.all(EdgeInsets.zero),
-                          ),
-                  ),
-                ),
-              ],
             ),
           ),
-          n.Row([
-            Expanded(
-              child: body,
-            ),
-          ]),
-        ],
+        ]),
       ),
+      body: SingleChildScrollView(child: body),
     );
   }
 
-  Widget inputField() {
+  Widget inputField(BuildContext context) {
     return TextFormField(
       autofocus: true,
       focusNode: logic.inputFocusNode,
@@ -170,18 +157,20 @@ class UpdatePage extends StatelessWidget {
       decoration: InputDecoration(
           contentPadding: const EdgeInsets.fromLTRB(14, 0, 8, 0),
           filled: true,
-          fillColor: Colors.white,
+          fillColor: Get.isDarkMode
+              ? const Color.fromRGBO(70, 70, 70, 1.0)
+              : Colors.white70,
           focusedBorder: OutlineInputBorder(
               borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
+              borderSide: BorderSide(
                 width: 1.0,
-                color: AppColors.AppBarColor,
+                color: Theme.of(context).colorScheme.background,
               )),
           enabledBorder: OutlineInputBorder(
               borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
+              borderSide: BorderSide(
                 width: 1.0,
-                color: AppColors.AppBarColor,
+                color: Theme.of(context).colorScheme.background,
               )),
           errorBorder: OutlineInputBorder(
             borderRadius: BorderRadius.circular(3),
@@ -207,11 +196,7 @@ class UpdatePage extends StatelessWidget {
       },
       //style: ,
       onChanged: (value) {
-        if (value == '' || value == logic.val.value) {
-          logic.valueOnChange(false);
-        } else {
-          logic.valueOnChange(true);
-        }
+        onChanged(value);
       },
       onSaved: (value) {},
       validator: (value) {
@@ -220,7 +205,17 @@ class UpdatePage extends StatelessWidget {
     );
   }
 
-  Widget textField() {
+  onChanged(val) {
+    iPrint("onChanged ${logic.val.value} = $val");
+    if (val == '' || val == value) {
+      logic.valueOnChange(false);
+    } else {
+      logic.valueOnChange(true);
+    }
+    logic.setVal(val);
+  }
+
+  Widget textField(BuildContext context) {
     return TextFormField(
       autofocus: true,
       focusNode: logic.inputFocusNode,
@@ -234,18 +229,14 @@ class UpdatePage extends StatelessWidget {
       decoration: InputDecoration(
           contentPadding: const EdgeInsets.fromLTRB(14, 16, 8, 0),
           filled: true,
-          fillColor: Colors.white,
+          fillColor: Get.isDarkMode
+              ? const Color.fromRGBO(70, 70, 70, 1.0)
+              : Colors.white70,
           focusedBorder: OutlineInputBorder(
               borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
-                width: 1.0,
-                color: AppColors.AppBarColor,
-              )),
-          enabledBorder: OutlineInputBorder(
-              borderRadius: BorderRadius.circular(3),
-              borderSide: const BorderSide(
-                width: 1.0,
-                color: AppColors.AppBarColor,
+              borderSide: BorderSide(
+                width: 0.2,
+                color: Theme.of(context).colorScheme.background,
               )),
           errorBorder: OutlineInputBorder(
             borderRadius: BorderRadius.circular(3),
@@ -265,11 +256,7 @@ class UpdatePage extends StatelessWidget {
         }
       },
       onChanged: (value) {
-        if (value == '' || value == logic.val.value) {
-          logic.valueOnChange(false);
-        } else {
-          logic.valueOnChange(true);
-        }
+        onChanged(value);
       },
       onSaved: (value) {},
       validator: (value) {
@@ -278,112 +265,152 @@ class UpdatePage extends StatelessWidget {
     );
   }
 
-  Widget genderField() {
+  Widget genderField(BuildContext context) {
     Widget secondary = const Text(
       "√",
       style: TextStyle(
         fontSize: 20,
-        color: AppColors.primaryElement,
+        color: Colors.green,
       ),
     );
     return Obx(
-      () => n.Column(
-        [
-          IMBoyRadioListTile(
-            value: "1",
-            title: n.Text('male'.tr),
-            selected: false,
-            secondary: logic.val.value == "1" ? secondary : null,
-            controlAffinity: ListTileControlAffinity.leading,
-            activeColor: AppColors.primaryElement,
-            groupValue: logic.val.value,
-            onChanged: (val) {
-              logic.valueOnChange(true);
-              logic.setVal(val.toString());
-            },
+      () => n.Column([
+        IMBoyRadioListTile(
+          value: '1',
+          title: n.Text(
+            'male'.tr,
+            style: n.TextStyle(
+              fontSize: logic.val.value == '1' ? 20 : 16,
+              color: Theme.of(context).colorScheme.onPrimary,
+            ),
+          ),
+          selected: false,
+          secondary: logic.val.value == '1' ? secondary : null,
+          controlAffinity: ListTileControlAffinity.leading,
+          activeColor: Theme.of(context).colorScheme.primary,
+          groupValue: logic.val.value,
+          onChanged: (val) {
+            onChanged(val);
+          },
+        ),
+        n.Padding(
+          left: 16,
+          right: 16,
+          child: HorizontalLine(
+            height: Get.isDarkMode ? 0.5 : 1.0,
+            color: Theme.of(context).colorScheme.primary,
           ),
-          Container(
-            width: Get.width * 0.92,
-            height: 1,
-            color: AppColors.AppBarColor,
+        ),
+        IMBoyRadioListTile(
+          value: '2',
+          title: n.Text(
+            'female'.tr,
+            style: n.TextStyle(
+              fontSize: logic.val.value == '2' ? 20 : 16,
+              color: Theme.of(context).colorScheme.onPrimary,
+            ),
           ),
-          IMBoyRadioListTile(
-            value: "2",
-            title: n.Text('female'.tr),
-            selected: false,
-            secondary: logic.val.value == "2" ? secondary : null,
-            controlAffinity: ListTileControlAffinity.leading,
-            activeColor: AppColors.primaryElement,
-            groupValue: logic.val.value,
-            onChanged: (val) {
-              logic.valueOnChange(true);
-              logic.setVal(val.toString());
-            },
+          selected: false,
+          secondary: logic.val.value == '2' ? secondary : null,
+          controlAffinity: ListTileControlAffinity.leading,
+          activeColor: Theme.of(context).colorScheme.primary,
+          groupValue: logic.val.value,
+          onChanged: (val) {
+            onChanged(val);
+          },
+        ),
+        n.Padding(
+          left: 16,
+          right: 16,
+          child: HorizontalLine(
+            height: Get.isDarkMode ? 0.5 : 1.0,
+            color: Theme.of(context).colorScheme.primary,
           ),
-          Container(
-            width: Get.width * 0.92,
-            height: 1,
-            color: AppColors.AppBarColor,
+        ),
+        IMBoyRadioListTile(
+          value: '3',
+          title: n.Text(
+            'keep_secret'.tr,
+            style: n.TextStyle(
+              fontSize: logic.val.value == '3' ? 20 : 16,
+              color: Theme.of(context).colorScheme.onPrimary,
+            ),
           ),
-          IMBoyRadioListTile(
-            value: '3',
-            title: n.Text('keep_secret'.tr),
-            selected: false,
-            secondary: logic.val.value == '3' ? secondary : null,
-            shape: const RoundedRectangleBorder(
-              borderRadius: BorderRadius.only(
-                topLeft: Radius.circular(0.0),
-                topRight: Radius.circular(0.0),
-              ),
+          selected: false,
+          secondary: logic.val.value == '3' ? secondary : null,
+          shape: const RoundedRectangleBorder(
+            borderRadius: BorderRadius.only(
+              topLeft: Radius.circular(0.0),
+              topRight: Radius.circular(0.0),
             ),
-            controlAffinity: ListTileControlAffinity.leading,
-            activeColor: AppColors.primaryElement,
-            groupValue: logic.val.value,
-            onChanged: (val) {
-              logic.valueOnChange(true);
-              logic.setVal(val.toString());
-            },
           ),
-        ],
-        mainAxisSize: MainAxisSize.min,
-      )..useParent((v) => v..bg = Colors.white),
+          controlAffinity: ListTileControlAffinity.leading,
+          activeColor: Theme.of(Get.context!).colorScheme.primary,
+          groupValue: logic.val.value,
+          onChanged: (val) {
+            onChanged(val);
+          },
+        ),
+        n.Padding(
+          left: 16,
+          right: 16,
+          child: HorizontalLine(
+            height: Get.isDarkMode ? 0.5 : 1.0,
+            color: Theme.of(context).colorScheme.primary,
+          ),
+        ),
+      ])
+        ..mainAxisSize = MainAxisSize.min
+        ..useParent((v) => v
+            // ..bg = Get.isDarkMode
+            //     ? const Color.fromRGBO(70, 70, 70, 1.0)
+            //     : Colors.white70
+            ),
     );
   }
 
-  Widget regionField() {
-    return Obx(
-      () => n.Column(
-        [
-          Container(
-            alignment: Alignment.centerLeft,
-            padding: const EdgeInsets.only(left: 15.0),
-            width: Get.width,
-            height: 40.0,
-            child: Text("${'selected_region'.tr}： ${logic.val.value}"),
-          ),
-          n.Row([
-            Expanded(
-              child: SizedBox(
-                height: Get.height - 40,
-                child: ListView.builder(
-                  itemBuilder: (BuildContext context, int index) {
-                    return regionLogic
-                        .getListItem(context, "", logic.regionList[index],
-                            (String p, String t) async {
-                      logic.val.value = strEmpty(p) ? t : "$p $t";
-                      logic.valueOnChange(true);
-                      return true;
-                    }, callback);
-                  },
-                  itemCount: logic.regionList.length,
-                ),
+  Widget regionField(BuildContext context) {
+    return Obx(() => n.Column([
+              Container(
+                alignment: Alignment.centerLeft,
+                padding: const EdgeInsets.only(left: 16.0),
+                width: Get.width,
+                height: 40.0,
+                child: Text("${'selected_region'.tr}： ${logic.val.value}"),
               ),
-            ),
-          ])
-            ..mainAxisSize = MainAxisSize.max,
-        ],
-        mainAxisSize: MainAxisSize.min,
-      )..useParent((v) => v..bg = Colors.white),
-    );
+              n.Row([
+                Expanded(
+                  child: Container(
+                    margin: const EdgeInsets.only(left: 16, right: 16),
+                    width: Get.width,
+                    height: Get.height - 40,
+                    // color: Theme.of(context).colorScheme.background,
+                    child: ListView.builder(
+                      itemBuilder: (BuildContext context, int index) {
+                        return regionLogic.getListItem(
+                            context: context,
+                            parent: '',
+                            model: logic.regionList[index],
+                            callback: (String p, String t) async {
+                              // logic.val.value = strEmpty(p) ? t : "$p $t";
+                              // logic.valueOnChange(true);
+                              onChanged(strEmpty(p) ? t : "$p $t");
+                              return true;
+                            },
+                            outCallback: callback,
+                            margin: const EdgeInsets.only(left: 0, right: 0));
+                      },
+                      itemCount: logic.regionList.length,
+                    ),
+                  ),
+                ),
+              ])
+                ..mainAxisSize = MainAxisSize.min
+                // 内容文本左对齐
+                ..crossAxisAlignment = CrossAxisAlignment.start,
+            ])
+              ..mainAxisSize = MainAxisSize.min
+        // ..useParent((v) => v..bg = Theme.of(context).colorScheme.background),
+        );
   }
 }
diff --git a/lib/page/personal_info/widget/more_view.dart b/lib/page/personal_info/widget/more_view.dart
index 084ef8b..6a4505f 100644
--- a/lib/page/personal_info/widget/more_view.dart
+++ b/lib/page/personal_info/widget/more_view.dart
@@ -3,9 +3,9 @@ import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:niku/namespace.dart' as n;
 
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/label_row.dart';
-import 'package:imboy/config/const.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
 
 import '../personal_info/personal_info_logic.dart';
@@ -31,14 +31,20 @@ class MoreView extends StatelessWidget {
       return items[items.length - 2] + " " + items[items.length - 1];
     };
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(title: 'more_info'.tr),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(automaticallyImplyLeading: true, title: 'more_info'.tr),
       body: n.Column([
         LabelRow(
           label: 'gender'.tr,
           isLine: true,
+          lineWidth: Get.isDarkMode ? 0.5 : 1.0,
           isRight: true,
-          rightW: Obx(() => Text(logic.genderTitle.value)),
+          rightW: Obx(() => Text(
+                logic.genderTitle.value,
+                style: TextStyle(
+                  color: Theme.of(context).colorScheme.onPrimary,
+                ),
+              )),
           onPressed: () {
             Get.to(
               () => UpdatePage(
@@ -72,8 +78,16 @@ class MoreView extends StatelessWidget {
         LabelRow(
           label: 'region'.tr,
           isLine: true,
+          lineWidth: Get.isDarkMode ? 0.5 : 1.0,
           isRight: true,
-          rightW: Obx(() => Text(deleteFirst(logic.region.value))),
+          rightW: Obx(
+            () => Text(
+              deleteFirst(logic.region.value),
+              style: TextStyle(
+                color: Theme.of(context).colorScheme.onPrimary,
+              ),
+            ),
+          ),
           onPressed: () {
             Get.to(
               () => UpdatePage(
@@ -105,50 +119,48 @@ class MoreView extends StatelessWidget {
           style: TextButton.styleFrom(
             minimumSize: Size.zero,
             padding: EdgeInsets.zero,
-            foregroundColor: AppColors.ItemOnColor,
-            backgroundColor: Colors.white,
+            foregroundColor: Theme.of(context).colorScheme.onBackground,
+            // backgroundColor: Theme.of(context).colorScheme.background,
             //取消圆角边框
-            shape:
-                const RoundedRectangleBorder(borderRadius: BorderRadius.zero),
+            shape: const RoundedRectangleBorder(
+              borderRadius: BorderRadius.zero,
+            ),
           ),
           child: Container(
             padding: const EdgeInsets.only(top: 15.0, bottom: 15.0, right: 5.0),
             margin: const EdgeInsets.only(
               left: 20.0,
             ),
-            child: Row(
-              children: <Widget>[
-                SizedBox(
-                  child: Text(
-                    'signature'.tr,
-                    style: const TextStyle(fontSize: 17.0),
-                  ),
+            child: n.Row([
+              SizedBox(
+                child: Text(
+                  'signature'.tr,
+                  style: const TextStyle(fontSize: 17.0),
                 ),
-                Expanded(
-                  child: Padding(
-                    padding: const EdgeInsets.fromLTRB(16, 0, 0, 0),
-                    child: Obx(
-                      () => Text(
-                        logic.sign.value == "" ? "未填写" : logic.sign.value,
-                        style: const TextStyle(
-                          color: AppColors.MainTextColor,
-                          fontSize: 14.0,
-                        ),
-                        maxLines: 3,
-                        overflow: TextOverflow.ellipsis,
-                        textAlign: logic.sign.value == ""
-                            ? TextAlign.right
-                            : TextAlign.left,
+              ),
+              Expanded(
+                child: Padding(
+                  padding: const EdgeInsets.fromLTRB(16, 0, 0, 0),
+                  child: Obx(
+                    () => Text(
+                      logic.sign.value == ''
+                          ? 'not_filled'.tr
+                          : logic.sign.value,
+                      style: const TextStyle(
+                        // color: AppColors.MainTextColor,
+                        fontSize: 14.0,
                       ),
+                      maxLines: 3,
+                      overflow: TextOverflow.ellipsis,
+                      textAlign: logic.sign.value == ""
+                          ? TextAlign.right
+                          : TextAlign.left,
                     ),
                   ),
                 ),
-                Icon(
-                  CupertinoIcons.right_chevron,
-                  color: AppColors.MainTextColor.withOpacity(0.5),
-                )
-              ],
-            ),
+              ),
+              navigateNextIcon
+            ]),
           ),
           onPressed: () {
             Get.to(
@@ -157,8 +169,10 @@ class MoreView extends StatelessWidget {
                   value: UserRepoLocal.to.current.sign,
                   field: 'text',
                   callback: (sign) async {
-                    bool ok = await logic
-                        .changeInfo({"field": "sign", "value": sign});
+                    bool ok = await logic.changeInfo({
+                      "field": "sign",
+                      "value": sign,
+                    });
                     if (ok) {
                       Map<String, dynamic> payload =
                           UserRepoLocal.to.current.toMap();
diff --git a/lib/page/scanner/scanner_logic.dart b/lib/page/scanner/scanner_logic.dart
index 9f1898d..fb525ff 100644
--- a/lib/page/scanner/scanner_logic.dart
+++ b/lib/page/scanner/scanner_logic.dart
@@ -4,6 +4,9 @@ import 'package:get/get.dart';
 class ScannerLogic extends GetxController {
   Future showResult(String txt, int closeTimes) {
     return Get.bottomSheet(
+      backgroundColor: Get.isDarkMode
+          ? const Color.fromRGBO(80, 80, 80, 1)
+          : const Color.fromRGBO(240, 240, 240, 1),
       InkWell(
         onTap: () {
           Get.closeAllBottomSheets();
diff --git a/lib/page/scanner/scanner_result_view.dart b/lib/page/scanner/scanner_result_view.dart
index 489bde9..13151f7 100644
--- a/lib/page/scanner/scanner_result_view.dart
+++ b/lib/page/scanner/scanner_result_view.dart
@@ -6,7 +6,7 @@ import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/web_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 import 'scanner_logic.dart';
@@ -22,8 +22,9 @@ class ScannerResultPage extends StatelessWidget {
     final logic = Get.find<ScannerLogic>();
 
     return Scaffold(
-        backgroundColor: AppColors.AppBarColor,
-        appBar: PageAppBar(title: 'scan_result'.tr),
+        backgroundColor: Theme.of(context).colorScheme.background,
+        appBar:
+            NavAppBar(automaticallyImplyLeading: true, title: 'scan_result'.tr),
         floatingActionButtonLocation:
             FloatingActionButtonLocation.miniCenterFloat,
         floatingActionButton: SizedBox(
diff --git a/lib/page/scanner/scanner_view.dart b/lib/page/scanner/scanner_view.dart
index 846c685..d6da8e6 100644
--- a/lib/page/scanner/scanner_view.dart
+++ b/lib/page/scanner/scanner_view.dart
@@ -1,14 +1,14 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:image_picker/image_picker.dart';
+import 'package:mobile_scanner/mobile_scanner.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 import 'package:imboy/page/single/people_info.dart';
-import 'package:mobile_scanner/mobile_scanner.dart';
-import 'package:niku/namespace.dart' as n;
-
 import 'scanner_logic.dart';
 import 'scanner_result_view.dart';
 
diff --git a/lib/page/search/search_binding.dart b/lib/page/search/search_binding.dart
index be8feb7..d5c10f1 100644
--- a/lib/page/search/search_binding.dart
+++ b/lib/page/search/search_binding.dart
@@ -4,7 +4,7 @@ import 'search_logic.dart';
 
 class SearchBinding extends Binding {
   @override
-    List<Bind> dependencies() => [
+  List<Bind> dependencies() => [
         Bind.lazyPut(() => SearchLogic()),
       ];
 }
diff --git a/lib/page/search/search_view.dart b/lib/page/search/search_view.dart
index 3b24c6c..f8b3e9a 100644
--- a/lib/page/search/search_view.dart
+++ b/lib/page/search/search_view.dart
@@ -2,7 +2,6 @@ import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
 
 import 'search_logic.dart';
 import 'search_state.dart';
@@ -31,7 +30,7 @@ class _SearchPageState extends State<SearchPage> {
         margin: const EdgeInsets.symmetric(vertical: 15.0),
         child: Text(
           item,
-          style: const TextStyle(color: AppColors.TipColor),
+          // style: const TextStyle(color: AppColors.TipColor),
         ),
       ),
       onTap: () => Get.snackbar("tips", "$item功能正在开发"),
@@ -46,7 +45,7 @@ class _SearchPageState extends State<SearchPage> {
           padding: const EdgeInsets.symmetric(vertical: 10.0),
           child: Text(
             'search_specific_content'.tr,
-            style: const TextStyle(color: AppColors.MainTextColor),
+            // style: const TextStyle(color: AppColors.MainTextColor),
           ),
         ),
         Wrap(
@@ -85,8 +84,9 @@ class _SearchPageState extends State<SearchPage> {
       ],
     );
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(titleWidget: searchView),
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar:
+          NavAppBar(automaticallyImplyLeading: true, titleWidget: searchView),
       body: SizedBox(width: Get.width, child: body()),
     );
   }
diff --git a/lib/page/single/markdown.dart b/lib/page/single/markdown.dart
index 122c672..816f08e 100644
--- a/lib/page/single/markdown.dart
+++ b/lib/page/single/markdown.dart
@@ -5,7 +5,7 @@ import 'package:flutter_markdown/flutter_markdown.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/extension/imboy_cache_manager.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/service/encrypter.dart';
 
 // ignore: must_be_immutable
@@ -34,13 +34,14 @@ class MarkdownPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: title,
         rightDMActions: rightDMActions,
       ),
       body: Container(
-          color: AppColors.primaryBackground,
+          color: Theme.of(context).colorScheme.background,
           child: Obx(
             () => Markdown(data: content.value),
           )),
diff --git a/lib/page/single/network_failure_guidance.dart b/lib/page/single/network_failure_guidance.dart
index b71bf18..c31756a 100644
--- a/lib/page/single/network_failure_guidance.dart
+++ b/lib/page/single/network_failure_guidance.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:niku/namespace.dart' as n;
 
 class NetworkFailureGuidancePage extends StatelessWidget {
@@ -10,11 +10,12 @@ class NetworkFailureGuidancePage extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'network_exception'.tr,
       ),
       body: Card(
-        color: AppColors.BgColor,
+        color: Theme.of(context).colorScheme.background,
         child: n.Column(
           // mainAxisSize: MainAxisSize.min,
           [
diff --git a/lib/page/single/people_info.dart b/lib/page/single/people_info.dart
index 4662eb5..1eacb1b 100644
--- a/lib/page/single/people_info.dart
+++ b/lib/page/single/people_info.dart
@@ -7,8 +7,9 @@ import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/contact_card.dart';
 import 'package:imboy/component/ui/label_row.dart';
+import 'package:imboy/component/ui/line.dart';
 import 'package:imboy/component/webrtc/func.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/chat/chat/chat_view.dart';
 import 'package:imboy/page/contact/apply_friend/apply_friend_view.dart';
 import 'package:imboy/page/contact/contact_setting/contact_setting_view.dart';
@@ -89,260 +90,280 @@ class PeopleInfoPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     bool isSelf = UserRepoLocal.to.currentUid == id;
-    var rWidget = [
-      SizedBox(
-        width: 60,
-        child: TextButton(
-          onPressed: () {
-            Get.to(
-              () => ContactSettingPage(
-                peerId: id,
-                peerAvatar: avatar.value,
-                peerAccount: account.value,
-                peerNickname: nickname.value,
-                peerGender: gender.value,
-                peerTitle: title.value,
-                peerSign: sign.value,
-                peerRegion: region.value,
-                peerSource: source.value,
-                peerRemark: remark.value,
-                peerTag: tag.value,
-              ),
-              transition: Transition.rightToLeft,
-              popGesture: true, // 右滑，返回上一页
-            );
-          },
-          child: n.Padding(
-            left: 10,
-            right: 10,
-            child: const Icon(
-              Icons.more_horiz,
-              // size: 40,
-            ),
-          ),
-        ),
-      )
-    ];
     bool showApplyFriendBtn = !isSelf;
     if (scene == 'denylist') {
       showApplyFriendBtn = false;
     }
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
-      appBar: PageAppBar(
+      // backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: '',
-        backgroundColor: Colors.white,
-        rightDMActions: isSelf ? [] : rWidget,
+        // backgroundColor: Colors.white,
+        rightDMActions: isSelf
+            ? []
+            : [
+                SizedBox(
+                  width: 60,
+                  child: TextButton(
+                    onPressed: () {
+                      Get.to(
+                        () => ContactSettingPage(
+                          peerId: id,
+                          peerAvatar: avatar.value,
+                          peerAccount: account.value,
+                          peerNickname: nickname.value,
+                          peerGender: gender.value,
+                          peerTitle: title.value,
+                          peerSign: sign.value,
+                          peerRegion: region.value,
+                          peerSource: source.value,
+                          peerRemark: remark.value,
+                          peerTag: tag.value,
+                        ),
+                        transition: Transition.rightToLeft,
+                        popGesture: true, // 右滑，返回上一页
+                      )?.then((value) {
+                        initData();
+                        // iPrint("ContactSettingPage_back $value;");
+                      });
+                    },
+                    child: n.Padding(
+                      left: 10,
+                      right: 10,
+                      child: Icon(
+                        Icons.more_horiz,
+                        color: Theme.of(context).colorScheme.onPrimary,
+                        // size: 40,
+                      ),
+                    ),
+                  ),
+                )
+              ],
       ),
       body: SingleChildScrollView(
         child: Obx(
-          () => n.Column(
-            [
-              ContactCard(
-                id: id,
-                remark: remark.value,
-                nickname: nickname.value,
-                account: account.value,
-                avatar: avatar.value,
-                gender: gender.value,
-                region: region.value,
-                isBorder: true,
-                padding: const EdgeInsets.only(
-                  top: 8,
-                  right: 15.0,
-                  left: 15.0,
-                  bottom: 16.0,
+          () => n.Column([
+            ContactCard(
+              id: id,
+              remark: remark.value,
+              nickname: nickname.value,
+              account: account.value,
+              avatar: avatar.value,
+              gender: gender.value,
+              region: region.value,
+              isBorder: true,
+              lineWidth: 1.0,
+              padding: const EdgeInsets.only(
+                top: 8,
+                right: 15.0,
+                left: 15.0,
+                bottom: 16.0,
+              ),
+            ),
+            Visibility(
+              visible: !isSelf,
+              child: LabelRow(
+                label: tag.value.isEmpty ? 'remarks_tags'.tr : 'tags'.tr,
+                labelWidth: tag.value.isEmpty ? 96 : 40,
+                // rValue: tag.value.isEmpty ? null : tag.value,
+                isLine: true,
+                lineWidth: 1.0,
+                rightW: SizedBox(
+                  width: Get.width - 140,
+                  child: Text(
+                    (tag.value.endsWith(',')
+                        ? tag.value.substring(0, tag.value.length - 1)
+                        : tag.value),
+                    maxLines: 2,
+                    overflow: TextOverflow.ellipsis,
+                    textAlign: TextAlign.left,
+                    style: TextStyle(
+                      fontSize: 17.0,
+                      color: Theme.of(context).colorScheme.onPrimary,
+                    ),
+                  ),
                 ),
+                onPressed: () {
+                  Get.to(
+                    () => ContactSettingTagPage(
+                      peerId: id,
+                      peerAvatar: avatar.value,
+                      peerAccount: account.value,
+                      peerNickname: nickname.value,
+                      peerGender: gender.value,
+                      peerTitle: title.value,
+                      peerSign: sign.value,
+                      peerRegion: region.value,
+                      peerSource: source.value,
+                      peerRemark: remark.value,
+                      peerTag: tag,
+                    ),
+                    transition: Transition.rightToLeft,
+                    popGesture: true, // 右滑，返回上一页
+                  )?.then((value) {
+                    debugPrint(
+                        "PeopleInfoPage_ContactSettingTagPage_back then $value");
+                    if (value != null && value is String && value.isNotEmpty) {
+                      remark.value = value.toString();
+                    }
+                  });
+                },
               ),
-              Visibility(
-                visible: !isSelf,
-                child: LabelRow(
-                  label: tag.value.isEmpty ? 'remarks_tags'.tr : 'tags'.tr,
-                  labelWidth: tag.value.isEmpty ? 96 : 40,
-                  // rValue: tag.value.isEmpty ? null : tag.value,
-                  isLine: true,
-                  rightW: SizedBox(
-                    width: Get.width - 140,
-                    child: Text(
-                      (tag.value.endsWith(',')
-                          ? tag.value.substring(0, tag.value.length - 1)
-                          : tag.value),
-                      maxLines: 2,
-                      overflow: TextOverflow.ellipsis,
-                      textAlign: TextAlign.left,
-                      style: const TextStyle(
-                        fontSize: 17.0,
-                        color: AppColors.MainTextColor,
-                      ),
+            ),
+            /*
+          Visibility(
+            visible: !isSelf,
+            child: LabelRow(
+              label: 'friend_permissions'.tr,
+              onPressed: () {
+                Get.to(
+                  () => FriendsPermissionsPage(),
+                  transition: Transition.rightToLeft,
+                  popGesture: true, // 右滑，返回上一页
+                );
+              },
+            ),
+          ),
+          const Space(),
+          LabelRow(
+            label: 'moment'.tr,
+            isLine: true,
+            onPressed: () => Get.to(()=>
+              const FriendCirclePage(),
+              transition: Transition.rightToLeft,
+              popGesture: true, // 右滑，返回上一页
+            ),
+          ),
+          */
+            if (isFriend.value == 1 || scene == 'denylist')
+              LabelRow(
+                label: 'more_info'.tr,
+                isLine: false,
+                onPressed: () => Navigator.push(
+                  context,
+                  CupertinoPageRoute(
+                    // “右滑返回上一页”功能
+                    builder: (_) => PeopleInfoMorePage(
+                      id: id,
                     ),
                   ),
-                  onPressed: () {
-                    Get.to(
-                      () => ContactSettingTagPage(
-                        peerId: id,
-                        peerAvatar: avatar.value,
-                        peerAccount: account.value,
-                        peerNickname: nickname.value,
-                        peerGender: gender.value,
-                        peerTitle: title.value,
-                        peerSign: sign.value,
-                        peerRegion: region.value,
-                        peerSource: source.value,
-                        peerRemark: remark.value,
-                        peerTag: tag,
-                      ),
-                      transition: Transition.rightToLeft,
-                      popGesture: true, // 右滑，返回上一页
-                    )?.then((value) {
-                      debugPrint(
-                          "PeopleInfoPage_ContactSettingTagPage_back then $value");
-                      if (value != null &&
-                          value is String &&
-                          value.isNotEmpty) {
-                        remark.value = value.toString();
-                      }
-                    });
-                  },
                 ),
               ),
-              /*
+            HorizontalLine(
+              height: 10,
+              color: Theme.of(context).colorScheme.primary,
+            ),
+            isFriend.value == 1 || scene == 'denylist'
+                ? Visibility(
+                    visible: !isSelf,
+                    child: ButtonRow(
+                        margin: const EdgeInsets.only(bottom: 0.0),
+                        text: 'message_call'.tr,
+                        isBorder: true,
+                        lineWidth: 1.0,
+                        onPressed: () {
+                          String peerTitle = remark.value;
+                          if (peerTitle.isEmpty) {
+                            peerTitle = nickname.value;
+                          }
+                          if (peerTitle.isEmpty) {
+                            peerTitle = account.value;
+                          }
+                          Get.to(
+                            () => ChatPage(
+                              peerId: id,
+                              peerTitle: peerTitle,
+                              peerAvatar: avatar.value,
+                              peerSign: sign.value,
+                              type: 'C2C',
+                            ),
+                            transition: Transition.rightToLeft,
+                            popGesture: true, // 右滑，返回上一页
+                          );
+                        }),
+                  )
+                : const SizedBox.shrink(),
+            if (isFriend.value == 1)
               Visibility(
                 visible: !isSelf,
-                child: LabelRow(
-                  label: 'friend_permissions'.tr,
+                child: ButtonRow(
+                  text: 'voice_call'.tr,
+                  isBorder: true,
+                  lineWidth: 1.0,
                   onPressed: () {
-                    Get.to(
-                      () => FriendsPermissionsPage(),
-                      transition: Transition.rightToLeft,
-                      popGesture: true, // 右滑，返回上一页
+                    openCallScreen(
+                      ContactModel.fromMap({
+                        "id": id,
+                        "nickname": nickname.value,
+                        "avatar": avatar.value,
+                        "sign": sign.value,
+                      }),
+                      {
+                        'media': 'audio',
+                      },
                     );
                   },
                 ),
               ),
-              const Space(),
-              LabelRow(
-                label: 'moment'.tr,
-                isLine: true,
-                onPressed: () => Get.to(()=>
-                  const FriendCirclePage(),
-                  transition: Transition.rightToLeft,
-                  popGesture: true, // 右滑，返回上一页
-                ),
-              ),
-              */
-              if (isFriend.value == 1 || scene == 'denylist')
-                LabelRow(
-                  label: 'more_info'.tr,
-                  isLine: false,
-                  onPressed: () => Navigator.push(
-                    context,
-                    CupertinoPageRoute(
-                      // “右滑返回上一页”功能
-                      builder: (_) => PeopleInfoMorePage(
-                        id: id,
+            isFriend.value == 1
+                ? Visibility(
+                    visible: !isSelf,
+                    child: ButtonRow(
+                      text: 'video_call'.tr,
+                      isBorder: true,
+                      lineWidth: 1.0,
+                      onPressed: () {
+                        openCallScreen(
+                          ContactModel.fromMap({
+                            "id": id,
+                            "nickname": nickname.value,
+                            "avatar": avatar.value,
+                            "sign": sign.value,
+                          }),
+                          {},
+                        );
+                      },
+                    ),
+                  )
+                : Visibility(
+                    visible: showApplyFriendBtn,
+                    child: ButtonRow(
+                      text: 'add_to_contacts'.tr,
+                      onPressed: () => Get.to(
+                        () => ApplyFriendPage(
+                          id,
+                          nickname.value,
+                          avatar.value,
+                          region.value,
+                          source: source.value,
+                        ),
+                        transition: Transition.rightToLeft,
+                        popGesture: true, // 右滑，返回上一页
                       ),
                     ),
                   ),
-                ),
-              const Space(),
-              isFriend.value == 1 || scene == 'denylist'
-                  ? Visibility(
-                      visible: !isSelf,
-                      child: ButtonRow(
-                          margin: const EdgeInsets.only(bottom: 0.0),
-                          text: 'message_call'.tr,
-                          isBorder: true,
-                          onPressed: () {
-                            String peerTitle = remark.value;
-                            if (peerTitle.isEmpty) {
-                              peerTitle = nickname.value;
-                            }
-                            if (peerTitle.isEmpty) {
-                              peerTitle = account.value;
-                            }
-                            Get.to(
-                              () => ChatPage(
-                                peerId: id,
-                                peerTitle: peerTitle,
-                                peerAvatar: avatar.value,
-                                peerSign: sign.value,
-                                type: 'C2C',
-                              ),
-                              transition: Transition.rightToLeft,
-                              popGesture: true, // 右滑，返回上一页
-                            );
-                          }),
-                    )
-                  : const SizedBox.shrink(),
-              if (isFriend.value == 1)
-                Visibility(
-                  visible: !isSelf,
-                  child: ButtonRow(
-                    text: 'voice_call'.tr,
-                    isBorder: true,
-                    onPressed: () {
-                      openCallScreen(
-                        ContactModel.fromMap({
-                          "id": id,
-                          "nickname": nickname.value,
-                          "avatar": avatar.value,
-                          "sign": sign.value,
-                        }),
-                        {
-                          'media': 'audio',
-                        },
-                      );
-                    },
+            if (scene == 'denylist')
+              n.Padding(
+                top: 20,
+                child: n.Row([
+                  Icon(
+                    Icons.warning_amber_rounded,
+                    color: Theme.of(context).colorScheme.error,
                   ),
-                ),
-              isFriend.value == 1
-                  ? Visibility(
-                      visible: !isSelf,
-                      child: ButtonRow(
-                        text: 'video_call'.tr,
-                        onPressed: () {
-                          openCallScreen(
-                            ContactModel.fromMap({
-                              "id": id,
-                              "nickname": nickname.value,
-                              "avatar": avatar.value,
-                              "sign": sign.value,
-                            }),
-                            {},
-                          );
-                        },
-                      ),
-                    )
-                  : Visibility(
-                      visible: showApplyFriendBtn,
-                      child: ButtonRow(
-                        text: 'add_to_contacts'.tr,
-                        onPressed: () => Get.to(
-                          () => ApplyFriendPage(
-                            id,
-                            nickname.value,
-                            avatar.value,
-                            region.value,
-                            source: source.value,
-                          ),
-                          transition: Transition.rightToLeft,
-                          popGesture: true, // 右滑，返回上一页
-                        ),
-                      ),
+                  const Space(width: 4),
+                  Expanded(
+                      child: Text(
+                    'added_to_blacklist_tips'.tr,
+                    style: TextStyle(
+                      color: Theme.of(context).colorScheme.onBackground,
                     ),
-              if (scene == 'denylist')
-                n.Padding(
-                  top: 20,
-                  child: n.Row([
-                    const Icon(Icons.warning_amber_rounded, color: Colors.red),
-                    const Space(width: 4),
-                    Expanded(child: Text('added_to_blacklist_tips'.tr)),
-                  ])
-                    // 内容居中
-                    ..mainAxisAlignment = MainAxisAlignment.center,
-                ),
-            ],
-          ),
+                  )),
+                ])
+                  // 内容居中
+                  ..mainAxisAlignment = MainAxisAlignment.center,
+              ),
+          ]),
         ),
       ),
     );
@@ -378,65 +399,68 @@ class PeopleInfoMorePage extends StatelessWidget {
     initData();
     // bool isSelf = UserRepoLocal.to.currentUid == id;
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'social_profile'.tr,
         // backgroundColor: Colors.white,
       ),
       body: SingleChildScrollView(
         child: Obx(
-          () => n.Column(
-            [
-              LabelRow(
-                label: 'mutual_groups_with_her'.tr,
-                // 10个
-                rValue: 'num_unit'.trArgs(['$groupCount']),
-                isLine: false,
+          () => n.Column([
+            LabelRow(
+              label: 'mutual_groups_with_her'.tr,
+              // 10个
+              rValue: 'num_unit'.trArgs(['$groupCount']),
+              isLine: true,
+              lineWidth: 1.0,
+              isRight: false,
+              padding: const EdgeInsets.only(top: 15.0, bottom: 15.0),
+              margin: const EdgeInsets.only(bottom: 10.0),
+              // onPressed: () => Get.to(()=> const FriendCirclePage()),
+            ),
+            Visibility(
+              visible: strNoEmpty(sign.value),
+              child: LabelRow(
+                label: 'signature'.tr,
+                // rValue: sign,
+                rightW: SizedBox(
+                  width: Get.width - 100,
+                  child: n.Row([
+                    const SizedBox(width: 20),
+                    // use Expanded only within a Column, Row or Flex
+                    Expanded(
+                        child: Text(
+                      sign.value,
+                      maxLines: 8,
+                      overflow: TextOverflow.ellipsis,
+                      style: TextStyle(
+                        color: Theme.of(context)
+                            .colorScheme
+                            .onPrimary
+                            .withOpacity(0.8),
+                        fontWeight: FontWeight.w400,
+                      ),
+                    ))
+                  ]),
+                ),
+                isLine: true,
+                lineWidth: 1.0,
                 isRight: false,
-                padding: const EdgeInsets.only(top: 15.0, bottom: 15.0),
-                margin: const EdgeInsets.only(bottom: 10.0),
-
+                isSpacer: false,
                 // onPressed: () => Get.to(()=> const FriendCirclePage()),
               ),
-              Visibility(
-                visible: strNoEmpty(sign.value),
-                child: LabelRow(
-                  label: 'signature'.tr,
-                  // rValue: sign,
-                  rightW: SizedBox(
-                    width: Get.width - 100,
-                    child: n.Row([
-                      const SizedBox(width: 20),
-                      // use Expanded only within a Column, Row or Flex
-                      Expanded(
-                          child: Text(
-                        sign.value,
-                        maxLines: 8,
-                        overflow: TextOverflow.ellipsis,
-                        style: TextStyle(
-                          color: AppColors.MainTextColor.withOpacity(0.7),
-                          fontWeight: FontWeight.w400,
-                        ),
-                      ))
-                    ]),
-                  ),
-                  isLine: true,
-                  isRight: false,
-                  isSpacer: false,
-                  // onPressed: () => Get.to(()=> const FriendCirclePage()),
-                ),
+            ),
+            if (source.value.isNotEmpty)
+              LabelRow(
+                label: 'source'.tr,
+                rValue: '$sourcePrefix ${source.value}',
+                // rValue: getSourceTr(source.value),
+                isLine: true,
+                lineWidth: 1.0,
+                isRight: false,
+                onPressed: () {},
               ),
-              if (source.value.isNotEmpty)
-                LabelRow(
-                  label: 'source'.tr,
-                  rValue: '$sourcePrefix ${source.value}',
-                  // rValue: getSourceTr(source.value),
-                  isLine: false,
-                  isRight: false,
-                  onPressed: () {},
-                ),
-            ],
-          ),
+          ]),
         ),
       ),
     );
diff --git a/lib/page/single/upgrade.dart b/lib/page/single/upgrade.dart
index 6924f42..d45d93f 100644
--- a/lib/page/single/upgrade.dart
+++ b/lib/page/single/upgrade.dart
@@ -3,13 +3,14 @@ import 'dart:io';
 import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
-import 'package:imboy/component/helper/func.dart';
-import 'package:imboy/config/const.dart';
-import 'package:imboy/config/init.dart';
 import 'package:r_upgrade/r_upgrade.dart';
 import 'package:niku/namespace.dart' as n;
 import 'package:permission_handler/permission_handler.dart';
 
+import 'package:imboy/component/helper/func.dart';
+import 'package:imboy/config/const.dart';
+import 'package:imboy/config/init.dart';
+
 class UpgradePage extends StatefulWidget {
   /// apk更新url
   final String downLoadUrl;
diff --git a/lib/page/uqrcode/uqrcode_view.dart b/lib/page/uqrcode/uqrcode_view.dart
index 56cbe42..81b85d6 100644
--- a/lib/page/uqrcode/uqrcode_view.dart
+++ b/lib/page/uqrcode/uqrcode_view.dart
@@ -1,14 +1,17 @@
 import 'package:flutter/material.dart';
 import 'package:get/get.dart';
+import 'package:imboy/config/theme.dart';
+import 'package:niku/namespace.dart' as n;
+import 'package:qr_flutter/qr_flutter.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/helper/repaint_boundary.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/line.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/scanner/scanner_view.dart';
 import 'package:imboy/store/repository/user_repo_local.dart';
-import 'package:niku/namespace.dart' as n;
-import 'package:qr_flutter/qr_flutter.dart';
 
 class UqrcodePage extends StatelessWidget {
   final GlobalKey globalKey = GlobalKey();
@@ -24,8 +27,9 @@ class UqrcodePage extends StatelessWidget {
     int gender = UserRepoLocal.to.current.gender;
 
     return Scaffold(
-      backgroundColor: AppColors.AppBarColor,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: '',
         rightDMActions: <Widget>[
           InkWell(
@@ -42,6 +46,9 @@ class UqrcodePage extends StatelessWidget {
             ),
             onTap: () {
               Get.bottomSheet(
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 SizedBox(
                   width: Get.width,
                   height: 172,
@@ -51,8 +58,8 @@ class UqrcodePage extends StatelessWidget {
                         child: Text(
                           'save_qr_code'.tr,
                           textAlign: TextAlign.center,
-                          style: const TextStyle(
-                            color: AppColors.ItemOnColor,
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
                             fontSize: 16.0,
                             fontWeight: FontWeight.normal,
                           ),
@@ -83,23 +90,26 @@ class UqrcodePage extends StatelessWidget {
                         child: Text(
                           'scan_qr_code'.tr,
                           textAlign: TextAlign.center,
-                          style: const TextStyle(
-                            color: AppColors.ItemOnColor,
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
                             fontSize: 16.0,
                             fontWeight: FontWeight.normal,
                           ),
                         ),
                       ),
                     ),
-                    const HorizontalLine(height: 6),
+                    HorizontalLine(
+                      height: 6,
+                      color: Theme.of(context).colorScheme.primary,
+                    ),
                     Center(
                       child: TextButton(
                         onPressed: () => Get.close(),
                         child: Text(
                           'button_cancel'.tr,
                           textAlign: TextAlign.center,
-                          style: const TextStyle(
-                            color: AppColors.ItemOnColor,
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
                             fontSize: 16.0,
                             fontWeight: FontWeight.normal,
                           ),
@@ -108,7 +118,6 @@ class UqrcodePage extends StatelessWidget {
                     )
                   ]),
                 ),
-                backgroundColor: Colors.white,
                 //改变shape这里即可
                 shape: const RoundedRectangleBorder(
                   borderRadius: BorderRadius.only(
@@ -130,7 +139,8 @@ class UqrcodePage extends StatelessWidget {
           key: globalKey,
           child: Card(
             shape: RoundedRectangleBorder(
-                borderRadius: BorderRadiusDirectional.circular(20)),
+              borderRadius: BorderRadiusDirectional.circular(20),
+            ),
             clipBehavior: Clip.antiAlias,
             child: Container(
               width: Get.width,
@@ -148,8 +158,18 @@ class UqrcodePage extends StatelessWidget {
                       image: dynamicAvatar(UserRepoLocal.to.current.avatar),
                     ),
                   ),
-                  title: Text(UserRepoLocal.to.current.nickname),
-                  subtitle: Text(UserRepoLocal.to.current.region),
+                  title: Text(
+                    UserRepoLocal.to.current.nickname,
+                    style: const TextStyle(
+                      color: lightOnPrimaryColor,
+                    ),
+                  ),
+                  subtitle: Text(
+                    UserRepoLocal.to.current.region,
+                    style: const TextStyle(
+                      color: lightOnPrimaryColor,
+                    ),
+                  ),
                   trailing: genderIcon(gender),
                 ),
                 Expanded(
@@ -189,7 +209,12 @@ class UqrcodePage extends StatelessWidget {
                 n.Padding(
                   // top: 10,
                   bottom: 15,
-                  child: Text('scan_qrcode_add_friend'.tr),
+                  child: Text(
+                    'scan_qrcode_add_friend'.tr,
+                    style: const TextStyle(
+                      color: lightOnPrimaryColor,
+                    ),
+                  ),
                 ),
               ])
                 // 内容居中
diff --git a/lib/page/user_tag/contact_tag_detail/contact_tag_detail_view.dart b/lib/page/user_tag/contact_tag_detail/contact_tag_detail_view.dart
index 3245055..e82171f 100644
--- a/lib/page/user_tag/contact_tag_detail/contact_tag_detail_view.dart
+++ b/lib/page/user_tag/contact_tag_detail/contact_tag_detail_view.dart
@@ -10,7 +10,7 @@ import 'package:imboy/component/ui/common.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/line.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/contact/contact/contact_logic.dart';
 import 'package:imboy/page/user_tag/contact_tag_list/contact_tag_list_logic.dart';
 import 'package:imboy/page/user_tag/user_tag_save/user_tag_save_view.dart';
@@ -53,12 +53,16 @@ class ContactTagDetailPage extends StatelessWidget {
   Widget build(BuildContext context) {
     loadData();
     return Scaffold(
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         titleWidget: Obx(() => Text('${state.tagName} (${state.refererTime})')),
         rightDMActions: [
           InkWell(
             onTap: () {
               Get.bottomSheet(
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 SizedBox(
                   width: Get.width,
                   height: 172,
@@ -76,6 +80,9 @@ class ContactTagDetailPage extends StatelessWidget {
                         ),
                         onPressed: () async {
                           Get.bottomSheet(
+                            backgroundColor: Get.isDarkMode
+                                ? const Color.fromRGBO(80, 80, 80, 1)
+                                : const Color.fromRGBO(240, 240, 240, 1),
                             n.Padding(
                               // top: 80,
                               child: UserTagSavePage(tag: tag, scene: 'friend'),
@@ -175,7 +182,9 @@ class ContactTagDetailPage extends StatelessWidget {
                                 )
                               ]),
                             ),
-                            backgroundColor: Colors.white,
+                            backgroundColor: Get.isDarkMode
+                                ? const Color.fromRGBO(80, 80, 80, 1)
+                                : const Color.fromRGBO(240, 240, 240, 1),
                             //改变shape这里即可
                             shape: const RoundedRectangleBorder(
                               borderRadius: BorderRadius.only(
@@ -213,7 +222,6 @@ class ContactTagDetailPage extends StatelessWidget {
                     )
                   ]),
                 ),
-                backgroundColor: Colors.white,
                 //改变shape这里即可
                 shape: const RoundedRectangleBorder(
                   borderRadius: BorderRadius.only(
@@ -227,8 +235,11 @@ class ContactTagDetailPage extends StatelessWidget {
             child: n.Padding(
               left: 10,
               right: 10,
-              child: const Icon(
+              top: 10,
+              bottom: 10,
+              child: Icon(
                 Icons.more_horiz,
+                color: Theme.of(context).colorScheme.onPrimary,
                 // size: 40,
               ),
             ),
@@ -420,7 +431,10 @@ class ContactTagDetailPage extends StatelessWidget {
                                         ],
                                       ),
                                     ),
-                                    backgroundColor: Colors.white,
+                                    backgroundColor: Get.isDarkMode
+                                        ? const Color.fromRGBO(80, 80, 80, 1)
+                                        : const Color.fromRGBO(
+                                            240, 240, 240, 1),
                                     //改变shape这里即可
                                     shape: const RoundedRectangleBorder(
                                       borderRadius: BorderRadius.only(
@@ -503,12 +517,16 @@ class ContactTagDetailPage extends StatelessWidget {
                         right: 40,
                         child: Text(
                           'button_add'.tr,
-                          style: const TextStyle(color: AppColors.ItemOnColor),
+                          style: TextStyle(
+                            color: Theme.of(context).colorScheme.onPrimary,
+                            fontSize: 16.0,
+                            fontWeight: FontWeight.normal,
+                          ),
                         ),
                       ),
                       style: ButtonStyle(
                         backgroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.AppBarColor,
+                          Theme.of(context).colorScheme.background,
                         ),
                         minimumSize:
                             MaterialStateProperty.all(const Size(60, 40)),
@@ -641,7 +659,7 @@ class SelectFriendPage extends StatelessWidget {
                     decoration: const BoxDecoration(
                       border: Border(
                         top: BorderSide(
-                          color: AppColors.LineColor,
+                          // color: AppColors.LineColor,
                           width: 0.2,
                         ),
                       ),
@@ -713,7 +731,7 @@ class SelectFriendPage extends StatelessWidget {
                 style: selectedContact.isNotEmpty
                     ? ButtonStyle(
                         backgroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.primaryElement,
+                          Colors.green,
                         ),
                         foregroundColor: MaterialStateProperty.all<Color>(
                           Colors.white,
@@ -725,10 +743,10 @@ class SelectFriendPage extends StatelessWidget {
                       )
                     : ButtonStyle(
                         backgroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.AppBarColor,
+                          Colors.green.withOpacity(0.6),
                         ),
                         foregroundColor: MaterialStateProperty.all<Color>(
-                          AppColors.LineColor,
+                          Colors.white.withOpacity(0.6),
                         ),
                         minimumSize:
                             MaterialStateProperty.all(const Size(60, 40)),
@@ -740,7 +758,6 @@ class SelectFriendPage extends StatelessWidget {
           )
         ],
       ),
-      backgroundColor: Colors.white,
       body: Obx(
         () => n.Stack([
           RefreshIndicator(
diff --git a/lib/page/user_tag/contact_tag_list/contact_tag_list_view.dart b/lib/page/user_tag/contact_tag_list/contact_tag_list_view.dart
index 8f650dd..9fe1223 100644
--- a/lib/page/user_tag/contact_tag_list/contact_tag_list_view.dart
+++ b/lib/page/user_tag/contact_tag_list/contact_tag_list_view.dart
@@ -6,7 +6,7 @@ import 'package:imboy/component/search.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/line.dart';
 import 'package:imboy/component/ui/nodata_view.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/contact_tag_detail/contact_tag_detail_view.dart';
 import 'package:imboy/page/user_tag/user_tag_save/user_tag_save_view.dart';
 import 'package:imboy/store/model/user_tag_model.dart';
@@ -71,6 +71,9 @@ class ContactTagListPage extends StatelessWidget {
             // foregroundColor: Colors.white,
             onPressed: (_) async {
               Get.bottomSheet(
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 n.Padding(
                   // top: 80,
                   child: UserTagSavePage(
@@ -94,71 +97,70 @@ class ContactTagListPage extends StatelessWidget {
                 SizedBox(
                   width: Get.width,
                   height: 172,
-                  child: n.Wrap(
-                    [
-                      Center(
-                        child: n.Padding(
-                          top: 16,
-                          bottom: 16,
-                          child: Text(
-                            'delete_tag_tips'.tr,
-                            textAlign: TextAlign.center,
-                            style: const TextStyle(
-                              // color: Colors.white,
-                              fontSize: 16.0,
-                              fontWeight: FontWeight.normal,
-                            ),
+                  child: n.Wrap([
+                    Center(
+                      child: n.Padding(
+                        top: 16,
+                        bottom: 16,
+                        child: Text(
+                          'delete_tag_tips'.tr,
+                          textAlign: TextAlign.center,
+                          style: const TextStyle(
+                            // color: Colors.white,
+                            fontSize: 16.0,
+                            fontWeight: FontWeight.normal,
                           ),
                         ),
                       ),
-                      const Divider(),
-                      Center(
-                        child: TextButton(
-                          onPressed: () async {
-                            const String scene = 'friend';
-                            bool res = await logic.deleteTag(
-                              tagId: obj.tagId,
-                              tagName: obj.name,
-                              scene: scene,
-                            );
-                            if (res) {
-                              Get.closeAllBottomSheets();
-                              EasyLoading.showSuccess('tip_success'.tr);
-                            } else {
-                              EasyLoading.showError('tip_failed'.tr);
-                            }
-                          },
-                          child: Text(
-                            'button_delete'.tr,
-                            textAlign: TextAlign.center,
-                            style: const TextStyle(
-                              color: Colors.red,
-                              fontSize: 16.0,
-                              fontWeight: FontWeight.normal,
-                            ),
+                    ),
+                    const Divider(),
+                    Center(
+                      child: TextButton(
+                        onPressed: () async {
+                          const String scene = 'friend';
+                          bool res = await logic.deleteTag(
+                            tagId: obj.tagId,
+                            tagName: obj.name,
+                            scene: scene,
+                          );
+                          if (res) {
+                            Get.closeAllBottomSheets();
+                            EasyLoading.showSuccess('tip_success'.tr);
+                          } else {
+                            EasyLoading.showError('tip_failed'.tr);
+                          }
+                        },
+                        child: Text(
+                          'button_delete'.tr,
+                          textAlign: TextAlign.center,
+                          style: const TextStyle(
+                            color: Colors.red,
+                            fontSize: 16.0,
+                            fontWeight: FontWeight.normal,
                           ),
                         ),
                       ),
-                      const HorizontalLine(height: 6),
-                      Center(
-                        child: TextButton(
-                          onPressed: () => Get.close(),
-                          child: Text(
-                            'button_cancel'.tr,
-                            textAlign: TextAlign.center,
-                            style: const TextStyle(
-                              // color: Colors.white,
-                              fontSize: 16.0,
-                              fontWeight: FontWeight.normal,
-                            ),
+                    ),
+                    const HorizontalLine(height: 6),
+                    Center(
+                      child: TextButton(
+                        onPressed: () => Get.close(),
+                        child: Text(
+                          'button_cancel'.tr,
+                          textAlign: TextAlign.center,
+                          style: const TextStyle(
+                            // color: Colors.white,
+                            fontSize: 16.0,
+                            fontWeight: FontWeight.normal,
                           ),
                         ),
-                      )
-                    ],
-                  ),
+                      ),
+                    )
+                  ]),
                 ),
-                backgroundColor: Colors.white,
-                //改变shape这里即可
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1), //改变shape这里即可
                 shape: const RoundedRectangleBorder(
                   borderRadius: BorderRadius.only(
                     topLeft: Radius.circular(20.0),
@@ -176,7 +178,7 @@ class ContactTagListPage extends StatelessWidget {
       child: Container(
         // width: Get.width - 24,
         // height: Get.height - 125,
-        color: Colors.white,
+        // color: Colors.white,
         margin: const EdgeInsets.fromLTRB(0, 0, 0, 2),
         padding: const EdgeInsets.all(10),
         // decoration: BoxDecoration(
@@ -204,10 +206,10 @@ class ContactTagListPage extends StatelessWidget {
               ),
               Text(
                 ' (${obj.refererTime})',
-                style: const TextStyle(
-                  color: AppColors.MainTextColor,
-                  // fontSize: 14.0,
-                ),
+                // style: const TextStyle(
+                //   color: AppColors.MainTextColor,
+                //   // fontSize: 14.0,
+                // ),
               ),
             ]),
             n.Row([
@@ -218,11 +220,12 @@ class ContactTagListPage extends StatelessWidget {
                     maxLines: 1,
                     overflow: TextOverflow.ellipsis,
                     style: const TextStyle(
-                      color: AppColors.MainTextColor,
+                      // color: AppColors.MainTextColor,
                       fontSize: 14.0,
                     ),
                   )),
             ]),
+            const HorizontalLine(height: 1.0)
           ]),
         ),
       ),
@@ -233,20 +236,25 @@ class ContactTagListPage extends StatelessWidget {
   Widget build(BuildContext context) {
     initData();
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
-      appBar: PageAppBar(
+      backgroundColor: Theme.of(context).colorScheme.background,
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         title: 'contact_tags'.tr,
         rightDMActions: <Widget>[
           InkWell(
-            child: const SizedBox(
+            child: SizedBox(
               width: 46.0,
-              child: Icon(
-                Icons.add,
-                color: Colors.black54,
+              child: n.Padding(
+                top: 10,
+                bottom: 10,
+                child: const Icon(Icons.add),
               ),
             ),
             onTap: () {
               Get.bottomSheet(
+                backgroundColor: Get.isDarkMode
+                    ? const Color.fromRGBO(80, 80, 80, 1)
+                    : const Color.fromRGBO(240, 240, 240, 1),
                 n.Padding(
                   // top: 80,
                   child: UserTagSavePage(scene: 'friend'),
diff --git a/lib/page/user_tag/user_tag_relation/user_tag_relation_logic.dart b/lib/page/user_tag/user_tag_relation/user_tag_relation_logic.dart
index 85f21ce..81fa54a 100644
--- a/lib/page/user_tag/user_tag_relation/user_tag_relation_logic.dart
+++ b/lib/page/user_tag/user_tag_relation/user_tag_relation_logic.dart
@@ -18,7 +18,7 @@ class UserTagRelationLogic extends GetxController {
     update([valueChanged]);
   }
 
-  Future<bool> add(String scene, String objectId, List<String> tag) async {
+  Future<bool> add(String scene, String objectId, List<dynamic> tag) async {
     bool res = await UserTagProvider().relationAdd(
       scene: scene,
       objectId: objectId,
diff --git a/lib/page/user_tag/user_tag_relation/user_tag_relation_view.dart b/lib/page/user_tag/user_tag_relation/user_tag_relation_view.dart
index 381fc84..0c0a946 100644
--- a/lib/page/user_tag/user_tag_relation/user_tag_relation_view.dart
+++ b/lib/page/user_tag/user_tag_relation/user_tag_relation_view.dart
@@ -12,7 +12,6 @@ import 'package:get/get.dart';
 import 'package:imboy/component/helper/list.dart';
 import 'package:imboy/component/ui/common_bar.dart';
 import 'package:imboy/component/ui/tag.dart';
-import 'package:imboy/config/const.dart';
 
 // ignore: implementation_imports
 import 'package:textfield_tags/textfield_tags.dart';
@@ -65,7 +64,7 @@ class UserTagRelationPage extends StatelessWidget {
     state.tagController.addListener(() {
       bool diff =
           listDiff(state.tagItems.toList(), state.tagController.getTags);
-      state.tagItems.value = state.tagController.getTags!;
+      state.tagItems.value = state.tagController.getTags! as List<String>;
       logic.valueOnChange(diff);
       if (diff) {
         state.tagController.setError = 'need_submit_effect'.tr;
@@ -81,9 +80,8 @@ class UserTagRelationPage extends StatelessWidget {
       textfieldTagsController: state.tagController,
       initialTags: state.tagItems,
       textSeparators: const [' ', ','],
-      // textSeparators: const [','],
       letterCase: LetterCase.normal,
-      validator: (String tag) {
+      validator: (dynamic tag) {
         bool diff = listDiff(
           state.tagItems,
           state.tagController.getTags,
@@ -93,7 +91,7 @@ class UserTagRelationPage extends StatelessWidget {
         logic.valueOnChange(diff);
         if (tag.length > 14) {
           // 最最最最最最最最最最最最最最1
-          return 'error_invalid'.trArgs(['14']);
+          return 'up_to_words'.trArgs(['14']);
         }
         if (state.tagController.getTags != null &&
             state.tagController.getTags!.contains(tag)) {
@@ -102,95 +100,97 @@ class UserTagRelationPage extends StatelessWidget {
         }
         return null;
       },
-
-      inputfieldBuilder:
-          (context, tecController, fn, error, onChanged, onSubmitted) {
-        return ((context, scController, tags, onTagDelete) {
-          return Padding(
-            padding: const EdgeInsets.symmetric(horizontal: 10.0),
-            child: TextField(
-              // keyboardType: TextInputType.multiline,
-              // minLines: 1,
-              // maxLines: null,
-              controller: tecController,
-              // focusNode: fn,
-              decoration: InputDecoration(
-                border: UnderlineInputBorder(
-                  borderSide:
-                      BorderSide(color: tagSelectedBackgroundColor, width: 1.0),
-                ),
-                focusedBorder: UnderlineInputBorder(
-                  borderSide:
-                      BorderSide(color: tagSelectedBackgroundColor, width: 1.0),
-                ),
-                // helperText: 'all_tags'.tr,
-                helperStyle: TextStyle(
-                  color: tagSelectedBackgroundColor,
-                ),
-                hintText:
-                    state.tagController.hasTags ? '' : 'select_or_enter_tag'.tr,
-                errorText: error,
-                prefixIconConstraints:
-                    BoxConstraints(maxWidth: state.distanceToField * 1.0),
-                prefixIcon: tags.isEmpty
-                    ? null
-                    : SingleChildScrollView(
-                        controller: scController,
-                        scrollDirection: Axis.vertical,
-                        child: Wrap(
-                          // runSpacing: 7.0,
-                          children: (tags.map((String tag) {
-                            return TagItem(
-                              tag: tag,
-                              onTagDelete: (String tag) {
-                                onTagDelete(tag);
-                                final state2 =
-                                    StateProvider.of<FilterState<String>>(
-                                        context,
-                                        rebuildOnChange: true);
-                                state2.removeSelectedItem(tag);
-                              },
-                              backgroundColor: tagBackgroundColor,
-                              tagSelectedColor: tagSelectedColor,
-                              selectedBackgroundColor:
-                                  tagSelectedBackgroundColor,
-                            );
-                          }).toList()),
-                        )),
+      inputFieldBuilder: (
+        BuildContext context,
+        InputFieldValues<dynamic> inputFieldValues,
+      ) {
+        return Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 10.0),
+          child: TextField(
+            // keyboardType: TextInputType.multiline,
+            // minLines: 1,
+            // maxLines: null,
+            controller: inputFieldValues.textEditingController,
+            focusNode: inputFieldValues.focusNode,
+            // focusNode: fn,
+            decoration: InputDecoration(
+              border: UnderlineInputBorder(
+                borderSide:
+                    BorderSide(color: tagSelectedBackgroundColor, width: 1.0),
+              ),
+              focusedBorder: UnderlineInputBorder(
+                borderSide:
+                    BorderSide(color: tagSelectedBackgroundColor, width: 1.0),
+              ),
+              // helperText: 'all_tags'.tr,
+              helperStyle: TextStyle(
+                color: tagSelectedBackgroundColor,
               ),
-              onChanged: (String tag) {
-                debugPrint("input_onChanged $tag");
+              hintText: inputFieldValues.tags.isNotEmpty
+                  ? ''
+                  : 'select_or_enter_tag'.tr,
+              errorText: inputFieldValues.error,
+              prefixIconConstraints:
+                  BoxConstraints(maxWidth: state.distanceToField * 1.0),
+              prefixIcon: inputFieldValues.tags.isEmpty
+                  ? null
+                  : SingleChildScrollView(
+                      controller: inputFieldValues.tagScrollController,
+                      scrollDirection: Axis.vertical,
+                      child: Wrap(
+                        // runSpacing: 7.0,
+                        children: (inputFieldValues.tags.map((dynamic tag) {
+                          return TagItem(
+                            tag: tag,
+                            onTagDelete: (String tag) {
+                              inputFieldValues.onTagRemoved(tag);
+                              final state2 =
+                                  StateProvider.of<FilterState<String>>(context,
+                                      rebuildOnChange: true);
+                              state2.removeSelectedItem(tag);
+                            },
+                            backgroundColor: tagBackgroundColor,
+                            tagSelectedColor: tagSelectedColor,
+                            selectedBackgroundColor: tagSelectedBackgroundColor,
+                          );
+                        }).toList()),
+                      )),
+            ),
+            onChanged: (String tag) {
+              debugPrint("input_onChanged $tag");
+              logic.state.inputTimer?.cancel();
+              logic.state.inputTimer = null;
+              logic.state.lastInputTag = tag;
+
+              logic.state.inputTimer =
+                  Timer.periodic(const Duration(seconds: 2), (timer) {
+                inputFieldValues.onTagRemoved(logic.state.lastInputTag);
+                logic.state.lastInputTag = '';
                 logic.state.inputTimer?.cancel();
                 logic.state.inputTimer = null;
-                logic.state.lastInputTag = tag;
-
-                logic.state.inputTimer =
-                    Timer.periodic(const Duration(seconds: 2), (timer) {
-                  onSubmitted!(logic.state.lastInputTag);
-                  logic.state.lastInputTag = '';
-                  logic.state.inputTimer?.cancel();
-                  logic.state.inputTimer = null;
-                });
-              },
-              onSubmitted: (String tag) {
-                if (tag.isEmpty) {
-                  return;
-                }
-                // debugPrint("input_onSubmitted $tag");
-                final state2 = StateProvider.of<FilterState<String>>(context);
-                state2.addSelectedItem(tag);
-                if (state2.items != null &&
-                    state2.items!.contains(tag) == false) {
-                  List<String>? items = state2.items;
-                  items?.add(tag);
-                  state2.items = items;
-                }
-                state.tagController.addTag = tag;
-                // onSubmitted!(tag);
-              },
-            ),
-          );
-        });
+              });
+            },
+            onSubmitted: (String tag) {
+              if (tag.isEmpty) {
+                return;
+              }
+              debugPrint("input_onSubmitted $tag");
+              if (tag.length > 14) {
+                return;
+              }
+              final state2 = StateProvider.of<FilterState<String>>(context);
+              state2.addSelectedItem(tag);
+              if (state2.items != null &&
+                  state2.items!.contains(tag) == false) {
+                List<String>? items = state2.items;
+                items?.add(tag);
+                state2.items = items;
+              }
+              state.tagController.addTag(tag);
+              // onSubmitted!(tag);
+            },
+          ),
+        );
       },
     );
   }
@@ -200,26 +200,28 @@ class UserTagRelationPage extends StatelessWidget {
     initData();
 
     return Scaffold(
-      backgroundColor: AppColors.ChatBg,
+      backgroundColor: Theme.of(context).colorScheme.background,
       // backgroundColor: Colors.white,
-      appBar: PageAppBar(
+      appBar: NavAppBar(
         title: title ?? 'add_tag'.tr,
+        automaticallyImplyLeading: true,
       ),
       body: SizedBox(
         height: Get.height - 40,
         child: Obx(() => state.loaded.isTrue
             ? FilterListWidget<String>(
-                resetButtonText: 'button_setempty'.tr,
+                resetButtonText: 'button_set_empty'.tr,
                 applyButtonText: 'button_confirm'.tr,
+                selectedItemsText: 'selected_items'.trArgs(['']).trim(),
                 // hideHeader: true,
                 header: _buildHeader(),
                 enableOnlySingleSelection: false,
-                listData: state.recentTagItems,
-                selectedListData: state.tagItems,
+                listData: state.recentTagItems.value,
+                selectedListData: state.tagItems.value,
                 controlButtons: const [ControlButtonType.Reset],
                 themeData: FilterListThemeData(
                   context,
-                  backgroundColor: AppColors.ChatBg,
+                  backgroundColor: Theme.of(context).colorScheme.background,
                   choiceChipTheme: ChoiceChipThemeData(
                     backgroundColor: tagBackgroundColor,
                     selectedBackgroundColor: tagSelectedBackgroundColor,
@@ -227,13 +229,18 @@ class UserTagRelationPage extends StatelessWidget {
                     selectedTextStyle: TextStyle(color: tagSelectedColor),
                   ),
                   controlButtonBarTheme: const ControlButtonBarThemeData.raw(
-                    backgroundColor: AppColors.ChatBg,
+                    // backgroundColor: Theme.of(context).colorScheme.background,
                     controlButtonTheme: ControlButtonThemeData(
                       borderRadius: 4,
-                      primaryButtonTextStyle: TextStyle(color: Colors.white),
-                      primaryButtonBackgroundColor: Color(0xFF19B84D),
-                      textStyle: TextStyle(color: Color(0xFF19B84D)),
-                      backgroundColor: Color(0xFFE5E5E5),
+                      primaryButtonTextStyle: TextStyle(
+                        color: Colors.white,
+                      ),
+                      primaryButtonBackgroundColor: Colors.green,
+                      textStyle: TextStyle(
+                        color: Colors.white70,
+                      ),
+                      // backgroundColor: Theme.of(context).colorScheme.background,
+                      backgroundColor: Colors.grey,
                     ),
                     buttonSpacing: 20,
                     controlContainerDecoration: BoxDecoration(
@@ -245,7 +252,7 @@ class UserTagRelationPage extends StatelessWidget {
                   ),
                 ),
                 onApplyButtonClick: (list) async {
-                  List<String>? tag =
+                  List<dynamic>? tag =
                       state.tagController.getTags?.toSet().toList();
                   // state.tagController.getTags = tag?.toList();
                   // debugPrint("submit_tag ${tag?.length} ${tag.toString()}, ");
@@ -268,10 +275,11 @@ class UserTagRelationPage extends StatelessWidget {
                 },
                 onSelected: (String item, bool selected) {
                   if (selected) {
-                    state.tagController.addTag = item;
+                    state.tagController.addTag(item);
                   } else {
-                    state.tagController.removeTag = item;
-                    state.tagItems.value = state.tagController.getTags!;
+                    state.tagController.removeTag(item);
+                    state.tagItems.value =
+                        state.tagController.getTags! as List<String>;
                   }
                   // ignore: invalid_use_of_visible_for_testing_member, invalid_use_of_protected_member
                   state.tagController.notifyListeners();
diff --git a/lib/page/user_tag/user_tag_save/user_tag_save_view.dart b/lib/page/user_tag/user_tag_save/user_tag_save_view.dart
index fe54b2e..5ddf303 100644
--- a/lib/page/user_tag/user_tag_save/user_tag_save_view.dart
+++ b/lib/page/user_tag/user_tag_save/user_tag_save_view.dart
@@ -2,7 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart';
 import 'package:imboy/component/ui/common_bar.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/page/user_tag/contact_tag_detail/contact_tag_detail_logic.dart';
 import 'package:imboy/page/user_tag/contact_tag_list/contact_tag_list_logic.dart';
 import 'package:imboy/store/model/user_tag_model.dart';
@@ -30,7 +30,8 @@ class UserTagSavePage extends StatelessWidget {
     return Scaffold(
       // 输入框(TextField)被键盘遮挡解决方案
       resizeToAvoidBottomInset: false,
-      appBar: PageAppBar(
+      appBar: NavAppBar(
+        automaticallyImplyLeading: true,
         leading: InkWell(
           onTap: () {
             if (Get.isBottomSheetOpen ?? false) {
@@ -62,18 +63,20 @@ class UserTagSavePage extends StatelessWidget {
                 decoration: InputDecoration(
                     contentPadding: const EdgeInsets.fromLTRB(14, 0, 8, 0),
                     filled: true,
-                    fillColor: Colors.white,
+                    fillColor: Get.isDarkMode
+                        ? const Color.fromRGBO(70, 70, 70, 1.0)
+                        : Colors.white70,
                     focusedBorder: OutlineInputBorder(
                         borderRadius: BorderRadius.circular(3),
                         borderSide: const BorderSide(
                           width: 1.0,
-                          color: AppColors.AppBarColor,
+                          // color: AppColors.AppBarColor,
                         )),
                     enabledBorder: OutlineInputBorder(
                         borderRadius: BorderRadius.circular(3),
                         borderSide: const BorderSide(
                           width: 1.0,
-                          color: AppColors.AppBarColor,
+                          // color: AppColors.AppBarColor,
                         )),
                     errorBorder: OutlineInputBorder(
                       borderRadius: BorderRadius.circular(3),
@@ -171,12 +174,17 @@ class UserTagSavePage extends StatelessWidget {
                     child: Text(
                       'button_accomplish'.tr,
                       textAlign: TextAlign.center,
+                      style: TextStyle(
+                        color: Theme.of(context).colorScheme.onPrimary,
+                        fontSize: 16.0,
+                        fontWeight: FontWeight.normal,
+                      ),
                     ),
                   ),
                   style: state.valueChanged.isTrue
                       ? ButtonStyle(
                           backgroundColor: MaterialStateProperty.all<Color>(
-                            AppColors.primaryElement,
+                            Colors.green,
                           ),
                           foregroundColor: MaterialStateProperty.all<Color>(
                             Colors.white,
@@ -188,10 +196,10 @@ class UserTagSavePage extends StatelessWidget {
                         )
                       : ButtonStyle(
                           backgroundColor: MaterialStateProperty.all<Color>(
-                            AppColors.AppBarColor,
+                            Colors.green.withOpacity(0.6),
                           ),
                           foregroundColor: MaterialStateProperty.all<Color>(
-                            AppColors.LineColor,
+                            Colors.white.withOpacity(0.6),
                           ),
                           minimumSize:
                               MaterialStateProperty.all(const Size(60, 40)),
diff --git a/lib/run.dart b/lib/run.dart
new file mode 100644
index 0000000..54cfcdc
--- /dev/null
+++ b/lib/run.dart
@@ -0,0 +1,193 @@
+import 'package:drag_ball/drag_ball.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:flutter_easyloading/flutter_easyloading.dart';
+import 'package:flutter_screenutil/flutter_screenutil.dart';
+import 'package:get/get.dart';
+import 'package:image/image.dart' as img;
+
+import 'package:imboy/component/helper/func.dart';
+import 'package:imboy/component/ui/feedback_builder.dart';
+
+// ignore: depend_on_referenced_packages
+import 'package:jiffy/jiffy.dart';
+import 'package:feedback/feedback.dart';
+import 'package:niku/namespace.dart' as n;
+
+import 'package:imboy/component/helper/log.dart';
+import 'package:imboy/component/locales/locales.g.dart';
+import 'package:imboy/component/ui/common.dart';
+
+import 'package:imboy/page/bottom_navigation/bottom_navigation_view.dart';
+import 'package:imboy/page/pages.dart';
+import 'package:imboy/store/provider/attachment_provider.dart';
+import 'package:imboy/store/provider/feedback_provider.dart';
+import 'package:imboy/store/repository/user_repo_local.dart';
+
+import 'component/locales/locales.dart';
+import 'config/init.dart';
+import 'config/theme.dart';
+import 'page/passport/passport_view.dart';
+
+void run() async {
+  await Jiffy.setLocale(jiffyLocal(sysLang('jiffy')));
+  // 强制竖屏 DeviceOrientation.portraitUp
+  SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp])
+      .then((_) {
+    runApp(
+      BetterFeedback(
+        theme: FeedbackThemeData(
+          background: Colors.grey,
+          feedbackSheetColor: Colors.grey[50]!,
+          drawColors: [
+            Colors.red,
+            Colors.orange,
+            Colors.yellow,
+            Colors.green,
+            Colors.cyan,
+            Colors.blue,
+            Colors.purple,
+          ],
+        ),
+        feedbackBuilder: (context, onSubmit, scrollController) =>
+            IMBoyFeedbackForm(
+          onSubmit: onSubmit,
+          scrollController: scrollController,
+        ),
+        child: const IMBoyApp(),
+      ),
+    );
+  });
+}
+
+class IMBoyApp extends StatelessWidget {
+  const IMBoyApp({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    String lang = jiffyLocal(sysLang(''));
+    List<String> code = lang.split('_');
+    if (lang == 'ru') {
+      code.add('RU');
+    }
+    return Dragball(
+      icon: DecoratedBox(
+        decoration: BoxDecoration(
+          shape: BoxShape.circle,
+          color: Theme.of(context).colorScheme.background,
+        ),
+        child: const Padding(
+          padding: EdgeInsets.all(2),
+          child: Icon(
+            Icons.navigate_before_rounded,
+            size: 24,
+          ),
+        ),
+      ),
+      ball: SizedBox(
+        width: 50,
+        height: 28,
+        child: n.Row(const [
+          Space(width: 16),
+          Expanded(child: Text('FB')),
+          Space(width: 16)
+        ])
+          ..backgroundColor = Theme.of(context).colorScheme.background
+          // 垂直居中
+          ..mainAxisAlignment = MainAxisAlignment.spaceBetween,
+      ),
+      initialPosition: DragballPosition(
+        top: Get.height - 120,
+        isRight: true,
+        ballState: BallState.show,
+      ),
+      onTap: () {
+        BetterFeedback.of(context).show((UserFeedback feedback) async {
+          iPrint(
+              "BetterFeedback show extra ${feedback.extra.toString()} isLogin ${UserRepoLocal.to.isLogin}");
+          // Uint8List feedbackScreenshot = feedback.screenshot
+          if (feedback.text.isEmpty) {
+            EasyLoading.showError('feedback_content_required'.tr);
+            return;
+          }
+
+          img.Image image = img.decodeImage(feedback.screenshot)!;
+          final result = img.encodeJpg(image, quality: 70);
+
+          await AttachmentProvider.uploadBytes("feedback", result, (
+            Map<String, dynamic> resp,
+            String uri,
+          ) async {
+            FeedbackProvider p = FeedbackProvider();
+            var type = feedback.extra?['feedback_type'] ?? '';
+            var rating = feedback.extra?['rating'] ?? '';
+
+            Map<String, dynamic> data = {
+              'rating': rating,
+              'type': type.toString().split('.').last.replaceAll('_', ' '),
+              'contact_detail': feedback.extra?['contact_detail'] ?? '',
+              'description': feedback.text,
+              'screenshot': [uri],
+            };
+            bool res = await p.add(data);
+            if (res) {
+              EasyLoading.showSuccess('feedback_success_msg'.tr);
+            } else {
+              EasyLoading.showError('tip_failed'.tr);
+            }
+          }, (Error error) {
+            debugPrint("> on upload ${error.toString()}");
+          }, process: false);
+        });
+      },
+      onPositionChanged: (DragballPosition position) {
+        // debugPrint(position.toString());
+      },
+      child: ScreenUtilInit(
+        designSize: const Size(375, 812),
+        minTextAdapt: true,
+        splitScreenMode: true,
+        // fix https://github.com/flutter/flutter/issues/126585
+        useInheritedMediaQuery: true,
+        builder: (_, child) => GetMaterialApp(
+          navigatorKey: navigatorKey,
+          title: appName,
+          // 底部导航组件
+          home: UserRepoLocal.to.isLogin
+              ? BottomNavigationPage()
+              : PassportPage(),
+          debugShowCheckedModeBanner: false,
+          // getPages: AppPages.routes,
+          // initialRoute: AppPages.INITIAL,
+          // translations: TranslationService(),
+          navigatorObservers: [AppPages.observer],
+          // localizationsDelegates: [
+          //   GlobalMaterialLocalizations.delegate,
+          //   GlobalWidgetsLocalizations.delegate,
+          //   GlobalCupertinoLocalizations.delegate,
+          // ],
+          translationsKeys: AppTranslation.translations,
+
+          translations: IMBoyTranslations(),
+          // 翻译将在该语言环境中显示
+          // locale: const Locale('zh', 'CN'),
+          // locale: Get.deviceLocale,
+          locale: Locale(code[0], code[1]),
+          // 如果选择了无效的语言环境，则指定备用语言环境。
+          fallbackLocale: const Locale('en', 'US'),
+          // 添加一个回调语言选项，以备上面指定的语言翻译不存在
+          defaultTransition: Transition.fade,
+          // opaqueRoute: Get.isOpaqueRouteDefault,
+          // popGesture: Get.isPopGestureEnable,
+          builder: EasyLoading.init(),
+          theme: lightTheme,
+          darkTheme: darkTheme,
+          // 配置 本地存储 主题类型
+          themeMode: getLocalProfileAboutThemeModel(),
+          enableLog: true,
+          logWriterCallback: Logger.write,
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/service/assets.dart b/lib/service/assets.dart
index 8b6349d..6633297 100644
--- a/lib/service/assets.dart
+++ b/lib/service/assets.dart
@@ -1,9 +1,8 @@
 import 'dart:io';
-
-import 'package:imboy/component/helper/datetime.dart';
-import 'package:imboy/config/const.dart';
 import 'package:mime/mime.dart';
 
+import 'package:imboy/config/const.dart';
+import 'package:imboy/component/helper/datetime.dart';
 import 'encrypter.dart';
 
 class AssetsService {
diff --git a/lib/service/message.dart b/lib/service/message.dart
index 44b39df..c9887f7 100644
--- a/lib/service/message.dart
+++ b/lib/service/message.dart
@@ -2,6 +2,7 @@ import 'dart:async';
 import 'dart:convert';
 
 import 'package:flutter/cupertino.dart';
+
 // ignore: depend_on_referenced_packages
 import 'package:flutter_chat_types/flutter_chat_types.dart' as types;
 import 'package:get/get.dart';
@@ -150,7 +151,7 @@ class MessageService extends GetxService {
       //   String content = data['payload']['content'] ?? '';
       //   break;
       case '706': // 需要重新登录
-        WebSocketService.to.closeSocket();
+        WebSocketService.to.closeSocket(exit: true);
         Get.offAll(() => PassportPage());
         break;
     }
@@ -240,7 +241,7 @@ class MessageService extends GetxService {
         String did = payload['did'] ?? '';
         if (did != deviceId) {
           int serverTs = data['server_ts'] ?? 0;
-          WebSocketService.to.closeSocket();
+          WebSocketService.to.closeSocket(exit: true);
           UserRepoLocal.to.logout();
           Get.off(() => PassportPage(), arguments: {
             "msg_type": "logged_another_device",
@@ -629,7 +630,7 @@ class MessageService extends GetxService {
   }
 
   /// 清理无效的本地消息
-  /*
+/*
   Future<void> cleanInvalidLocalMsg({
     required String tableName,
     required String msgId,
diff --git a/lib/service/websocket.dart b/lib/service/websocket.dart
index 14ae545..8ccfdd3 100644
--- a/lib/service/websocket.dart
+++ b/lib/service/websocket.dart
@@ -9,9 +9,10 @@ import 'package:imboy/store/provider/user_provider.dart';
 import 'package:web_socket_channel/io.dart';
 import 'package:web_socket_channel/web_socket_channel.dart';
 
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/component/http/http_client.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/passport/passport_view.dart';
 import 'package:imboy/service/storage.dart';
@@ -35,6 +36,8 @@ class WebSocketService {
     return _instance!;
   }
 
+  // wsConnectLock 防止token过期的时候产生多个WS链接
+  bool wsConnectLock = false;
   static WebSocketService? _instance;
 
   Iterable<String> protocols = ['text', 'sip'];
@@ -126,7 +129,10 @@ class WebSocketService {
       iPrint('> ws openSocket _socketStatus: $_socketStatus;');
       return;
     }
-
+    if (wsConnectLock) {
+      return;
+    }
+    wsConnectLock = true;
     try {
       Map<String, dynamic> headers = await defaultHeaders();
       String tk = UserRepoLocal.to.accessToken;
@@ -173,6 +179,8 @@ class WebSocketService {
       closeSocket();
       _socketStatus = SocketStatus.SocketStatusFailed;
       iPrint("> openSocket $WS_URL error ${e.toString()}");
+    } finally {
+      wsConnectLock = false;
     }
   }
 
@@ -203,14 +211,15 @@ class WebSocketService {
       // 4000–4999		可以由应用使用。
       // 4006 通知客户端刷新token消息没有得到确认，系统主动关闭连接
       int closeCode = _webSocketChannel?.closeCode ?? 0;
-      closeSocket();
 
       switch (closeCode) {
         case 4006:
+          closeSocket(exit: true);
           await StorageService.to.remove(Keys.tokenKey);
           Get.offAll(() => PassportPage());
           break;
         default:
+          closeSocket();
           Future.delayed(const Duration(milliseconds: 1000), () {
             iPrint('_webSocketOnDone _reconnectTimes: $_reconnectTimes');
             _reconnect();
@@ -230,19 +239,22 @@ class WebSocketService {
   }
 
   void destroyReconnectTimer() {
+    _reconnectTimes = 0;
     _reconnectTimer?.cancel();
+    _reconnectTimer = null;
   }
 
   /// 关闭WebSocket
-  void closeSocket() {
+  void closeSocket({bool exit = false}) {
     iPrint('> ws closeSocket ${DateTime.now()}');
     // destroyHeartBeat();
     destroyReconnectTimer();
-    if (_webSocketChannel != null) {
-      iPrint('> ws WebSocket连接关闭 $WS_URL');
-      _webSocketChannel?.sink.close();
-      _webSocketChannel = null;
-      _socketStatus = SocketStatus.SocketStatusClosed;
+    iPrint('> ws WebSocket连接关闭 $WS_URL');
+    _webSocketChannel?.sink.close();
+    _webSocketChannel = null;
+    _socketStatus = SocketStatus.SocketStatusClosed;
+    if (exit) {
+      _instance = null;
     }
   }
 
@@ -250,13 +262,13 @@ class WebSocketService {
   Future<bool> sendMessage(String msg) async {
     bool result = false;
     if (isConnected == false) {
-      await openSocket();
+      await WebSocketService.to.openSocket();
     }
     // iPrint('> ws sendMsg $msg');
     try {
       result = _send(msg);
     } catch (e) {
-      await openSocket();
+      await WebSocketService.to.openSocket();
       result = _send(msg);
     }
     return result;
@@ -271,15 +283,14 @@ class WebSocketService {
   void _reconnect() {
     iPrint(
         '> ws _reconnect _reconnectTimes $_reconnectTimes < $_reconnectMax ${DateTime.now()}');
-    closeSocket();
     if (_reconnectTimes < _reconnectMax) {
-      openSocket(fromReconnect: true);
+      WebSocketService.to.openSocket(fromReconnect: true);
       _reconnectTimes += 1;
       _reconnectTimer?.cancel();
       _reconnectTimer = Timer.periodic(
         Duration(milliseconds: _heartTimes),
         (timer) {
-          openSocket(fromReconnect: true);
+          WebSocketService.to.openSocket(fromReconnect: true);
         },
       );
     } else {
diff --git a/lib/store/model/feedback_model.dart b/lib/store/model/feedback_model.dart
index 016be67..7668bec 100644
--- a/lib/store/model/feedback_model.dart
+++ b/lib/store/model/feedback_model.dart
@@ -10,6 +10,7 @@ class FeedbackModel {
   // String clientOperatingSystem;
   // String clientOperatingSystemVsn;
   String appVsn;
+
   //   bugReport,
   //   featureRequest,
   String type;
diff --git a/lib/store/model/message_model.dart b/lib/store/model/message_model.dart
index 398e97d..8170595 100644
--- a/lib/store/model/message_model.dart
+++ b/lib/store/model/message_model.dart
@@ -85,7 +85,7 @@ class MessageModel {
 
     return MessageModel(
       data[MessageRepo.id],
-      autoId: data[MessageRepo.autoId],
+      autoId: data[MessageRepo.autoId] ?? 0,
       type: data[MessageRepo.type],
       status: int.parse('${data[MessageRepo.status] ?? 0}'),
       fromId: data[MessageRepo.from] ?? '',
diff --git a/lib/store/provider/app_version_provider.dart b/lib/store/provider/app_version_provider.dart
index 920b3e7..0aabb62 100644
--- a/lib/store/provider/app_version_provider.dart
+++ b/lib/store/provider/app_version_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class AppVersionProvider extends HttpClient {
   Future<Map<String, dynamic>> check(String vsn) async {
diff --git a/lib/store/provider/attachment_provider.dart b/lib/store/provider/attachment_provider.dart
index 5e1f387..9c86b4e 100644
--- a/lib/store/provider/attachment_provider.dart
+++ b/lib/store/provider/attachment_provider.dart
@@ -1,6 +1,9 @@
 import 'dart:convert';
 import 'dart:io';
 import 'dart:typed_data';
+import 'package:video_compress/video_compress.dart';
+import 'package:wechat_assets_picker/wechat_assets_picker.dart';
+import 'package:xid/xid.dart';
 
 // ignore: depend_on_referenced_packages
 import 'package:crypto/crypto.dart';
@@ -9,14 +12,12 @@ import 'package:file_picker/file_picker.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
 import 'package:get/get.dart' as getx;
-import 'package:imboy/component/helper/datetime.dart';
+
 import 'package:imboy/config/const.dart';
+import 'package:imboy/component/helper/datetime.dart';
 import 'package:imboy/service/assets.dart';
 import 'package:imboy/store/model/entity_image.dart';
 import 'package:imboy/store/model/entity_video.dart';
-import 'package:video_compress/video_compress.dart';
-import 'package:wechat_assets_picker/wechat_assets_picker.dart';
-import 'package:xid/xid.dart';
 
 class AttachmentProvider {
   static Future<void> _upload(
diff --git a/lib/store/provider/auth_provider.dart b/lib/store/provider/auth_provider.dart
index df3f9b7..12af4bf 100644
--- a/lib/store/provider/auth_provider.dart
+++ b/lib/store/provider/auth_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class AuthProvider extends HttpClient {
   Future<String> getAssetsToken(String s) async {
diff --git a/lib/store/provider/contact_provider.dart b/lib/store/provider/contact_provider.dart
index 9e39cf2..3f2a8c8 100644
--- a/lib/store/provider/contact_provider.dart
+++ b/lib/store/provider/contact_provider.dart
@@ -1,8 +1,10 @@
 import 'package:dio/dio.dart';
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/store/model/contact_model.dart';
 import 'package:imboy/store/repository/contact_repo_sqlite.dart';
 
diff --git a/lib/store/provider/denylist_provider.dart b/lib/store/provider/denylist_provider.dart
index 1412231..48bf6fa 100644
--- a/lib/store/provider/denylist_provider.dart
+++ b/lib/store/provider/denylist_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class DenylistProvider extends HttpClient {
   Future<Map<String, dynamic>?> page({
diff --git a/lib/store/provider/feedback_provider.dart b/lib/store/provider/feedback_provider.dart
index 6e24e8a..60bbbbb 100644
--- a/lib/store/provider/feedback_provider.dart
+++ b/lib/store/provider/feedback_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class FeedbackProvider extends HttpClient {
   Future<Map<String, dynamic>?> page({
diff --git a/lib/store/provider/location_provider.dart b/lib/store/provider/location_provider.dart
index 5dce6bf..de9e2dd 100644
--- a/lib/store/provider/location_provider.dart
+++ b/lib/store/provider/location_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class LocationProvider extends HttpClient {
   Future<Map<String, dynamic>?> peopleNearby({
diff --git a/lib/store/provider/user_collect_provider.dart b/lib/store/provider/user_collect_provider.dart
index df03d1f..125a5c5 100644
--- a/lib/store/provider/user_collect_provider.dart
+++ b/lib/store/provider/user_collect_provider.dart
@@ -1,9 +1,10 @@
 import 'package:dio/dio.dart';
 import 'package:flutter/foundation.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class UserCollectProvider extends HttpClient {
   Future<Map<String, dynamic>?> page(Map<String, dynamic> args) async {
diff --git a/lib/store/provider/user_device_provider.dart b/lib/store/provider/user_device_provider.dart
index 426a56f..53f2b5f 100644
--- a/lib/store/provider/user_device_provider.dart
+++ b/lib/store/provider/user_device_provider.dart
@@ -1,7 +1,8 @@
 import 'package:flutter/foundation.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class UserDeviceProvider extends HttpClient {
   Future<Map<String, dynamic>?> page({
diff --git a/lib/store/provider/user_provider.dart b/lib/store/provider/user_provider.dart
index 51cfe15..ba6b1a8 100644
--- a/lib/store/provider/user_provider.dart
+++ b/lib/store/provider/user_provider.dart
@@ -1,11 +1,13 @@
 import 'package:connectivity_plus/connectivity_plus.dart';
 import 'package:dio/dio.dart';
 import 'package:get/get.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/helper/func.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_parse.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
+
 import 'package:imboy/config/init.dart';
 import 'package:imboy/page/passport/passport_view.dart';
 import 'package:imboy/service/encrypter.dart';
@@ -28,10 +30,13 @@ class UserProvider extends HttpClient {
     return resp.payload;
   }
 
-  Future<String> refreshAccessTokenApi(String refreshToken,
-      {bool checkNewToken = true}) async {
+  Future<String> refreshAccessTokenApi(
+    String refreshToken, {
+    bool checkNewToken = true,
+  }) async {
     if (strEmpty(refreshToken)) {
       await StorageService.to.remove(Keys.tokenKey);
+      WebSocketService.to.closeSocket(exit: true);
       Get.offAll(() => PassportPage());
       return "";
     }
@@ -61,7 +66,7 @@ class UserProvider extends HttpClient {
     String newToken = resp.payload?['token'] ?? '';
     if (checkNewToken && strEmpty(newToken) && UserRepoLocal.to.isLogin) {
       await StorageService.to.remove(Keys.tokenKey);
-      WebSocketService.to.closeSocket();
+      WebSocketService.to.closeSocket(exit: true);
       Get.offAll(() => PassportPage());
       return "";
     }
diff --git a/lib/store/provider/user_tag_provider.dart b/lib/store/provider/user_tag_provider.dart
index 477c9d1..cc905e0 100644
--- a/lib/store/provider/user_tag_provider.dart
+++ b/lib/store/provider/user_tag_provider.dart
@@ -1,8 +1,9 @@
 import 'package:flutter/foundation.dart';
 import 'package:flutter_easyloading/flutter_easyloading.dart';
+
+import 'package:imboy/config/const.dart';
 import 'package:imboy/component/http/http_client.dart';
 import 'package:imboy/component/http/http_response.dart';
-import 'package:imboy/config/const.dart';
 
 class UserTagProvider extends HttpClient {
   Future<Map<String, dynamic>?> page({
@@ -29,7 +30,7 @@ class UserTagProvider extends HttpClient {
   /// tag 为空表示移除表情
   Future<bool> relationAdd({
     required String objectId,
-    required List<String> tag,
+    required List<dynamic> tag,
     required String scene,
   }) async {
     IMBoyHttpResponse resp = await post(API.userTagRelationAdd, data: {
diff --git a/lib/store/repository/user_repo_local.dart b/lib/store/repository/user_repo_local.dart
index e0cda6c..d675a52 100644
--- a/lib/store/repository/user_repo_local.dart
+++ b/lib/store/repository/user_repo_local.dart
@@ -1,4 +1,5 @@
 import 'package:get/get.dart';
+
 import 'package:imboy/config/const.dart';
 import 'package:imboy/service/sqlite.dart';
 import 'package:imboy/service/storage.dart';
@@ -86,7 +87,7 @@ class UserRepoLocal extends GetxController {
     await StorageService.to.remove(Keys.currentUid);
     await StorageService.to.remove(Keys.currentUser);
 
-    WebSocketService.to.closeSocket();
+    WebSocketService.to.closeSocket(exit: true);
     SqliteService.to.close();
     return true;
   }
diff --git a/pubspec.lock b/pubspec.lock
index 964befa..e8b89d9 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -246,10 +246,10 @@ packages:
     dependency: transitive
     description:
       name: camera_avfoundation
-      sha256: "7d0763dfcbf060f56aa254a68c103210280bee9e97bbe4fdef23e257a4f70ab9"
+      sha256: "8b113e43ee4434c9244c03c905432a0d5956cedaded3cd7381abaab89ce50297"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "0.9.14"
+    version: "0.9.14+1"
   camera_platform_interface:
     dependency: transitive
     description:
@@ -382,10 +382,10 @@ packages:
     dependency: transitive
     description:
       name: dart_style
-      sha256: "40ae61a5d43feea6d24bd22c0537a6629db858963b99b4bc1c3db80676f32368"
+      sha256: "99e066ce75c89d6b29903d788a7bb9369cf754f7b24bf70bf4b6d6d6b26853b9"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "2.3.4"
+    version: "2.3.6"
   dart_webrtc:
     dependency: transitive
     description:
@@ -558,10 +558,10 @@ packages:
     dependency: "direct main"
     description:
       name: file_picker
-      sha256: "4e42aacde3b993c5947467ab640882c56947d9d27342a5b6f2895b23956954a6"
+      sha256: caa6bc229eab3e32eb2f37b53a5f9d22a6981474afd210c512a7546c1e1a04f6
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "6.1.1"
+    version: "6.2.0"
   file_selector_linux:
     dependency: transitive
     description:
@@ -756,10 +756,10 @@ packages:
     dependency: "direct main"
     description:
       name: flutter_local_notifications
-      sha256: c18f1de98fe0bb9dd5ba91e1330d4febc8b6a7de6aae3ffe475ef423723e72f3
+      sha256: "55b9b229307a10974b26296ff29f2e132256ba4bd74266939118eaefa941cb00"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "16.3.2"
+    version: "16.3.3"
   flutter_local_notifications_linux:
     dependency: transitive
     description:
@@ -793,10 +793,10 @@ packages:
     dependency: "direct main"
     description:
       name: flutter_markdown
-      sha256: a64c5323ac83ed2b7940d2b6288d160aa1753ff271ba9d9b2a86770414aa3eab
+      sha256: cb44f7831b23a6bdd0f501718b0d2e8045cbc625a15f668af37ddb80314821db
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "0.6.20+1"
+    version: "0.6.21"
   flutter_native_splash:
     dependency: "direct main"
     description:
@@ -857,26 +857,26 @@ packages:
     dependency: "direct main"
     description:
       name: flutter_sound
-      sha256: b2b8381a113fe31fcaa7e089deac2d5627d0f0f57ff8a05df1716a63eb309859
+      sha256: "9ab174855cf1de829c862eaf655b79aa5bd2a785fc4ca2731095298a237bf7d1"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "9.3.8"
+    version: "9.4.6"
   flutter_sound_platform_interface:
     dependency: "direct main"
     description:
       name: flutter_sound_platform_interface
-      sha256: "9210b45cd4e25228b826fc8ff86a4be8f14d2569657cdf070855b7a4bc178e42"
+      sha256: "5c5d92b481562168c2d80269dd98c1bf38ee09e45990c77d33ee8a84f4cd4860"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "9.3.8"
+    version: "9.4.6"
   flutter_sound_web:
     dependency: transitive
     description:
       name: flutter_sound_web
-      sha256: "5294ffb09503575216029d936bb5d350516b35824cadac7f869145d1bbfcc6e1"
+      sha256: "14c8e5dd0419ed826c8decd7c3730c2b53fe07d282278f45dd2ba01faf621aa6"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "9.3.8"
+    version: "9.4.6"
   flutter_spinkit:
     dependency: transitive
     description:
@@ -939,10 +939,10 @@ packages:
     dependency: "direct main"
     description:
       name: fvp
-      sha256: "995328479ba4641da6760ddc84a168db157a3b9db4f0417fa68713d99344a146"
+      sha256: "3ac70b4282489788b7746a029226c24477dbacbf0117a3b20c5daebd21a4c0d1"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "0.14.0"
+    version: "0.15.0"
   get:
     dependency: "direct main"
     description:
@@ -1070,10 +1070,10 @@ packages:
     dependency: transitive
     description:
       name: image_picker_for_web
-      sha256: e2423c53a68b579a7c37a1eda967b8ae536c3d98518e5db95ca1fe5719a730a3
+      sha256: "6a1704fdd75022272e7e7a897a9068e9c2ff3cd6a66820bf3ded810633eac954"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "3.0.2"
+    version: "3.0.3"
   image_picker_ios:
     dependency: transitive
     description:
@@ -1262,10 +1262,10 @@ packages:
     dependency: "direct main"
     description:
       name: logger
-      sha256: "6bbb9d6f7056729537a4309bda2e74e18e5d9f14302489cc1e93f33b3fe32cac"
+      sha256: b3ff55aeb08d9d8901b767650285872cb1bb8f508373b3e348d60268b0c7f770
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "2.0.2+1"
+    version: "2.1.0"
   logging:
     dependency: transitive
     description:
@@ -1286,18 +1286,18 @@ packages:
     dependency: "direct main"
     description:
       name: map_launcher
-      sha256: cc94eff23dc35b56142bedc4f8553024454dfa8351508116888a418858d18ac0
+      sha256: b9c11a1d32740ef8393559148716cc0fec38a569fdcf3fb569375114cf30988a
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "3.1.0"
+    version: "3.2.0"
   markdown:
     dependency: transitive
     description:
       name: markdown
-      sha256: "1b134d9f8ff2da15cb298efe6cd8b7d2a78958c1b00384ebcbdf13fe340a6c90"
+      sha256: ef2a1298144e3f985cc736b22e0ccdaf188b5b3970648f2d9dc13efd1d9df051
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "7.2.1"
+    version: "7.2.2"
   matcher:
     dependency: transitive
     description:
@@ -1542,10 +1542,10 @@ packages:
     dependency: transitive
     description:
       name: phone_numbers_parser
-      sha256: d0dad4f5b61c3d959b069df088ef7242ffed42a3cf74c7549fd7c324e1eb964e
+      sha256: ebe08725e63218a6ae2bf9129b7130332cb2ababa4988f07d6ddce48b0c21e06
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "8.1.3"
+    version: "8.2.1"
   photo_manager:
     dependency: "direct main"
     description:
@@ -1631,10 +1631,10 @@ packages:
     dependency: transitive
     description:
       name: provider
-      sha256: "9a96a0a19b594dbc5bf0f1f27d2bc67d5f95957359b461cd9feb44ed6ae75096"
+      sha256: c8a055ee5ce3fd98d6fc872478b03823ffdb448699c6ebdbbc71d59b596fd48c
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "6.1.1"
+    version: "6.1.2"
   pub_semver:
     dependency: transitive
     description:
@@ -1735,18 +1735,18 @@ packages:
     dependency: transitive
     description:
       name: sentry
-      sha256: d2ee9c850d876d285f22e2e662f400ec2438df9939fe4acd5d780df9841794ce
+      sha256: a524a87d096799b775530176c8c082afe7aa1f10cc31ba078fecdd74e9afc923
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "7.16.1"
+    version: "7.17.0"
   sentry_flutter:
     dependency: "direct main"
     description:
       name: sentry_flutter
-      sha256: "5b428c189c825f16fb14e9166529043f06b965d5b59bfc3a1415e39c082398c0"
+      sha256: e0f8367f8f7c74dba9f7521f71700bce6c6ee065cf342f065d4fce411b84fc7b
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "7.16.1"
+    version: "7.17.0"
   shared_preferences:
     dependency: "direct main"
     description:
@@ -1964,10 +1964,10 @@ packages:
     dependency: "direct main"
     description:
       name: textfield_tags
-      sha256: c1d215f481e7e8da5c79719825e595db4f829bf1ad3fce4c7ce43d340aa72683
+      sha256: "0b8e3c0a88a1a4a3987d1c25e70cef601d00b3164ff2bf9a1661db034f160c63"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "2.0.2"
+    version: "3.0.0"
   timezone:
     dependency: transitive
     description:
@@ -2116,10 +2116,10 @@ packages:
     dependency: "direct main"
     description:
       name: video_player
-      sha256: fbf28ce8bcfe709ad91b5789166c832cb7a684d14f571a81891858fefb5bb1c2
+      sha256: afc65f4b8bcb2c188f64a591f84fb471f4f2e19fc607c65fd8d2f8fedb3dec23
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "2.8.2"
+    version: "2.8.3"
   video_player_android:
     dependency: transitive
     description:
@@ -2148,10 +2148,10 @@ packages:
     dependency: transitive
     description:
       name: video_player_web
-      sha256: "8e9cb7fe94e49490e67bbc15149691792b58a0ade31b32e3f3688d104a0e057b"
+      sha256: "41245cef5ef29c4585dbabcbcbe9b209e34376642c7576cabf11b4ad9289d6e4"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "2.2.0"
+    version: "2.3.0"
   visibility_detector:
     dependency: transitive
     description:
@@ -2260,10 +2260,10 @@ packages:
     dependency: "direct main"
     description:
       name: wechat_assets_picker
-      sha256: dc289e7418dff078ab5b4383dceda83ee0afb5b98f16f3bc0cc58da2e672d3bd
+      sha256: "6e52853f7dbc6f7aec10675d0064167eb7fc65f636ed22e55c38c450f5b75918"
       url: "https://pub.flutter-io.cn"
     source: hosted
-    version: "9.0.0"
+    version: "9.0.1"
   wechat_camera_picker:
     dependency: "direct main"
     description:
diff --git a/pubspec.yaml b/pubspec.yaml
index f83cb16..def36db 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -4,7 +4,7 @@ description: A new Flutter project for IM.
 # The following line prevents the package from being accidentally published to
 # pub.dev using `pub publish`. This is preferred for private packages.
 publish_to: 'none' # Remove this line if you wish to publish to pub.dev
-version: 0.3.6
+version: 0.3.7
 
 environment:
   sdk: ">=2.17.0 <=4.0.0"
@@ -89,7 +89,7 @@ dependencies:
   camera: ^0.10.5+9
   #wechat_camera_picker: ^4.2.0-dev.3
   wechat_camera_picker: ^4.2.0
-  wechat_assets_picker: ^9.0.0
+  wechat_assets_picker: ^9.0.1
   # Photo View provides a gesture sensitive zoomable widget. Photo View is largely used to show interactive images and other stuff such as SVG.
   photo_view: ^0.14.0 #
   # 照片管理器
@@ -101,7 +101,7 @@ dependencies:
   image_picker: ^1.0.7
   image_picker_macos: ^0.2.1+1
   image_picker_platform_interface: ^2.9.4
-  file_picker: ^6.1.1
+  file_picker: ^6.2.0
   open_file: ^3.3.2
   # image_crop: ^0.4.1
   # image_crop:
@@ -113,8 +113,8 @@ dependencies:
       url: https://gitee.com/imboy-tripartite-deps/image_crop.git
       ref: leeyi
 
-  logger: ^2.0.2+1
-  sentry_flutter: ^7.16.1
+  logger: ^2.1.0
+  sentry_flutter: ^7.17.0
 
   # 用于访问加速度计、陀螺仪和磁力计传感器的 Flutter 插件。
   #sensors_plus: ^4.0.1
@@ -122,7 +122,7 @@ dependencies:
   flutter_screenutil: ^5.9.0
   # 页面刷新
   easy_refresh: ^3.3.4
-  # https://github.com/letsar/flutter_slidable
+  # https://github.com/letsar/flutter_slidjable
   flutter_slidable: ^3.0.1
   # 消息提醒的红点效果
   badges: ^3.1.2
@@ -176,12 +176,12 @@ dependencies:
   sqflite_common_ffi: ^2.3.2+1
   #sqlite3: ^1.11.2
   # 一个跨平台插件，用于显示和安排 Flutter 应用程序的本地通知，并能够针对每个平台进行自定义。
-  flutter_local_notifications: ^16.3.2
+  flutter_local_notifications: ^16.3.3
   #桌面图标提醒
   flutter_app_badger: ^1.5.0
   # 录音
-  flutter_sound: ^9.3.8
-  flutter_sound_platform_interface: ^9.3.8
+  flutter_sound: ^9.4.6
+  flutter_sound_platform_interface: ^9.4.6
   audio_session: ^0.1.18
   # 语音消息播放器
   voice_message_package: ^2.1.4
@@ -208,7 +208,7 @@ dependencies:
   device_info_plus: ^9.1.2
   package_info_plus: ^5.0.1
   # Flutter 的 Markdown 渲染器
-  flutter_markdown: ^0.6.20+1
+  flutter_markdown: ^0.6.21
   # 滑动吸顶
   sliding_up_panel: ^2.0.0+1
   # 用于 Flutter 的 SVG 渲染和小部件库，允许绘制和显示可缩放矢量图形 1.1 文件。
@@ -218,14 +218,14 @@ dependencies:
   # dart 对象比较
   equatable: ^2.0.5
   # 用于查找设备上安装的可用地图并使用标记启动它们或显示方向。
-  map_launcher: ^3.1.0
+  map_launcher: ^3.2.0
   # 视频播放器插件
-  video_player: ^2.8.2
+  video_player: ^2.8.3
   # video_player的插件，支持所有桌面/移动平台。硬件解码器，最佳渲染。通过 FFmpeg 支持大多数格式
-  fvp: ^0.14.0
+  fvp: ^0.15.0
   #fvp: ^0.12.0
   # 标签编辑框
-  textfield_tags: ^2.0.2
+  textfield_tags: ^3.0.0
   #filter_list: ^1.0.2
   #filter_list:
   #  path: plugin/flutter_plugin_filter_list
diff --git a/test/widget_test.dart b/test/widget_test.dart
index d980151..fc77763 100644
--- a/test/widget_test.dart
+++ b/test/widget_test.dart
@@ -7,7 +7,7 @@
 
 import 'package:flutter/material.dart';
 import 'package:flutter_test/flutter_test.dart';
-import 'package:imboy/main.dart';
+import 'package:imboy/run.dart';
 
 void main() {
   testWidgets('Counter increments smoke test', (WidgetTester tester) async {
